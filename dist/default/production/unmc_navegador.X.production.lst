

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Fri Nov 10 19:18:51 2017

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F26J50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    58                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    59  0000                     
    60                           	psect	idataCOMRAM
    61  002448                     __pidataCOMRAM:
    62                           	opt stack 0
    63                           
    64                           ;initializer for _anio
    65  002448  0011               	dw	17
    66                           
    67                           ;initializer for _dia
    68  00244A  0012               	dw	18
    69                           
    70                           ;initializer for _diasem
    71  00244C  0005               	dw	5
    72                           
    73                           ;initializer for _hora
    74  00244E  000E               	dw	14
    75                           
    76                           ;initializer for _mes
    77  002450  0008               	dw	8
    78                           
    79                           ;initializer for _ultimoRecorrido
    80  002452  FFFF               	dw	65535
    81                           
    82                           	psect	idataBANK0
    83  002454                     __pidataBANK0:
    84                           	opt stack 0
    85                           
    86                           ;initializer for _columna
    87  002454  0009               	dw	9
    88                           
    89                           ;initializer for _fila
    90  002456  0002               	dw	2
    91                           
    92                           	psect	smallconst
    93  000F00                     __psmallconst:
    94                           	opt stack 0
    95  000F00  00                 	db	0
    96  000F01                     _dpowers:
    97                           	opt stack 0
    98  000F01  0001               	dw	1
    99  000F03  000A               	dw	10
   100  000F05  0064               	dw	100
   101  000F07  03E8               	dw	1000
   102  000F09  2710               	dw	10000
   103  000F0B                     __end_of_dpowers:
   104                           	opt stack 0
   105  000F0B                     _LCD_INIT_STRING:
   106                           	opt stack 0
   107  000F0B  28                 	db	40
   108  000F0C  0C                 	db	12
   109  000F0D  01                 	db	1
   110  000F0E  06                 	db	6
   111  000F0F                     __end_of_LCD_INIT_STRING:
   112                           	opt stack 0
   113  000F0F                     STR_3:
   114                           
   115                           ; BSR set to: 15
   116  000F0F  54                 	db	84	;'T'
   117  000F10  49                 	db	73	;'I'
   118  000F11  45                 	db	69	;'E'
   119  000F12  4D                 	db	77	;'M'
   120  000F13  50                 	db	80	;'P'
   121  000F14  4F                 	db	79	;'O'
   122  000F15  20                 	db	32
   123  000F16  44                 	db	68	;'D'
   124  000F17  45                 	db	69	;'E'
   125  000F18  20                 	db	32
   126  000F19  56                 	db	86	;'V'
   127  000F1A  55                 	db	85	;'U'
   128  000F1B  45                 	db	69	;'E'
   129  000F1C  4C                 	db	76	;'L'
   130  000F1D  54                 	db	84	;'T'
   131  000F1E  41                 	db	65	;'A'
   132  000F1F  00                 	db	0
   133  000F20                     STR_10:
   134                           
   135                           ; BSR set to: 15
   136  000F20  56                 	db	86	;'V'
   137  000F21  55                 	db	85	;'U'
   138  000F22  45                 	db	69	;'E'
   139  000F23  4C                 	db	76	;'L'
   140  000F24  54                 	db	84	;'T'
   141  000F25  41                 	db	65	;'A'
   142  000F26  20                 	db	32
   143  000F27  4E                 	db	78	;'N'
   144  000F28  52                 	db	82	;'R'
   145  000F29  4F                 	db	79	;'O'
   146  000F2A  20                 	db	32
   147  000F2B  25                 	db	37
   148  000F2C  30                 	db	48	;'0'
   149  000F2D  31                 	db	49	;'1'
   150  000F2E  75                 	db	117	;'u'
   151  000F2F  00                 	db	0
   152  000F30                     STR_2:
   153                           
   154                           ; BSR set to: 15
   155  000F30  43                 	db	67	;'C'
   156  000F31  52                 	db	82	;'R'
   157  000F32  4F                 	db	79	;'O'
   158  000F33  4E                 	db	78	;'N'
   159  000F34  4F                 	db	79	;'O'
   160  000F35  4D                 	db	77	;'M'
   161  000F36  45                 	db	69	;'E'
   162  000F37  54                 	db	84	;'T'
   163  000F38  52                 	db	82	;'R'
   164  000F39  41                 	db	65	;'A'
   165  000F3A  52                 	db	82	;'R'
   166  000F3B  20                 	db	32
   167  000F3C  4D                 	db	77	;'M'
   168  000F3D  49                 	db	73	;'I'
   169  000F3E  00                 	db	0
   170  000F3F                     STR_1:
   171                           
   172                           ; BSR set to: 15
   173  000F3F  25                 	db	37
   174  000F40  30                 	db	48	;'0'
   175  000F41  31                 	db	49	;'1'
   176  000F42  75                 	db	117	;'u'
   177  000F43  3A                 	db	58	;':'
   178  000F44  25                 	db	37
   179  000F45  30                 	db	48	;'0'
   180  000F46  32                 	db	50	;'2'
   181  000F47  75                 	db	117	;'u'
   182  000F48  2E                 	db	46
   183  000F49  25                 	db	37
   184  000F4A  30                 	db	48	;'0'
   185  000F4B  33                 	db	51	;'3'
   186  000F4C  75                 	db	117	;'u'
   187  000F4D  00                 	db	0
   188  000F4E                     STR_5:
   189                           
   190                           ; BSR set to: 15
   191  000F4E  43                 	db	67	;'C'
   192  000F4F  52                 	db	82	;'R'
   193  000F50  4F                 	db	79	;'O'
   194  000F51  4E                 	db	78	;'N'
   195  000F52  4F                 	db	79	;'O'
   196  000F53  4D                 	db	77	;'M'
   197  000F54  45                 	db	69	;'E'
   198  000F55  54                 	db	84	;'T'
   199  000F56  52                 	db	82	;'R'
   200  000F57  41                 	db	65	;'A'
   201  000F58  4E                 	db	78	;'N'
   202  000F59  44                 	db	68	;'D'
   203  000F5A  4F                 	db	79	;'O'
   204  000F5B  00                 	db	0
   205  000F5C                     STR_4:
   206                           
   207                           ; BSR set to: 15
   208  000F5C  43                 	db	67	;'C'
   209  000F5D  4C                 	db	76	;'L'
   210  000F5E  49                 	db	73	;'I'
   211  000F5F  43                 	db	67	;'C'
   212  000F60  4B                 	db	75	;'K'
   213  000F61  20                 	db	32
   214  000F62  49                 	db	73	;'I'
   215  000F63  4E                 	db	78	;'N'
   216  000F64  49                 	db	73	;'I'
   217  000F65  43                 	db	67	;'C'
   218  000F66  49                 	db	73	;'I'
   219  000F67  41                 	db	65	;'A'
   220  000F68  52                 	db	82	;'R'
   221  000F69  00                 	db	0
   222  000F6A                     
   223                           ; BSR set to: 15
   224  000F6A  73                 	db	115	;'s'
   225  000F6B  65                 	db	101	;'e'
   226  000F6C  67                 	db	103	;'g'
   227  000F6D  75                 	db	117	;'u'
   228  000F6E  6E                 	db	110	;'n'
   229  000F6F  64                 	db	100	;'d'
   230  000F70  6F                 	db	111	;'o'
   231  000F71  73                 	db	115	;'s'
   232  000F72  20                 	db	32
   233  000F73  25                 	db	37
   234  000F74  30                 	db	48	;'0'
   235  000F75  33                 	db	51	;'3'
   236  000F76  75                 	db	117	;'u'
   237  000F77  00                 	db	0
   238  000F78                     STR_8:
   239                           
   240                           ; BSR set to: 15
   241  000F78  4D                 	db	77	;'M'
   242  000F79  45                 	db	69	;'E'
   243  000F7A  4A                 	db	74	;'J'
   244  000F7B  4F                 	db	79	;'O'
   245  000F7C  52                 	db	82	;'R'
   246  000F7D  20                 	db	32
   247  000F7E  56                 	db	86	;'V'
   248  000F7F  55                 	db	85	;'U'
   249  000F80  45                 	db	69	;'E'
   250  000F81  4C                 	db	76	;'L'
   251  000F82  54                 	db	84	;'T'
   252  000F83  41                 	db	65	;'A'
   253  000F84  00                 	db	0
   254  000F85                     STR_9:
   255                           
   256                           ; BSR set to: 15
   257  000F85  2D                 	db	45
   258  000F86  25                 	db	37
   259  000F87  30                 	db	48	;'0'
   260  000F88  32                 	db	50	;'2'
   261  000F89  75                 	db	117	;'u'
   262  000F8A  2E                 	db	46
   263  000F8B  25                 	db	37
   264  000F8C  30                 	db	48	;'0'
   265  000F8D  33                 	db	51	;'3'
   266  000F8E  75                 	db	117	;'u'
   267  000F8F  00                 	db	0
   268  000F90                     STR_7:
   269                           
   270                           ; BSR set to: 15
   271  000F90  54                 	db	84	;'T'
   272  000F91  55                 	db	85	;'U'
   273  000F92  20                 	db	32
   274  000F93  54                 	db	84	;'T'
   275  000F94  49                 	db	73	;'I'
   276  000F95  45                 	db	69	;'E'
   277  000F96  4D                 	db	77	;'M'
   278  000F97  50                 	db	80	;'P'
   279  000F98  4F                 	db	79	;'O'
   280  000F99  00                 	db	0
   281  0000                     
   282                           ; #config settings
   283  000F9A  00                 	db	0	; dummy byte at the end
   284  0000                     
   285                           	psect	nvBANK0
   286  0000EC                     __pnvBANK0:
   287                           	opt stack 0
   288  0000EC                     _anio_d:
   289                           	opt stack 0
   290  0000EC                     	ds	1
   291  0000ED                     _anio_u:
   292                           	opt stack 0
   293  0000ED                     	ds	1
   294  0000EE                     _dia_semana:
   295                           	opt stack 0
   296  0000EE                     	ds	1
   297  0000EF                     _fecha_d:
   298                           	opt stack 0
   299  0000EF                     	ds	1
   300  0000F0                     _fecha_u:
   301                           	opt stack 0
   302  0000F0                     	ds	1
   303  0000F1                     _hora_d:
   304                           	opt stack 0
   305  0000F1                     	ds	1
   306  0000F2                     _hora_u:
   307                           	opt stack 0
   308  0000F2                     	ds	1
   309  0000F3                     _mes_d:
   310                           	opt stack 0
   311  0000F3                     	ds	1
   312  0000F4                     _mes_u:
   313                           	opt stack 0
   314  0000F4                     	ds	1
   315  0000F5                     _minuto_d:
   316                           	opt stack 0
   317  0000F5                     	ds	1
   318  0000F6                     _minuto_u:
   319                           	opt stack 0
   320  0000F6                     	ds	1
   321  0000F7                     _segundo_d:
   322                           	opt stack 0
   323  0000F7                     	ds	1
   324  0000F8                     _segundo_u:
   325                           	opt stack 0
   326  0000F8                     	ds	1
   327  0000                     _ANCON0	set	3912
   328  0000                     _RTCCFG	set	3903
   329  0000                     _RTCCFGbits	set	3903
   330  0000                     _ADCON0	set	4034
   331  0000                     _ADCON1	set	4033
   332  0000                     _ALRMCFGbits	set	3985
   333  0000                     _EECON2	set	4007
   334  0000                     _INTCONbits	set	4082
   335  0000                     _LATBbits	set	3978
   336  0000                     _OSCCONbits	set	4051
   337  0000                     _OSCTUNEbits	set	3995
   338  0000                     _PIE3bits	set	4003
   339  0000                     _PORTAbits	set	3968
   340  0000                     _RTCVALH	set	3993
   341  0000                     _RTCVALL	set	3992
   342  0000                     _T1CONbits	set	4045
   343  0000                     _TRISA	set	3986
   344  0000                     _TRISB	set	3987
   345  0000                     _TRISBbits	set	3987
   346  0000                     _TRISC	set	3988
   347                           
   348                           	psect	cinit
   349  001E82                     __pcinit:
   350                           	opt stack 0
   351  001E82                     start_initialization:
   352                           	opt stack 0
   353  001E82                     __initialization:
   354                           	opt stack 0
   355                           
   356                           ; Clear objects allocated to BANK0 (140 bytes)
   357  001E82  EE00  F060         	lfsr	0,__pbssBANK0
   358  001E86  0E8C               	movlw	140
   359  001E88                     clear_0:
   360  001E88  6AEE               	clrf	postinc0,c
   361  001E8A  06E8               	decf	wreg,f,c
   362  001E8C  E1FD               	bnz	clear_0
   363                           
   364                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   365  001E8E  6A5F               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   366                           
   367                           ; Clear objects allocated to COMRAM (44 bytes)
   368  001E90  EE00  F001         	lfsr	0,__pbssCOMRAM
   369  001E94  0E2C               	movlw	44
   370  001E96                     clear_1:
   371  001E96  6AEE               	clrf	postinc0,c
   372  001E98  06E8               	decf	wreg,f,c
   373  001E9A  E1FD               	bnz	clear_1
   374                           
   375                           ; Initialize objects allocated to BANK0 (4 bytes)
   376                           ; load TBLPTR registers with __pidataBANK0
   377  001E9C  0E54               	movlw	low __pidataBANK0
   378  001E9E  6EF6               	movwf	tblptrl,c
   379  001EA0  0E24               	movlw	high __pidataBANK0
   380  001EA2  6EF7               	movwf	tblptrh,c
   381  001EA4  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   382  001EA6  6EF8               	movwf	tblptru,c
   383  001EA8  EE00  F0F9         	lfsr	0,__pdataBANK0
   384  001EAC  EE10 F004          	lfsr	1,4
   385  001EB0                     copy_data0:
   386  001EB0  0009               	tblrd		*+
   387  001EB2  CFF5 FFEE          	movff	tablat,postinc0
   388  001EB6  50E5               	movf	postdec1,w,c
   389  001EB8  50E1               	movf	fsr1l,w,c
   390  001EBA  E1FA               	bnz	copy_data0
   391                           
   392                           ; Initialize objects allocated to COMRAM (12 bytes)
   393                           ; load TBLPTR registers with __pidataCOMRAM
   394  001EBC  0E48               	movlw	low __pidataCOMRAM
   395  001EBE  6EF6               	movwf	tblptrl,c
   396  001EC0  0E24               	movlw	high __pidataCOMRAM
   397  001EC2  6EF7               	movwf	tblptrh,c
   398  001EC4  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   399  001EC6  6EF8               	movwf	tblptru,c
   400  001EC8  EE00  F053         	lfsr	0,__pdataCOMRAM
   401  001ECC  EE10 F00C          	lfsr	1,12
   402  001ED0                     copy_data1:
   403  001ED0  0009               	tblrd		*+
   404  001ED2  CFF5 FFEE          	movff	tablat,postinc0
   405  001ED6  50E5               	movf	postdec1,w,c
   406  001ED8  50E1               	movf	fsr1l,w,c
   407  001EDA  E1FA               	bnz	copy_data1
   408  001EDC                     end_of_initialization:
   409                           	opt stack 0
   410  001EDC                     __end_of__initialization:
   411                           	opt stack 0
   412  001EDC  0E00               	movlw	low (__Lmediumconst shr (0+16))
   413  001EDE  6EF8               	movwf	tblptru,c
   414  001EE0  0100               	movlb	0
   415  001EE2  EF52  F011         	goto	_main	;jump to C main() function
   416                           tblptru	equ	0xFF8
   417                           tblptrh	equ	0xFF7
   418                           tblptrl	equ	0xFF6
   419                           tablat	equ	0xFF5
   420                           postinc0	equ	0xFEE
   421                           wreg	equ	0xFE8
   422                           postdec1	equ	0xFE5
   423                           fsr1l	equ	0xFE1
   424                           
   425                           	psect	bitbssCOMRAM
   426  0002F8                     __pbitbssCOMRAM:
   427                           	opt stack 0
   428  0002F8                     _flag:
   429                           	opt stack 0
   430  0002F8                     	ds	1
   431                           tblptru	equ	0xFF8
   432                           tblptrh	equ	0xFF7
   433                           tblptrl	equ	0xFF6
   434                           tablat	equ	0xFF5
   435                           postinc0	equ	0xFEE
   436                           wreg	equ	0xFE8
   437                           postdec1	equ	0xFE5
   438                           fsr1l	equ	0xFE1
   439                           
   440                           	psect	bssCOMRAM
   441  000001                     __pbssCOMRAM:
   442                           	opt stack 0
   443  000001                     _cursorVuelta:
   444                           	opt stack 0
   445  000001                     	ds	2
   446  000003                     _estadoCentro:
   447                           	opt stack 0
   448  000003                     	ds	2
   449  000005                     _flajReloj:
   450                           	opt stack 0
   451  000005                     	ds	2
   452  000007                     _milesima:
   453                           	opt stack 0
   454  000007                     	ds	2
   455  000009                     _milesimaVuelta:
   456                           	opt stack 0
   457  000009                     	ds	2
   458  00000B                     _milesimasDisplay:
   459                           	opt stack 0
   460  00000B                     	ds	2
   461  00000D                     _minuto:
   462                           	opt stack 0
   463  00000D                     	ds	2
   464  00000F                     _nroVuelta:
   465                           	opt stack 0
   466  00000F                     	ds	2
   467  000011                     _segundo:
   468                           	opt stack 0
   469  000011                     	ds	2
   470  000013                     _segundosParciales:
   471                           	opt stack 0
   472  000013                     	ds	2
   473  000015                     _segundosTotales:
   474                           	opt stack 0
   475  000015                     	ds	2
   476  000017                     _sumaMilesimasVueltas:
   477                           	opt stack 0
   478  000017                     	ds	2
   479  000019                     _sumaMinutosVueltas:
   480                           	opt stack 0
   481  000019                     	ds	2
   482  00001B                     _sumaSegundosVueltas:
   483                           	opt stack 0
   484  00001B                     	ds	2
   485  00001D                     _unMinuto:
   486                           	opt stack 0
   487  00001D                     	ds	2
   488  00001F                     _unMinutoParcial:
   489                           	opt stack 0
   490  00001F                     	ds	2
   491  000021                     _unSegundo:
   492                           	opt stack 0
   493  000021                     	ds	2
   494  000023                     _unaMilesima:
   495                           	opt stack 0
   496  000023                     	ds	2
   497  000025                     _RtccDate:
   498                           	opt stack 0
   499  000025                     	ds	4
   500  000029                     _RtccTime:
   501                           	opt stack 0
   502  000029                     	ds	4
   503                           tblptru	equ	0xFF8
   504                           tblptrh	equ	0xFF7
   505                           tblptrl	equ	0xFF6
   506                           tablat	equ	0xFF5
   507                           postinc0	equ	0xFEE
   508                           wreg	equ	0xFE8
   509                           postdec1	equ	0xFE5
   510                           fsr1l	equ	0xFE1
   511                           
   512                           	psect	dataCOMRAM
   513  000053                     __pdataCOMRAM:
   514                           	opt stack 0
   515  000053                     _anio:
   516                           	opt stack 0
   517  000053                     	ds	2
   518  000055                     _dia:
   519                           	opt stack 0
   520  000055                     	ds	2
   521  000057                     _diasem:
   522                           	opt stack 0
   523  000057                     	ds	2
   524  000059                     _hora:
   525                           	opt stack 0
   526  000059                     	ds	2
   527  00005B                     _mes:
   528                           	opt stack 0
   529  00005B                     	ds	2
   530  00005D                     _ultimoRecorrido:
   531                           	opt stack 0
   532  00005D                     	ds	2
   533                           tblptru	equ	0xFF8
   534                           tblptrh	equ	0xFF7
   535                           tblptrl	equ	0xFF6
   536                           tablat	equ	0xFF5
   537                           postinc0	equ	0xFEE
   538                           wreg	equ	0xFE8
   539                           postdec1	equ	0xFE5
   540                           fsr1l	equ	0xFE1
   541                           
   542                           	psect	bssBANK0
   543  000060                     __pbssBANK0:
   544                           	opt stack 0
   545  000060                     _vMilesimas:
   546                           	opt stack 0
   547  000060                     	ds	20
   548  000074                     _vMinutos:
   549                           	opt stack 0
   550  000074                     	ds	20
   551  000088                     _vSegundos:
   552                           	opt stack 0
   553  000088                     	ds	20
   554  00009C                     _RtccAlrmTimeDate:
   555                           	opt stack 0
   556  00009C                     	ds	8
   557  0000A4                     _RtccTimeDate:
   558                           	opt stack 0
   559  0000A4                     	ds	8
   560  0000AC                     _Rtcc_read_TimeDate:
   561                           	opt stack 0
   562  0000AC                     	ds	8
   563  0000B4                     _RtccTimeVal:
   564                           	opt stack 0
   565  0000B4                     	ds	4
   566  0000B8                     _a:
   567                           	opt stack 0
   568  0000B8                     	ds	2
   569  0000BA                     _b:
   570                           	opt stack 0
   571  0000BA                     	ds	2
   572  0000BC                     _c:
   573                           	opt stack 0
   574  0000BC                     	ds	2
   575  0000BE                     _cambioEstadoAbajo:
   576                           	opt stack 0
   577  0000BE                     	ds	2
   578  0000C0                     _estadoAnteriorCentro:
   579                           	opt stack 0
   580  0000C0                     	ds	2
   581  0000C2                     _i:
   582                           	opt stack 0
   583  0000C2                     	ds	2
   584  0000C4                     _j:
   585                           	opt stack 0
   586  0000C4                     	ds	2
   587  0000C6                     _k:
   588                           	opt stack 0
   589  0000C6                     	ds	2
   590  0000C8                     _mejorVuelta:
   591                           	opt stack 0
   592  0000C8                     	ds	2
   593  0000CA                     _numeroVuelta:
   594                           	opt stack 0
   595  0000CA                     	ds	2
   596  0000CC                     _primeraVuelta:
   597                           	opt stack 0
   598  0000CC                     	ds	2
   599  0000CE                     _segundoVuelta:
   600                           	opt stack 0
   601  0000CE                     	ds	2
   602  0000D0                     _segundosDisplay:
   603                           	opt stack 0
   604  0000D0                     	ds	2
   605  0000D2                     _unSegundoParcial:
   606                           	opt stack 0
   607  0000D2                     	ds	2
   608  0000D4                     _unaMilesimaParcial:
   609                           	opt stack 0
   610  0000D4                     	ds	2
   611  0000D6                     _buffer2:
   612                           	opt stack 0
   613  0000D6                     	ds	20
   614  0000EA                     _minutoVuelta:
   615                           	opt stack 0
   616  0000EA                     	ds	2
   617                           tblptru	equ	0xFF8
   618                           tblptrh	equ	0xFF7
   619                           tblptrl	equ	0xFF6
   620                           tablat	equ	0xFF5
   621                           postinc0	equ	0xFEE
   622                           wreg	equ	0xFE8
   623                           postdec1	equ	0xFE5
   624                           fsr1l	equ	0xFE1
   625                           
   626                           	psect	dataBANK0
   627  0000F9                     __pdataBANK0:
   628                           	opt stack 0
   629  0000F9                     _columna:
   630                           	opt stack 0
   631  0000F9                     	ds	2
   632  0000FB                     _fila:
   633                           	opt stack 0
   634  0000FB                     	ds	2
   635                           tblptru	equ	0xFF8
   636                           tblptrh	equ	0xFF7
   637                           tblptrl	equ	0xFF6
   638                           tablat	equ	0xFF5
   639                           postinc0	equ	0xFEE
   640                           wreg	equ	0xFE8
   641                           postdec1	equ	0xFE5
   642                           fsr1l	equ	0xFE1
   643                           
   644                           	psect	cstackCOMRAM
   645  00002D                     __pcstackCOMRAM:
   646                           	opt stack 0
   647  00002D                     ??_isdigit:
   648  00002D                     ??_lcd_send_nibble:
   649  00002D                     ??_deteniendoCronometro:
   650  00002D                     ?___wmul:
   651                           	opt stack 0
   652  00002D                     ?___awdiv:
   653                           	opt stack 0
   654  00002D                     ?___lwdiv:
   655                           	opt stack 0
   656  00002D                     Delay100TCYx@unit:
   657                           	opt stack 0
   658  00002D                     Delay1KTCYx@unit:
   659                           	opt stack 0
   660  00002D                     CargoVueltas@p_nrovuelta:
   661                           	opt stack 0
   662  00002D                     RtccReadDate@pDt:
   663                           	opt stack 0
   664  00002D                     RtccReadTime@pTm:
   665                           	opt stack 0
   666  00002D                     RtccWriteDate@pDt:
   667                           	opt stack 0
   668  00002D                     RtccWriteTime@pTm:
   669                           	opt stack 0
   670  00002D                     ___wmul@multiplier:
   671                           	opt stack 0
   672  00002D                     ___awdiv@dividend:
   673                           	opt stack 0
   674  00002D                     ___lwdiv@dividend:
   675                           	opt stack 0
   676                           
   677                           ; 2 bytes @ 0x0
   678  00002D                     	ds	1
   679  00002E                     lcd_send_nibble@nibble:
   680                           	opt stack 0
   681  00002E                     _isdigit$1895:
   682                           	opt stack 0
   683                           
   684                           ; 1 bytes @ 0x1
   685  00002E                     	ds	1
   686  00002F                     lcd_send_byte@n:
   687                           	opt stack 0
   688  00002F                     RtccWriteDate@di:
   689                           	opt stack 0
   690  00002F                     RtccWriteTime@di:
   691                           	opt stack 0
   692  00002F                     isdigit@c:
   693                           	opt stack 0
   694  00002F                     CargoVueltas@p_minuto:
   695                           	opt stack 0
   696  00002F                     ___wmul@multiplicand:
   697                           	opt stack 0
   698  00002F                     ___awdiv@divisor:
   699                           	opt stack 0
   700  00002F                     ___lwdiv@divisor:
   701                           	opt stack 0
   702  00002F                     RtccReadDate@rTD1:
   703                           	opt stack 0
   704  00002F                     RtccReadTime@rTD1:
   705                           	opt stack 0
   706                           
   707                           ; 8 bytes @ 0x2
   708  00002F                     	ds	1
   709  000030                     lcd_send_byte@address:
   710                           	opt stack 0
   711                           
   712                           ; 1 bytes @ 0x3
   713  000030                     	ds	1
   714  000031                     lcd_init@i:
   715                           	opt stack 0
   716  000031                     lcd_gotoxy@y:
   717                           	opt stack 0
   718  000031                     lcd_comand@d:
   719                           	opt stack 0
   720  000031                     RtccWriteDate@wasOn:
   721                           	opt stack 0
   722  000031                     RtccWriteTime@wasOn:
   723                           	opt stack 0
   724  000031                     ___awdiv@counter:
   725                           	opt stack 0
   726  000031                     CargoVueltas@p_segundo:
   727                           	opt stack 0
   728  000031                     ___wmul@product:
   729                           	opt stack 0
   730  000031                     ___lwdiv@quotient:
   731                           	opt stack 0
   732                           
   733                           ; 2 bytes @ 0x4
   734  000031                     	ds	1
   735  000032                     lcd_gotoxy@x:
   736                           	opt stack 0
   737  000032                     RtccWriteDate@wasAlrm:
   738                           	opt stack 0
   739  000032                     RtccWriteTime@wasAlrm:
   740                           	opt stack 0
   741  000032                     ___awdiv@sign:
   742                           	opt stack 0
   743                           
   744                           ; 1 bytes @ 0x5
   745  000032                     	ds	1
   746  000033                     lcd_gotoxy@address:
   747                           	opt stack 0
   748  000033                     RtccWriteTime@wasWrEn:
   749                           	opt stack 0
   750  000033                     ___lwdiv@counter:
   751                           	opt stack 0
   752  000033                     CargoVueltas@p_milesima:
   753                           	opt stack 0
   754  000033                     RtccWriteDate@tempYear:
   755                           	opt stack 0
   756  000033                     ___awdiv@quotient:
   757                           	opt stack 0
   758                           
   759                           ; 2 bytes @ 0x6
   760  000033                     	ds	1
   761  000034                     ?___lwmod:
   762                           	opt stack 0
   763  000034                     lcd_putc@c:
   764                           	opt stack 0
   765  000034                     RtccWriteTime@tempMinSec:
   766                           	opt stack 0
   767  000034                     ___lwmod@dividend:
   768                           	opt stack 0
   769                           
   770                           ; 2 bytes @ 0x7
   771  000034                     	ds	1
   772  000035                     ??_almacenarTiempoParcial:
   773  000035                     RtccWriteDate@wasWrEn:
   774                           	opt stack 0
   775  000035                     lcd_putrs@ptr:
   776                           	opt stack 0
   777                           
   778                           ; 2 bytes @ 0x8
   779  000035                     	ds	1
   780  000036                     RtccWriteDate@tempDayMonth:
   781                           	opt stack 0
   782  000036                     RtccWriteTime@tempHourWDay:
   783                           	opt stack 0
   784  000036                     ___lwmod@divisor:
   785                           	opt stack 0
   786                           
   787                           ; 2 bytes @ 0x9
   788  000036                     	ds	1
   789  000037                     ??_clickIniciar:
   790  000037                     almacenarTiempoParcial@i:
   791                           	opt stack 0
   792  000037                     RtccReadDate@rTD0:
   793                           	opt stack 0
   794  000037                     RtccReadTime@rTD0:
   795                           	opt stack 0
   796                           
   797                           ; 8 bytes @ 0xA
   798  000037                     	ds	1
   799  000038                     ___lwmod@counter:
   800                           	opt stack 0
   801  000038                     RtccWriteDate@tempHourWDay:
   802                           	opt stack 0
   803                           
   804                           ; 2 bytes @ 0xB
   805  000038                     	ds	1
   806  000039                     ?_sprintf:
   807                           	opt stack 0
   808  000039                     sprintf@sp:
   809                           	opt stack 0
   810                           
   811                           ; 2 bytes @ 0xC
   812  000039                     	ds	1
   813  00003A                     ??_inicializarCronometro:
   814  00003A                     ??_continuarCronometrando:
   815                           
   816                           ; 0 bytes @ 0xD
   817  00003A                     	ds	1
   818  00003B                     sprintf@f:
   819                           	opt stack 0
   820                           
   821                           ; 2 bytes @ 0xE
   822  00003B                     	ds	4
   823  00003F                     
   824                           ; 0 bytes @ 0x12
   825  00003F                     	ds	4
   826  000043                     ??_sprintf:
   827                           
   828                           ; 0 bytes @ 0x16
   829  000043                     	ds	4
   830  000047                     sprintf@ap:
   831                           	opt stack 0
   832                           
   833                           ; 2 bytes @ 0x1A
   834  000047                     	ds	2
   835  000049                     sprintf@flag:
   836                           	opt stack 0
   837                           
   838                           ; 1 bytes @ 0x1C
   839  000049                     	ds	1
   840  00004A                     sprintf@val:
   841                           	opt stack 0
   842                           
   843                           ; 2 bytes @ 0x1D
   844  00004A                     	ds	2
   845  00004C                     sprintf@prec:
   846                           	opt stack 0
   847                           
   848                           ; 1 bytes @ 0x1F
   849  00004C                     	ds	1
   850  00004D                     sprintf@width:
   851                           	opt stack 0
   852                           
   853                           ; 2 bytes @ 0x20
   854  00004D                     	ds	2
   855  00004F                     sprintf@c:
   856                           	opt stack 0
   857                           
   858                           ; 1 bytes @ 0x22
   859  00004F                     	ds	1
   860  000050                     ??_mostrarMejorVuelta:
   861  000050                     ??_mostrarVuelta:
   862  000050                     
   863                           ; 0 bytes @ 0x23
   864  000050                     	ds	1
   865  000051                     ??_vueltasAlmacenadasAdelante:
   866  000051                     ??_vueltasAlmacenadasAtras:
   867                           
   868                           ; 0 bytes @ 0x24
   869  000051                     	ds	1
   870  000052                     ??_almacenarTiempo:
   871                           
   872                           ; 0 bytes @ 0x25
   873  000052                     	ds	1
   874  000053                     tblptru	equ	0xFF8
   875                           tblptrh	equ	0xFF7
   876                           tblptrl	equ	0xFF6
   877                           tablat	equ	0xFF5
   878                           postinc0	equ	0xFEE
   879                           wreg	equ	0xFE8
   880                           postdec1	equ	0xFE5
   881                           fsr1l	equ	0xFE1
   882                           
   883                           ; 0 bytes @ 0x26
   884 ;;
   885 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   886 ;;
   887 ;; *************** function _main *****************
   888 ;; Defined at:
   889 ;;		line 401 in file "main.c"
   890 ;; Parameters:    Size  Location     Type
   891 ;;		None
   892 ;; Auto vars:     Size  Location     Type
   893 ;;		None
   894 ;; Return value:  Size  Location     Type
   895 ;;                  2  357[None  ] int 
   896 ;; Registers used:
   897 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   898 ;; Tracked objects:
   899 ;;		On entry : 0/0
   900 ;;		On exit  : 0/0
   901 ;;		Unchanged: 0/0
   902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   903 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   904 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   906 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   907 ;;Total ram usage:        0 bytes
   908 ;; Hardware stack levels required when called:    8
   909 ;; This function calls:
   910 ;;		_Setup
   911 ;;		_almacenarTiempo
   912 ;;		_clickIniciar
   913 ;;		_continuarCronometrando
   914 ;;		_cronometrando
   915 ;;		_deteniendoCronometro
   916 ;;		_inicializarCronometro
   917 ;;		_mostrarCaratula
   918 ;;		_tiempoParcial
   919 ;;		_vueltasAlmacenadasAdelante
   920 ;;		_vueltasAlmacenadasAtras
   921 ;; This function is called by:
   922 ;;		Startup code after reset
   923 ;; This function uses a non-reentrant model
   924 ;;
   925                           
   926                           	psect	text0
   927  0022A4                     __ptext0:
   928                           	opt stack 0
   929  0022A4                     _main:
   930                           	opt stack 23
   931                           
   932                           ;main.c: 403: Setup();
   933                           
   934                           ; BSR set to: 15
   935                           ;incstack = 0
   936  0022A4  EC32  F011         	call	_Setup	;wreg free
   937  0022A8  D000               	goto	l2942
   938  0022AA                     l2942:
   939                           
   940                           ;main.c: 407: mostrarCaratula();
   941  0022AA  ECEF  F011         	call	_mostrarCaratula	;wreg free
   942                           
   943                           ;main.c: 408: clickIniciar();
   944  0022AE  EC73  F00F         	call	_clickIniciar	;wreg free
   945                           
   946                           ;main.c: 409: inicializarCronometro();
   947  0022B2  ECC5  F00D         	call	_inicializarCronometro	;wreg free
   948                           
   949                           ;main.c: 410: cronometrando();
   950  0022B6  EC12  F011         	call	_cronometrando	;wreg free
   951                           
   952                           ;main.c: 411: deteniendoCronometro();
   953  0022BA  ECD1  F00F         	call	_deteniendoCronometro	;wreg free
   954                           
   955                           ;main.c: 412: tiempoParcial();
   956  0022BE  ECF9  F011         	call	_tiempoParcial	;wreg free
   957                           
   958                           ;main.c: 413: continuarCronometrando();
   959  0022C2  EC93  F00E         	call	_continuarCronometrando	;wreg free
   960                           
   961                           ;main.c: 414: almacenarTiempo();
   962  0022C6  ECC2  F009         	call	_almacenarTiempo	;wreg free
   963                           
   964                           ;main.c: 415: vueltasAlmacenadasAdelante();
   965  0022CA  ECFE  F00F         	call	_vueltasAlmacenadasAdelante	;wreg free
   966                           
   967                           ;main.c: 416: vueltasAlmacenadasAtras();
   968  0022CE  EC7B  F010         	call	_vueltasAlmacenadasAtras	;wreg free
   969  0022D2  D7EB               	goto	l2942
   970                           
   971                           ;main.c: 417: }
   972                           ;main.c: 418: return 0;
   973                           ;	Return value of _main is never used
   974  0022D4  EF00  F000         	goto	start
   975  0022D8                     __end_of_main:
   976                           	opt stack 0
   977                           tblptru	equ	0xFF8
   978                           tblptrh	equ	0xFF7
   979                           tblptrl	equ	0xFF6
   980                           tablat	equ	0xFF5
   981                           postinc0	equ	0xFEE
   982                           wreg	equ	0xFE8
   983                           postdec1	equ	0xFE5
   984                           fsr1l	equ	0xFE1
   985                           
   986 ;; *************** function _vueltasAlmacenadasAtras *****************
   987 ;; Defined at:
   988 ;;		line 360 in file "main.c"
   989 ;; Parameters:    Size  Location     Type
   990 ;;		None
   991 ;; Auto vars:     Size  Location     Type
   992 ;;		None
   993 ;; Return value:  Size  Location     Type
   994 ;;		None               void
   995 ;; Registers used:
   996 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   997 ;; Tracked objects:
   998 ;;		On entry : 0/0
   999 ;;		On exit  : 0/0
  1000 ;;		Unchanged: 0/0
  1001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1002 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1003 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1004 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1005 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1006 ;;Total ram usage:        1 bytes
  1007 ;; Hardware stack levels used:    1
  1008 ;; Hardware stack levels required when called:    7
  1009 ;; This function calls:
  1010 ;;		_mostrarVuelta
  1011 ;; This function is called by:
  1012 ;;		_main
  1013 ;; This function uses a non-reentrant model
  1014 ;;
  1015                           
  1016                           	psect	text1
  1017  0020F6                     __ptext1:
  1018                           	opt stack 0
  1019  0020F6                     _vueltasAlmacenadasAtras:
  1020                           	opt stack 23
  1021                           
  1022                           ;main.c: 361: if (PORTAbits.RA7 == 0){
  1023                           
  1024                           ;incstack = 0
  1025  0020F6  BE80               	btfsc	3968,7,c	;volatile
  1026  0020F8  0012               	return	
  1027                           
  1028                           ;main.c: 362: _delay((unsigned long)((98)*(8000000/4000.0)));
  1029  0020FA  0EFF               	movlw	255
  1030  0020FC  6E51               	movwf	??_vueltasAlmacenadasAtras& (0+255),c
  1031  0020FE  0E8A               	movlw	138
  1032  002100                     u2047:
  1033  002100  2EE8               	decfsz	wreg,f,c
  1034  002102  D7FE               	goto	u2047
  1035  002104  2E51               	decfsz	??_vueltasAlmacenadasAtras& (0+255),f,c
  1036  002106  D7FC               	goto	u2047
  1037  002108  D000               	nop2	
  1038                           
  1039                           ;main.c: 363: if (ultimoRecorrido == 0){
  1040  00210A  505D               	movf	_ultimoRecorrido,w,c
  1041  00210C  105E               	iorwf	_ultimoRecorrido+1,w,c
  1042  00210E  A4D8               	btfss	status,2,c
  1043  002110  D006               	goto	l344
  1044                           
  1045                           ;main.c: 364: cursorVuelta= cursorVuelta - 2;
  1046  002112  0EFE               	movlw	254
  1047  002114  2401               	addwf	_cursorVuelta,w,c
  1048  002116  6E01               	movwf	_cursorVuelta,c
  1049  002118  0EFF               	movlw	255
  1050  00211A  2002               	addwfc	_cursorVuelta+1,w,c
  1051  00211C  6E02               	movwf	_cursorVuelta+1,c
  1052  00211E                     l344:
  1053                           
  1054                           ;main.c: 365: }
  1055                           ;main.c: 366: if(cursorVuelta < 0){
  1056  00211E  AE02               	btfss	_cursorVuelta+1,7,c
  1057  002120  D005               	goto	l2918
  1058                           
  1059                           ;main.c: 367: cursorVuelta = 9;
  1060  002122  0E00               	movlw	0
  1061  002124  6E02               	movwf	_cursorVuelta+1,c
  1062  002126  0E09               	movlw	9
  1063  002128  6E01               	movwf	_cursorVuelta,c
  1064  00212A  D000               	goto	l2918
  1065  00212C                     l2918:
  1066                           
  1067                           ;main.c: 368: }
  1068                           ;main.c: 369: mostrarVuelta();
  1069  00212C  EC2A  F00D         	call	_mostrarVuelta	;wreg free
  1070                           
  1071                           ;main.c: 370: cursorVuelta--;
  1072  002130  0601               	decf	_cursorVuelta,f,c
  1073  002132  A0D8               	btfss	status,0,c
  1074  002134  0602               	decf	_cursorVuelta+1,f,c
  1075                           
  1076                           ;main.c: 371: ultimoRecorrido = 1;
  1077  002136  0E00               	movlw	0
  1078  002138  6E5E               	movwf	_ultimoRecorrido+1,c
  1079  00213A  0E01               	movlw	1
  1080  00213C  6E5D               	movwf	_ultimoRecorrido,c
  1081  00213E  0012               	return	
  1082  002140  0012               	return		;funcret
  1083  002142                     __end_of_vueltasAlmacenadasAtras:
  1084                           	opt stack 0
  1085                           tblptru	equ	0xFF8
  1086                           tblptrh	equ	0xFF7
  1087                           tblptrl	equ	0xFF6
  1088                           tablat	equ	0xFF5
  1089                           postinc0	equ	0xFEE
  1090                           wreg	equ	0xFE8
  1091                           postdec1	equ	0xFE5
  1092                           fsr1l	equ	0xFE1
  1093                           status	equ	0xFD8
  1094                           
  1095 ;; *************** function _vueltasAlmacenadasAdelante *****************
  1096 ;; Defined at:
  1097 ;;		line 344 in file "main.c"
  1098 ;; Parameters:    Size  Location     Type
  1099 ;;		None
  1100 ;; Auto vars:     Size  Location     Type
  1101 ;;		None
  1102 ;; Return value:  Size  Location     Type
  1103 ;;		None               void
  1104 ;; Registers used:
  1105 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1106 ;; Tracked objects:
  1107 ;;		On entry : 0/0
  1108 ;;		On exit  : 0/0
  1109 ;;		Unchanged: 0/0
  1110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1111 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1113 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1114 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1115 ;;Total ram usage:        1 bytes
  1116 ;; Hardware stack levels used:    1
  1117 ;; Hardware stack levels required when called:    7
  1118 ;; This function calls:
  1119 ;;		_mostrarVuelta
  1120 ;; This function is called by:
  1121 ;;		_main
  1122 ;; This function uses a non-reentrant model
  1123 ;;
  1124                           
  1125                           	psect	text2
  1126  001FFC                     __ptext2:
  1127                           	opt stack 0
  1128  001FFC                     _vueltasAlmacenadasAdelante:
  1129                           	opt stack 23
  1130                           
  1131                           ;main.c: 345: if (PORTAbits.RA2 == 0){
  1132                           
  1133                           ;incstack = 0
  1134  001FFC  B480               	btfsc	3968,2,c	;volatile
  1135  001FFE  0012               	return	
  1136                           
  1137                           ;main.c: 346: _delay((unsigned long)((98)*(8000000/4000.0)));
  1138  002000  0EFF               	movlw	255
  1139  002002  6E51               	movwf	??_vueltasAlmacenadasAdelante& (0+255),c
  1140  002004  0E8A               	movlw	138
  1141  002006                     u2057:
  1142  002006  2EE8               	decfsz	wreg,f,c
  1143  002008  D7FE               	goto	u2057
  1144  00200A  2E51               	decfsz	??_vueltasAlmacenadasAdelante& (0+255),f,c
  1145  00200C  D7FC               	goto	u2057
  1146  00200E  D000               	nop2	
  1147                           
  1148                           ;main.c: 347: if (ultimoRecorrido == 1){
  1149  002010  045D               	decf	_ultimoRecorrido,w,c
  1150  002012  105E               	iorwf	_ultimoRecorrido+1,w,c
  1151  002014  A4D8               	btfss	status,2,c
  1152  002016  D006               	goto	l338
  1153                           
  1154                           ;main.c: 348: cursorVuelta= cursorVuelta + 2;
  1155  002018  0E02               	movlw	2
  1156  00201A  2401               	addwf	_cursorVuelta,w,c
  1157  00201C  6E01               	movwf	_cursorVuelta,c
  1158  00201E  0E00               	movlw	0
  1159  002020  2002               	addwfc	_cursorVuelta+1,w,c
  1160  002022  6E02               	movwf	_cursorVuelta+1,c
  1161  002024                     l338:
  1162                           
  1163                           ;main.c: 349: }
  1164                           ;main.c: 351: if(cursorVuelta > 9){
  1165  002024  BE02               	btfsc	_cursorVuelta+1,7,c
  1166  002026  D00B               	goto	l2902
  1167  002028  5002               	movf	_cursorVuelta+1,w,c
  1168  00202A  E104               	bnz	u1990
  1169  00202C  0E0A               	movlw	10
  1170  00202E  5C01               	subwf	_cursorVuelta,w,c
  1171  002030  A0D8               	btfss	status,0,c
  1172  002032  D005               	goto	l2902
  1173  002034                     u1990:
  1174                           
  1175                           ;main.c: 352: cursorVuelta = 0;
  1176  002034  0E00               	movlw	0
  1177  002036  6E02               	movwf	_cursorVuelta+1,c
  1178  002038  0E00               	movlw	0
  1179  00203A  6E01               	movwf	_cursorVuelta,c
  1180  00203C  D000               	goto	l2902
  1181  00203E                     l2902:
  1182                           
  1183                           ;main.c: 353: }
  1184                           ;main.c: 354: mostrarVuelta();
  1185  00203E  EC2A  F00D         	call	_mostrarVuelta	;wreg free
  1186                           
  1187                           ;main.c: 355: cursorVuelta++;
  1188  002042  4A01               	infsnz	_cursorVuelta,f,c
  1189  002044  2A02               	incf	_cursorVuelta+1,f,c
  1190                           
  1191                           ;main.c: 356: ultimoRecorrido = 0;
  1192  002046  0E00               	movlw	0
  1193  002048  6E5E               	movwf	_ultimoRecorrido+1,c
  1194  00204A  0E00               	movlw	0
  1195  00204C  6E5D               	movwf	_ultimoRecorrido,c
  1196  00204E  0012               	return	
  1197  002050  0012               	return		;funcret
  1198  002052                     __end_of_vueltasAlmacenadasAdelante:
  1199                           	opt stack 0
  1200                           tblptru	equ	0xFF8
  1201                           tblptrh	equ	0xFF7
  1202                           tblptrl	equ	0xFF6
  1203                           tablat	equ	0xFF5
  1204                           postinc0	equ	0xFEE
  1205                           wreg	equ	0xFE8
  1206                           postdec1	equ	0xFE5
  1207                           fsr1l	equ	0xFE1
  1208                           status	equ	0xFD8
  1209                           
  1210 ;; *************** function _mostrarVuelta *****************
  1211 ;; Defined at:
  1212 ;;		line 375 in file "main.c"
  1213 ;; Parameters:    Size  Location     Type
  1214 ;;		None
  1215 ;; Auto vars:     Size  Location     Type
  1216 ;;		None
  1217 ;; Return value:  Size  Location     Type
  1218 ;;		None               void
  1219 ;; Registers used:
  1220 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1221 ;; Tracked objects:
  1222 ;;		On entry : 0/0
  1223 ;;		On exit  : 0/0
  1224 ;;		Unchanged: 0/0
  1225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1227 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1228 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1229 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1230 ;;Total ram usage:        1 bytes
  1231 ;; Hardware stack levels used:    1
  1232 ;; Hardware stack levels required when called:    6
  1233 ;; This function calls:
  1234 ;;		_lcd_comand
  1235 ;;		_lcd_gotoxy
  1236 ;;		_lcd_putrs
  1237 ;;		_mostrarReloj
  1238 ;;		_sprintf
  1239 ;; This function is called by:
  1240 ;;		_vueltasAlmacenadasAdelante
  1241 ;;		_vueltasAlmacenadasAtras
  1242 ;; This function uses a non-reentrant model
  1243 ;;
  1244                           
  1245                           	psect	text3
  1246  001A54                     __ptext3:
  1247                           	opt stack 0
  1248  001A54                     _mostrarVuelta:
  1249                           	opt stack 23
  1250                           
  1251                           ;main.c: 376: minuto = vMinutos[cursorVuelta];
  1252                           
  1253                           ;incstack = 0
  1254  001A54  90D8               	bcf	status,0,c
  1255  001A56  3401               	rlcf	_cursorVuelta,w,c
  1256  001A58  6ED9               	movwf	fsr2l,c
  1257  001A5A  3402               	rlcf	_cursorVuelta+1,w,c
  1258  001A5C  6EDA               	movwf	fsr2h,c
  1259  001A5E  0E74               	movlw	low _vMinutos
  1260  001A60  26D9               	addwf	fsr2l,f,c
  1261  001A62  0E00               	movlw	high _vMinutos
  1262  001A64  22DA               	addwfc	fsr2h,f,c
  1263  001A66  CFDE F00D          	movff	postinc2,_minuto
  1264  001A6A  CFDD F00E          	movff	postdec2,_minuto+1
  1265                           
  1266                           ;main.c: 377: segundo = vSegundos[cursorVuelta];
  1267  001A6E  90D8               	bcf	status,0,c
  1268  001A70  3401               	rlcf	_cursorVuelta,w,c
  1269  001A72  6ED9               	movwf	fsr2l,c
  1270  001A74  3402               	rlcf	_cursorVuelta+1,w,c
  1271  001A76  6EDA               	movwf	fsr2h,c
  1272  001A78  0E88               	movlw	low _vSegundos
  1273  001A7A  26D9               	addwf	fsr2l,f,c
  1274  001A7C  0E00               	movlw	high _vSegundos
  1275  001A7E  22DA               	addwfc	fsr2h,f,c
  1276  001A80  CFDE F011          	movff	postinc2,_segundo
  1277  001A84  CFDD F012          	movff	postdec2,_segundo+1
  1278                           
  1279                           ;main.c: 378: milesima = vMilesimas[cursorVuelta];
  1280  001A88  90D8               	bcf	status,0,c
  1281  001A8A  3401               	rlcf	_cursorVuelta,w,c
  1282  001A8C  6ED9               	movwf	fsr2l,c
  1283  001A8E  3402               	rlcf	_cursorVuelta+1,w,c
  1284  001A90  6EDA               	movwf	fsr2h,c
  1285  001A92  0E60               	movlw	low _vMilesimas
  1286  001A94  26D9               	addwf	fsr2l,f,c
  1287  001A96  0E00               	movlw	high _vMilesimas
  1288  001A98  22DA               	addwfc	fsr2h,f,c
  1289  001A9A  CFDE F007          	movff	postinc2,_milesima
  1290  001A9E  CFDD F008          	movff	postdec2,_milesima+1
  1291                           
  1292                           ;main.c: 380: lcd_comand(0b00000001);
  1293  001AA2  0E01               	movlw	1
  1294  001AA4  EC1D  F012         	call	_lcd_comand
  1295                           
  1296                           ;main.c: 381: _delay((unsigned long)((90)*(8000000/4000.0)));
  1297  001AA8  0EEA               	movlw	234
  1298  001AAA  6E50               	movwf	??_mostrarVuelta& (0+255),c
  1299  001AAC  0EC3               	movlw	195
  1300  001AAE                     u2067:
  1301  001AAE  2EE8               	decfsz	wreg,f,c
  1302  001AB0  D7FE               	goto	u2067
  1303  001AB2  2E50               	decfsz	??_mostrarVuelta& (0+255),f,c
  1304  001AB4  D7FC               	goto	u2067
  1305  001AB6  F000               	nop	
  1306                           
  1307                           ;main.c: 382: sprintf(buffer2,"VUELTA NRO %01u", cursorVuelta+1);
  1308  001AB8  0ED6               	movlw	low _buffer2
  1309  001ABA  6E39               	movwf	sprintf@sp,c
  1310  001ABC  0E00               	movlw	high _buffer2
  1311  001ABE  6E3A               	movwf	sprintf@sp+1,c
  1312  001AC0  0E20               	movlw	low STR_10
  1313  001AC2  6E3B               	movwf	sprintf@f,c
  1314  001AC4  0E0F               	movlw	high STR_10
  1315  001AC6  6E3C               	movwf	sprintf@f+1,c
  1316  001AC8  0E01               	movlw	1
  1317  001ACA  2401               	addwf	_cursorVuelta,w,c
  1318  001ACC  6E3D               	movwf	?_sprintf+4,c
  1319  001ACE  0E00               	movlw	0
  1320  001AD0  2002               	addwfc	_cursorVuelta+1,w,c
  1321  001AD2  6E3E               	movwf	?_sprintf+5,c
  1322  001AD4  ECCE  F007         	call	_sprintf	;wreg free
  1323                           
  1324                           ;main.c: 383: lcd_gotoxy(1,1);
  1325  001AD8  0E01               	movlw	1
  1326  001ADA  6E31               	movwf	lcd_gotoxy@y,c
  1327  001ADC  0E01               	movlw	1
  1328  001ADE  ECCC  F011         	call	_lcd_gotoxy
  1329                           
  1330                           ;main.c: 384: lcd_putrs(buffer2);
  1331  001AE2  0ED6               	movlw	low _buffer2
  1332  001AE4  6E35               	movwf	lcd_putrs@ptr,c
  1333  001AE6  0E00               	movlw	high _buffer2
  1334  001AE8  6E36               	movwf	lcd_putrs@ptr+1,c
  1335  001AEA  EC29  F010         	call	_lcd_putrs	;wreg free
  1336                           
  1337                           ;main.c: 385: mostrarReloj();
  1338  001AEE  ECED  F010         	call	_mostrarReloj	;wreg free
  1339  001AF2  0012               	return		;funcret
  1340  001AF4                     __end_of_mostrarVuelta:
  1341                           	opt stack 0
  1342                           tblptru	equ	0xFF8
  1343                           tblptrh	equ	0xFF7
  1344                           tblptrl	equ	0xFF6
  1345                           tablat	equ	0xFF5
  1346                           postinc0	equ	0xFEE
  1347                           wreg	equ	0xFE8
  1348                           postdec1	equ	0xFE5
  1349                           fsr1l	equ	0xFE1
  1350                           postinc2	equ	0xFDE
  1351                           postdec2	equ	0xFDD
  1352                           fsr2h	equ	0xFDA
  1353                           fsr2l	equ	0xFD9
  1354                           status	equ	0xFD8
  1355                           
  1356 ;; *************** function _tiempoParcial *****************
  1357 ;; Defined at:
  1358 ;;		line 227 in file "main.c"
  1359 ;; Parameters:    Size  Location     Type
  1360 ;;		None
  1361 ;; Auto vars:     Size  Location     Type
  1362 ;;		None
  1363 ;; Return value:  Size  Location     Type
  1364 ;;		None               void
  1365 ;; Registers used:
  1366 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1367 ;; Tracked objects:
  1368 ;;		On entry : 0/0
  1369 ;;		On exit  : 0/0
  1370 ;;		Unchanged: 0/0
  1371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1373 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1375 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1376 ;;Total ram usage:        0 bytes
  1377 ;; Hardware stack levels used:    1
  1378 ;; Hardware stack levels required when called:    6
  1379 ;; This function calls:
  1380 ;;		_mostrarReloj
  1381 ;; This function is called by:
  1382 ;;		_main
  1383 ;; This function uses a non-reentrant model
  1384 ;;
  1385                           
  1386                           	psect	text4
  1387  0023F2                     __ptext4:
  1388                           	opt stack 0
  1389  0023F2                     _tiempoParcial:
  1390                           	opt stack 24
  1391                           
  1392                           ;main.c: 228: if(estadoCentro == 4){
  1393                           
  1394                           ;incstack = 0
  1395  0023F2  0E04               	movlw	4
  1396  0023F4  1803               	xorwf	_estadoCentro,w,c
  1397  0023F6  1004               	iorwf	_estadoCentro+1,w,c
  1398  0023F8  A4D8               	btfss	status,2,c
  1399  0023FA  0012               	return	
  1400                           
  1401                           ;main.c: 229: mostrarReloj();
  1402  0023FC  ECED  F010         	call	_mostrarReloj	;wreg free
  1403  002400  0012               	return	
  1404  002402  0012               	return		;funcret
  1405  002404                     __end_of_tiempoParcial:
  1406                           	opt stack 0
  1407                           tblptru	equ	0xFF8
  1408                           tblptrh	equ	0xFF7
  1409                           tblptrl	equ	0xFF6
  1410                           tablat	equ	0xFF5
  1411                           postinc0	equ	0xFEE
  1412                           wreg	equ	0xFE8
  1413                           postdec1	equ	0xFE5
  1414                           fsr1l	equ	0xFE1
  1415                           postinc2	equ	0xFDE
  1416                           postdec2	equ	0xFDD
  1417                           fsr2h	equ	0xFDA
  1418                           fsr2l	equ	0xFD9
  1419                           status	equ	0xFD8
  1420                           
  1421 ;; *************** function _mostrarCaratula *****************
  1422 ;; Defined at:
  1423 ;;		line 164 in file "main.c"
  1424 ;; Parameters:    Size  Location     Type
  1425 ;;		None
  1426 ;; Auto vars:     Size  Location     Type
  1427 ;;		None
  1428 ;; Return value:  Size  Location     Type
  1429 ;;		None               void
  1430 ;; Registers used:
  1431 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1432 ;; Tracked objects:
  1433 ;;		On entry : 0/0
  1434 ;;		On exit  : 0/0
  1435 ;;		Unchanged: 0/0
  1436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1438 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1440 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1441 ;;Total ram usage:        0 bytes
  1442 ;; Hardware stack levels used:    1
  1443 ;; Hardware stack levels required when called:    6
  1444 ;; This function calls:
  1445 ;;		_caratulaCronometro
  1446 ;; This function is called by:
  1447 ;;		_main
  1448 ;; This function uses a non-reentrant model
  1449 ;;
  1450                           
  1451                           	psect	text5
  1452  0023DE                     __ptext5:
  1453                           	opt stack 0
  1454  0023DE                     _mostrarCaratula:
  1455                           	opt stack 24
  1456                           
  1457                           ;main.c: 165: if(estadoCentro == 0){
  1458                           
  1459                           ;incstack = 0
  1460  0023DE  5003               	movf	_estadoCentro,w,c
  1461  0023E0  1004               	iorwf	_estadoCentro+1,w,c
  1462  0023E2  A4D8               	btfss	status,2,c
  1463  0023E4  0012               	return	
  1464                           
  1465                           ;main.c: 166: caratulaCronometro();
  1466  0023E6  EC6C  F011         	call	_caratulaCronometro	;wreg free
  1467                           
  1468                           ;main.c: 167: estadoCentro++;
  1469  0023EA  4A03               	infsnz	_estadoCentro,f,c
  1470  0023EC  2A04               	incf	_estadoCentro+1,f,c
  1471  0023EE  0012               	return	
  1472  0023F0  0012               	return		;funcret
  1473  0023F2                     __end_of_mostrarCaratula:
  1474                           	opt stack 0
  1475                           tblptru	equ	0xFF8
  1476                           tblptrh	equ	0xFF7
  1477                           tblptrl	equ	0xFF6
  1478                           tablat	equ	0xFF5
  1479                           postinc0	equ	0xFEE
  1480                           wreg	equ	0xFE8
  1481                           postdec1	equ	0xFE5
  1482                           fsr1l	equ	0xFE1
  1483                           postinc2	equ	0xFDE
  1484                           postdec2	equ	0xFDD
  1485                           fsr2h	equ	0xFDA
  1486                           fsr2l	equ	0xFD9
  1487                           status	equ	0xFD8
  1488                           
  1489 ;; *************** function _caratulaCronometro *****************
  1490 ;; Defined at:
  1491 ;;		line 154 in file "main.c"
  1492 ;; Parameters:    Size  Location     Type
  1493 ;;		None
  1494 ;; Auto vars:     Size  Location     Type
  1495 ;;		None
  1496 ;; Return value:  Size  Location     Type
  1497 ;;		None               void
  1498 ;; Registers used:
  1499 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1500 ;; Tracked objects:
  1501 ;;		On entry : 0/0
  1502 ;;		On exit  : 0/0
  1503 ;;		Unchanged: 0/0
  1504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1505 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1506 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1508 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1509 ;;Total ram usage:        0 bytes
  1510 ;; Hardware stack levels used:    1
  1511 ;; Hardware stack levels required when called:    5
  1512 ;; This function calls:
  1513 ;;		_lcd_comand
  1514 ;;		_lcd_gotoxy
  1515 ;;		_lcd_putrs
  1516 ;; This function is called by:
  1517 ;;		_mostrarCaratula
  1518 ;; This function uses a non-reentrant model
  1519 ;;
  1520                           
  1521                           	psect	text6
  1522  0022D8                     __ptext6:
  1523                           	opt stack 0
  1524  0022D8                     _caratulaCronometro:
  1525                           	opt stack 24
  1526                           
  1527                           ;main.c: 156: lcd_comand(0b00001100);
  1528                           
  1529                           ;incstack = 0
  1530  0022D8  0E0C               	movlw	12
  1531  0022DA  EC1D  F012         	call	_lcd_comand
  1532                           
  1533                           ;main.c: 157: lcd_gotoxy(1,1);
  1534  0022DE  0E01               	movlw	1
  1535  0022E0  6E31               	movwf	lcd_gotoxy@y,c
  1536  0022E2  0E01               	movlw	1
  1537  0022E4  ECCC  F011         	call	_lcd_gotoxy
  1538                           
  1539                           ;main.c: 158: lcd_putrs("CRONOMETRAR MI");
  1540  0022E8  0E30               	movlw	low STR_2
  1541  0022EA  6E35               	movwf	lcd_putrs@ptr,c
  1542  0022EC  0E0F               	movlw	high STR_2
  1543  0022EE  6E36               	movwf	lcd_putrs@ptr+1,c
  1544  0022F0  EC29  F010         	call	_lcd_putrs	;wreg free
  1545                           
  1546                           ;main.c: 160: lcd_gotoxy(1,2);
  1547  0022F4  0E02               	movlw	2
  1548  0022F6  6E31               	movwf	lcd_gotoxy@y,c
  1549  0022F8  0E01               	movlw	1
  1550  0022FA  ECCC  F011         	call	_lcd_gotoxy
  1551                           
  1552                           ;main.c: 161: lcd_putrs("TIEMPO DE VUELTA");
  1553  0022FE  0E0F               	movlw	low STR_3
  1554  002300  6E35               	movwf	lcd_putrs@ptr,c
  1555  002302  0E0F               	movlw	high STR_3
  1556  002304  6E36               	movwf	lcd_putrs@ptr+1,c
  1557  002306  EC29  F010         	call	_lcd_putrs	;wreg free
  1558  00230A  0012               	return		;funcret
  1559  00230C                     __end_of_caratulaCronometro:
  1560                           	opt stack 0
  1561                           tblptru	equ	0xFF8
  1562                           tblptrh	equ	0xFF7
  1563                           tblptrl	equ	0xFF6
  1564                           tablat	equ	0xFF5
  1565                           postinc0	equ	0xFEE
  1566                           wreg	equ	0xFE8
  1567                           postdec1	equ	0xFE5
  1568                           fsr1l	equ	0xFE1
  1569                           postinc2	equ	0xFDE
  1570                           postdec2	equ	0xFDD
  1571                           fsr2h	equ	0xFDA
  1572                           fsr2l	equ	0xFD9
  1573                           status	equ	0xFD8
  1574                           
  1575 ;; *************** function _inicializarCronometro *****************
  1576 ;; Defined at:
  1577 ;;		line 183 in file "main.c"
  1578 ;; Parameters:    Size  Location     Type
  1579 ;;		None
  1580 ;; Auto vars:     Size  Location     Type
  1581 ;;		None
  1582 ;; Return value:  Size  Location     Type
  1583 ;;		None               void
  1584 ;; Registers used:
  1585 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1586 ;; Tracked objects:
  1587 ;;		On entry : 0/0
  1588 ;;		On exit  : 0/0
  1589 ;;		Unchanged: 0/0
  1590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1593 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1594 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1595 ;;Total ram usage:        1 bytes
  1596 ;; Hardware stack levels used:    1
  1597 ;; Hardware stack levels required when called:    5
  1598 ;; This function calls:
  1599 ;;		_Write_RTC
  1600 ;;		_lcd_comand
  1601 ;;		_lcd_gotoxy
  1602 ;;		_lcd_putrs
  1603 ;; This function is called by:
  1604 ;;		_main
  1605 ;; This function uses a non-reentrant model
  1606 ;;
  1607                           
  1608                           	psect	text7
  1609  001B8A                     __ptext7:
  1610                           	opt stack 0
  1611  001B8A                     _inicializarCronometro:
  1612                           	opt stack 25
  1613                           
  1614                           ;main.c: 184: if (PORTAbits.RA5 == 0 && estadoCentro == 2)
  1615                           
  1616                           ;incstack = 0
  1617  001B8A  BA80               	btfsc	3968,5,c	;volatile
  1618  001B8C  0012               	return	
  1619  001B8E  0E02               	movlw	2
  1620  001B90  1803               	xorwf	_estadoCentro,w,c
  1621  001B92  1004               	iorwf	_estadoCentro+1,w,c
  1622  001B94  A4D8               	btfss	status,2,c
  1623  001B96  0012               	return	
  1624                           
  1625                           ;main.c: 185: {
  1626                           ;main.c: 186: estadoCentro++;
  1627  001B98  4A03               	infsnz	_estadoCentro,f,c
  1628  001B9A  2A04               	incf	_estadoCentro+1,f,c
  1629                           
  1630                           ;main.c: 187: _delay((unsigned long)((40)*(8000000/4000.0)));
  1631  001B9C  0E68               	movlw	104
  1632  001B9E  6E3A               	movwf	??_inicializarCronometro& (0+255),c
  1633  001BA0  0EE4               	movlw	228
  1634  001BA2                     u2077:
  1635  001BA2  2EE8               	decfsz	wreg,f,c
  1636  001BA4  D7FE               	goto	u2077
  1637  001BA6  2E3A               	decfsz	??_inicializarCronometro& (0+255),f,c
  1638  001BA8  D7FC               	goto	u2077
  1639  001BAA  D000               	nop2	
  1640                           
  1641                           ;main.c: 188: lcd_comand(0b00000001);
  1642  001BAC  0E01               	movlw	1
  1643  001BAE  EC1D  F012         	call	_lcd_comand
  1644                           
  1645                           ;main.c: 189: _delay((unsigned long)((90)*(8000000/4000.0)));
  1646  001BB2  0EEA               	movlw	234
  1647  001BB4  6E3A               	movwf	??_inicializarCronometro& (0+255),c
  1648  001BB6  0EC3               	movlw	195
  1649  001BB8                     u2087:
  1650  001BB8  2EE8               	decfsz	wreg,f,c
  1651  001BBA  D7FE               	goto	u2087
  1652  001BBC  2E3A               	decfsz	??_inicializarCronometro& (0+255),f,c
  1653  001BBE  D7FC               	goto	u2087
  1654  001BC0  F000               	nop	
  1655                           
  1656                           ;main.c: 190: lcd_gotoxy(1,1);
  1657  001BC2  0E01               	movlw	1
  1658  001BC4  6E31               	movwf	lcd_gotoxy@y,c
  1659  001BC6  0E01               	movlw	1
  1660  001BC8  ECCC  F011         	call	_lcd_gotoxy
  1661                           
  1662                           ;main.c: 191: lcd_putrs("CRONOMETRANDO");
  1663  001BCC  0E4E               	movlw	low STR_5
  1664  001BCE  6E35               	movwf	lcd_putrs@ptr,c
  1665  001BD0  0E0F               	movlw	high STR_5
  1666  001BD2  6E36               	movwf	lcd_putrs@ptr+1,c
  1667  001BD4  EC29  F010         	call	_lcd_putrs	;wreg free
  1668                           
  1669                           ;main.c: 192: hora = 0;
  1670  001BD8  0E00               	movlw	0
  1671  001BDA  6E5A               	movwf	_hora+1,c
  1672  001BDC  0E00               	movlw	0
  1673  001BDE  6E59               	movwf	_hora,c
  1674                           
  1675                           ;main.c: 193: minuto = 0;
  1676  001BE0  0E00               	movlw	0
  1677  001BE2  6E0E               	movwf	_minuto+1,c
  1678  001BE4  0E00               	movlw	0
  1679  001BE6  6E0D               	movwf	_minuto,c
  1680                           
  1681                           ;main.c: 194: segundo = 0;
  1682  001BE8  0E00               	movlw	0
  1683  001BEA  6E12               	movwf	_segundo+1,c
  1684  001BEC  0E00               	movlw	0
  1685  001BEE  6E11               	movwf	_segundo,c
  1686                           
  1687                           ;main.c: 195: milesima = 0;
  1688  001BF0  0E00               	movlw	0
  1689  001BF2  6E08               	movwf	_milesima+1,c
  1690  001BF4  0E00               	movlw	0
  1691  001BF6  6E07               	movwf	_milesima,c
  1692                           
  1693                           ;main.c: 196: Write_RTC();
  1694  001BF8  EC00  F009         	call	_Write_RTC	;wreg free
  1695                           
  1696                           ;main.c: 197: _delay((unsigned long)((90)*(8000000/4000.0)));
  1697  001BFC  0EEA               	movlw	234
  1698  001BFE  6E3A               	movwf	??_inicializarCronometro& (0+255),c
  1699  001C00  0EC3               	movlw	195
  1700  001C02                     u2097:
  1701  001C02  2EE8               	decfsz	wreg,f,c
  1702  001C04  D7FE               	goto	u2097
  1703  001C06  2E3A               	decfsz	??_inicializarCronometro& (0+255),f,c
  1704  001C08  D7FC               	goto	u2097
  1705  001C0A  F000               	nop	
  1706                           
  1707                           ;main.c: 198: flajReloj = 1;
  1708  001C0C  0E00               	movlw	0
  1709  001C0E  6E06               	movwf	_flajReloj+1,c
  1710  001C10  0E01               	movlw	1
  1711  001C12  6E05               	movwf	_flajReloj,c
  1712  001C14  0012               	return	
  1713  001C16  0012               	return		;funcret
  1714  001C18                     __end_of_inicializarCronometro:
  1715                           	opt stack 0
  1716                           tblptru	equ	0xFF8
  1717                           tblptrh	equ	0xFF7
  1718                           tblptrl	equ	0xFF6
  1719                           tablat	equ	0xFF5
  1720                           postinc0	equ	0xFEE
  1721                           wreg	equ	0xFE8
  1722                           postdec1	equ	0xFE5
  1723                           fsr1l	equ	0xFE1
  1724                           postinc2	equ	0xFDE
  1725                           postdec2	equ	0xFDD
  1726                           fsr2h	equ	0xFDA
  1727                           fsr2l	equ	0xFD9
  1728                           status	equ	0xFD8
  1729                           
  1730 ;; *************** function _deteniendoCronometro *****************
  1731 ;; Defined at:
  1732 ;;		line 214 in file "main.c"
  1733 ;; Parameters:    Size  Location     Type
  1734 ;;		None
  1735 ;; Auto vars:     Size  Location     Type
  1736 ;;		None
  1737 ;; Return value:  Size  Location     Type
  1738 ;;		None               void
  1739 ;; Registers used:
  1740 ;;		wreg, status,2, status,0
  1741 ;; Tracked objects:
  1742 ;;		On entry : 0/0
  1743 ;;		On exit  : 0/0
  1744 ;;		Unchanged: 0/0
  1745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1746 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1747 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1748 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1749 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1750 ;;Total ram usage:        1 bytes
  1751 ;; Hardware stack levels used:    1
  1752 ;; This function calls:
  1753 ;;		Nothing
  1754 ;; This function is called by:
  1755 ;;		_main
  1756 ;; This function uses a non-reentrant model
  1757 ;;
  1758                           
  1759                           	psect	text8
  1760  001FA2                     __ptext8:
  1761                           	opt stack 0
  1762  001FA2                     _deteniendoCronometro:
  1763                           	opt stack 30
  1764                           
  1765                           ;main.c: 215: if (estadoCentro == 3 && PORTAbits.RA5 == 0){
  1766                           
  1767                           ;incstack = 0
  1768  001FA2  0E03               	movlw	3
  1769  001FA4  1803               	xorwf	_estadoCentro,w,c
  1770  001FA6  1004               	iorwf	_estadoCentro+1,w,c
  1771  001FA8  A4D8               	btfss	status,2,c
  1772  001FAA  0012               	return	
  1773  001FAC  BA80               	btfsc	3968,5,c	;volatile
  1774  001FAE  0012               	return	
  1775                           
  1776                           ;main.c: 216: _delay((unsigned long)((98)*(8000000/4000.0)));
  1777  001FB0  0EFF               	movlw	255
  1778  001FB2  6E2D               	movwf	??_deteniendoCronometro& (0+255),c
  1779  001FB4  0E8A               	movlw	138
  1780  001FB6                     u2107:
  1781  001FB6  2EE8               	decfsz	wreg,f,c
  1782  001FB8  D7FE               	goto	u2107
  1783  001FBA  2E2D               	decfsz	??_deteniendoCronometro& (0+255),f,c
  1784  001FBC  D7FC               	goto	u2107
  1785  001FBE  D000               	nop2	
  1786                           
  1787                           ;main.c: 217: estadoCentro = 4;
  1788  001FC0  0E00               	movlw	0
  1789  001FC2  6E04               	movwf	_estadoCentro+1,c
  1790  001FC4  0E04               	movlw	4
  1791  001FC6  6E03               	movwf	_estadoCentro,c
  1792                           
  1793                           ;main.c: 218: _delay((unsigned long)((98)*(8000000/4000.0)));
  1794  001FC8  0EFF               	movlw	255
  1795  001FCA  6E2D               	movwf	??_deteniendoCronometro& (0+255),c
  1796  001FCC  0E8A               	movlw	138
  1797  001FCE                     u2117:
  1798  001FCE  2EE8               	decfsz	wreg,f,c
  1799  001FD0  D7FE               	goto	u2117
  1800  001FD2  2E2D               	decfsz	??_deteniendoCronometro& (0+255),f,c
  1801  001FD4  D7FC               	goto	u2117
  1802  001FD6  D000               	nop2	
  1803                           
  1804                           ;main.c: 219: flajReloj = 0;
  1805  001FD8  0E00               	movlw	0
  1806  001FDA  6E06               	movwf	_flajReloj+1,c
  1807  001FDC  0E00               	movlw	0
  1808  001FDE  6E05               	movwf	_flajReloj,c
  1809                           
  1810                           ;main.c: 220: unMinuto = minuto;
  1811  001FE0  C00D  F01D         	movff	_minuto,_unMinuto
  1812  001FE4  C00E  F01E         	movff	_minuto+1,_unMinuto+1
  1813                           
  1814                           ;main.c: 221: unSegundo = segundo;
  1815  001FE8  C011  F021         	movff	_segundo,_unSegundo
  1816  001FEC  C012  F022         	movff	_segundo+1,_unSegundo+1
  1817                           
  1818                           ;main.c: 222: unaMilesima = milesima;
  1819  001FF0  C007  F023         	movff	_milesima,_unaMilesima
  1820  001FF4  C008  F024         	movff	_milesima+1,_unaMilesima+1
  1821  001FF8  0012               	return	
  1822  001FFA  0012               	return		;funcret
  1823  001FFC                     __end_of_deteniendoCronometro:
  1824                           	opt stack 0
  1825                           tblptru	equ	0xFF8
  1826                           tblptrh	equ	0xFF7
  1827                           tblptrl	equ	0xFF6
  1828                           tablat	equ	0xFF5
  1829                           postinc0	equ	0xFEE
  1830                           wreg	equ	0xFE8
  1831                           postdec1	equ	0xFE5
  1832                           fsr1l	equ	0xFE1
  1833                           postinc2	equ	0xFDE
  1834                           postdec2	equ	0xFDD
  1835                           fsr2h	equ	0xFDA
  1836                           fsr2l	equ	0xFD9
  1837                           status	equ	0xFD8
  1838                           
  1839 ;; *************** function _cronometrando *****************
  1840 ;; Defined at:
  1841 ;;		line 202 in file "main.c"
  1842 ;; Parameters:    Size  Location     Type
  1843 ;;		None
  1844 ;; Auto vars:     Size  Location     Type
  1845 ;;		None
  1846 ;; Return value:  Size  Location     Type
  1847 ;;		None               void
  1848 ;; Registers used:
  1849 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1850 ;; Tracked objects:
  1851 ;;		On entry : 0/0
  1852 ;;		On exit  : 0/0
  1853 ;;		Unchanged: 0/0
  1854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1858 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1859 ;;Total ram usage:        0 bytes
  1860 ;; Hardware stack levels used:    1
  1861 ;; Hardware stack levels required when called:    6
  1862 ;; This function calls:
  1863 ;;		_Read_RTC
  1864 ;;		_mostrarReloj
  1865 ;; This function is called by:
  1866 ;;		_main
  1867 ;; This function uses a non-reentrant model
  1868 ;;
  1869                           
  1870                           	psect	text9
  1871  002224                     __ptext9:
  1872                           	opt stack 0
  1873  002224                     _cronometrando:
  1874                           	opt stack 24
  1875                           
  1876                           ;main.c: 203: if (flajReloj == 1 && estadoCentro == 3){
  1877                           
  1878                           ;incstack = 0
  1879  002224  0405               	decf	_flajReloj,w,c
  1880  002226  1006               	iorwf	_flajReloj+1,w,c
  1881  002228  A4D8               	btfss	status,2,c
  1882  00222A  0012               	return	
  1883  00222C  0E03               	movlw	3
  1884  00222E  1803               	xorwf	_estadoCentro,w,c
  1885  002230  1004               	iorwf	_estadoCentro+1,w,c
  1886  002232  A4D8               	btfss	status,2,c
  1887  002234  0012               	return	
  1888                           
  1889                           ;main.c: 204: milesima = milesima + 9;
  1890  002236  0E09               	movlw	9
  1891  002238  2407               	addwf	_milesima,w,c
  1892  00223A  6E07               	movwf	_milesima,c
  1893  00223C  0E00               	movlw	0
  1894  00223E  2008               	addwfc	_milesima+1,w,c
  1895  002240  6E08               	movwf	_milesima+1,c
  1896                           
  1897                           ;main.c: 205: Read_RTC();
  1898  002242  ECB6  F00B         	call	_Read_RTC	;wreg free
  1899                           
  1900                           ;main.c: 206: mostrarReloj();
  1901  002246  ECED  F010         	call	_mostrarReloj	;wreg free
  1902                           
  1903                           ;main.c: 208: if (milesima == 999){
  1904  00224A  0EE7               	movlw	231
  1905  00224C  1807               	xorwf	_milesima,w,c
  1906  00224E  E109               	bnz	l294
  1907  002250  0E03               	movlw	3
  1908  002252  1808               	xorwf	_milesima+1,w,c
  1909  002254  A4D8               	btfss	status,2,c
  1910  002256  0012               	return	
  1911                           
  1912                           ;main.c: 209: milesima = 0;
  1913  002258  0E00               	movlw	0
  1914  00225A  6E08               	movwf	_milesima+1,c
  1915  00225C  0E00               	movlw	0
  1916  00225E  6E07               	movwf	_milesima,c
  1917  002260  0012               	return	
  1918  002262                     l294:
  1919  002262  0012               	return		;funcret
  1920  002264                     __end_of_cronometrando:
  1921                           	opt stack 0
  1922                           tblptru	equ	0xFF8
  1923                           tblptrh	equ	0xFF7
  1924                           tblptrl	equ	0xFF6
  1925                           tablat	equ	0xFF5
  1926                           postinc0	equ	0xFEE
  1927                           wreg	equ	0xFE8
  1928                           postdec1	equ	0xFE5
  1929                           fsr1l	equ	0xFE1
  1930                           postinc2	equ	0xFDE
  1931                           postdec2	equ	0xFDD
  1932                           fsr2h	equ	0xFDA
  1933                           fsr2l	equ	0xFD9
  1934                           status	equ	0xFD8
  1935                           
  1936 ;; *************** function _Read_RTC *****************
  1937 ;; Defined at:
  1938 ;;		line 111 in file "../../unimic/headers\unmc_rtcc_01.h"
  1939 ;; Parameters:    Size  Location     Type
  1940 ;;		None
  1941 ;; Auto vars:     Size  Location     Type
  1942 ;;		None
  1943 ;; Return value:  Size  Location     Type
  1944 ;;		None               void
  1945 ;; Registers used:
  1946 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1947 ;; Tracked objects:
  1948 ;;		On entry : 0/0
  1949 ;;		On exit  : 0/0
  1950 ;;		Unchanged: 0/0
  1951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1955 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1956 ;;Total ram usage:        0 bytes
  1957 ;; Hardware stack levels used:    1
  1958 ;; Hardware stack levels required when called:    1
  1959 ;; This function calls:
  1960 ;;		_RtccReadDate
  1961 ;;		_RtccReadTime
  1962 ;; This function is called by:
  1963 ;;		_cronometrando
  1964 ;; This function uses a non-reentrant model
  1965 ;;
  1966                           
  1967                           	psect	text10
  1968  00176C                     __ptext10:
  1969                           	opt stack 0
  1970  00176C                     _Read_RTC:
  1971                           	opt stack 28
  1972                           
  1973                           ;headers\unmc_rtcc_01.h: 114: RtccReadTime(&RtccTime);
  1974                           
  1975                           ;incstack = 0
  1976  00176C  0E29               	movlw	low _RtccTime
  1977  00176E  6E2D               	movwf	RtccReadTime@pTm,c
  1978  001770  0E00               	movlw	high _RtccTime
  1979  001772  6E2E               	movwf	RtccReadTime@pTm+1,c
  1980  001774  EC0A  F00F         	call	_RtccReadTime	;wreg free
  1981                           
  1982                           ;headers\unmc_rtcc_01.h: 115: segundo_u=(RtccTime.f.sec & 0x0F);
  1983  001778  502A               	movf	_RtccTime+1,w,c
  1984  00177A  0B0F               	andlw	15
  1985  00177C  0100               	movlb	0	; () banked
  1986  00177E  6FF8               	movwf	_segundo_u& (0+255),b
  1987                           
  1988                           ; BSR set to: 0
  1989                           ;headers\unmc_rtcc_01.h: 116: segundo_d=((RtccTime.f.sec & 0xF0)>>4);
  1990  001780  382A               	swapf	_RtccTime+1,w,c
  1991  001782  0B0F               	andlw	15
  1992  001784  0B0F               	andlw	15
  1993  001786  0100               	movlb	0	; () banked
  1994  001788  6FF7               	movwf	_segundo_d& (0+255),b
  1995                           
  1996                           ; BSR set to: 0
  1997                           ;headers\unmc_rtcc_01.h: 117: minuto_u=(RtccTime.f.min & 0x0F);
  1998  00178A  502B               	movf	_RtccTime+2,w,c
  1999  00178C  0B0F               	andlw	15
  2000  00178E  0100               	movlb	0	; () banked
  2001  001790  6FF6               	movwf	_minuto_u& (0+255),b
  2002                           
  2003                           ; BSR set to: 0
  2004                           ;headers\unmc_rtcc_01.h: 118: minuto_d=((RtccTime.f.min & 0xF0)>>4);
  2005  001792  382B               	swapf	_RtccTime+2,w,c
  2006  001794  0B0F               	andlw	15
  2007  001796  0B0F               	andlw	15
  2008  001798  0100               	movlb	0	; () banked
  2009  00179A  6FF5               	movwf	_minuto_d& (0+255),b
  2010                           
  2011                           ; BSR set to: 0
  2012                           ;headers\unmc_rtcc_01.h: 119: hora_u=(RtccTime.f.hour & 0x0F);
  2013  00179C  502C               	movf	_RtccTime+3,w,c
  2014  00179E  0B0F               	andlw	15
  2015  0017A0  0100               	movlb	0	; () banked
  2016  0017A2  6FF2               	movwf	_hora_u& (0+255),b
  2017                           
  2018                           ; BSR set to: 0
  2019                           ;headers\unmc_rtcc_01.h: 120: hora_d=((RtccTime.f.hour & 0xF0)>>4);
  2020  0017A4  382C               	swapf	_RtccTime+3,w,c
  2021  0017A6  0B0F               	andlw	15
  2022  0017A8  0B0F               	andlw	15
  2023  0017AA  0100               	movlb	0	; () banked
  2024  0017AC  6FF1               	movwf	_hora_d& (0+255),b
  2025                           
  2026                           ;headers\unmc_rtcc_01.h: 121: RtccReadDate(&RtccDate);
  2027  0017AE  0E25               	movlw	low _RtccDate
  2028  0017B0  6E2D               	movwf	RtccReadDate@pDt,c
  2029  0017B2  0E00               	movlw	high _RtccDate
  2030  0017B4  6E2E               	movwf	RtccReadDate@pDt+1,c
  2031  0017B6  EC0C  F00E         	call	_RtccReadDate	;wreg free
  2032                           
  2033                           ;headers\unmc_rtcc_01.h: 122: fecha_u=(RtccDate.f.mday & 0x0F);
  2034  0017BA  5026               	movf	_RtccDate+1,w,c
  2035  0017BC  0B0F               	andlw	15
  2036  0017BE  0100               	movlb	0	; () banked
  2037  0017C0  6FF0               	movwf	_fecha_u& (0+255),b
  2038                           
  2039                           ; BSR set to: 0
  2040                           ;headers\unmc_rtcc_01.h: 123: fecha_d=((RtccDate.f.mday & 0xF0)>>4);
  2041  0017C2  3826               	swapf	_RtccDate+1,w,c
  2042  0017C4  0B0F               	andlw	15
  2043  0017C6  0B0F               	andlw	15
  2044  0017C8  0100               	movlb	0	; () banked
  2045  0017CA  6FEF               	movwf	_fecha_d& (0+255),b
  2046                           
  2047                           ; BSR set to: 0
  2048                           ;headers\unmc_rtcc_01.h: 124: mes_u=(RtccDate.f.mon & 0x0F);
  2049  0017CC  5027               	movf	_RtccDate+2,w,c
  2050  0017CE  0B0F               	andlw	15
  2051  0017D0  0100               	movlb	0	; () banked
  2052  0017D2  6FF4               	movwf	_mes_u& (0+255),b
  2053                           
  2054                           ; BSR set to: 0
  2055                           ;headers\unmc_rtcc_01.h: 125: mes_d=((RtccDate.f.mon & 0xF0)>>4);
  2056  0017D4  3827               	swapf	_RtccDate+2,w,c
  2057  0017D6  0B0F               	andlw	15
  2058  0017D8  0B0F               	andlw	15
  2059  0017DA  0100               	movlb	0	; () banked
  2060  0017DC  6FF3               	movwf	_mes_d& (0+255),b
  2061                           
  2062                           ; BSR set to: 0
  2063                           ;headers\unmc_rtcc_01.h: 126: dia_semana=RtccDate.f.wday;
  2064  0017DE  C025  F0EE         	movff	_RtccDate,_dia_semana
  2065                           
  2066                           ; BSR set to: 0
  2067                           ;headers\unmc_rtcc_01.h: 127: anio_u=(RtccDate.f.year & 0x0F);
  2068  0017E2  5028               	movf	_RtccDate+3,w,c
  2069  0017E4  0B0F               	andlw	15
  2070  0017E6  0100               	movlb	0	; () banked
  2071  0017E8  6FED               	movwf	_anio_u& (0+255),b
  2072                           
  2073                           ; BSR set to: 0
  2074                           ;headers\unmc_rtcc_01.h: 128: anio_d=((RtccDate.f.year & 0xF0)>>4);
  2075  0017EA  3828               	swapf	_RtccDate+3,w,c
  2076  0017EC  0B0F               	andlw	15
  2077  0017EE  0B0F               	andlw	15
  2078  0017F0  0100               	movlb	0	; () banked
  2079  0017F2  6FEC               	movwf	_anio_d& (0+255),b
  2080                           
  2081                           ; BSR set to: 0
  2082                           ;headers\unmc_rtcc_01.h: 130: segundo=segundo_d*10+segundo_u;
  2083  0017F4  0100               	movlb	0	; () banked
  2084  0017F6  51F7               	movf	_segundo_d& (0+255),w,b
  2085  0017F8  0D0A               	mullw	10
  2086  0017FA  0100               	movlb	0	; () banked
  2087  0017FC  51F8               	movf	_segundo_u& (0+255),w,b
  2088  0017FE  24F3               	addwf	prodl,w,c
  2089  001800  6E11               	movwf	_segundo,c
  2090  001802  0100               	movlb	0	; () banked
  2091  001804  0E00               	movlw	0
  2092  001806  20F4               	addwfc	prodh,w,c
  2093  001808  6E12               	movwf	_segundo+1,c
  2094                           
  2095                           ; BSR set to: 0
  2096                           ;headers\unmc_rtcc_01.h: 131: minuto=minuto_d*10+minuto_u;
  2097  00180A  0100               	movlb	0	; () banked
  2098  00180C  51F5               	movf	_minuto_d& (0+255),w,b
  2099  00180E  0D0A               	mullw	10
  2100  001810  0100               	movlb	0	; () banked
  2101  001812  51F6               	movf	_minuto_u& (0+255),w,b
  2102  001814  24F3               	addwf	prodl,w,c
  2103  001816  6E0D               	movwf	_minuto,c
  2104  001818  0100               	movlb	0	; () banked
  2105  00181A  0E00               	movlw	0
  2106  00181C  20F4               	addwfc	prodh,w,c
  2107  00181E  6E0E               	movwf	_minuto+1,c
  2108                           
  2109                           ; BSR set to: 0
  2110                           ;headers\unmc_rtcc_01.h: 132: hora=hora_d*10+hora_u;
  2111  001820  0100               	movlb	0	; () banked
  2112  001822  51F1               	movf	_hora_d& (0+255),w,b
  2113  001824  0D0A               	mullw	10
  2114  001826  0100               	movlb	0	; () banked
  2115  001828  51F2               	movf	_hora_u& (0+255),w,b
  2116  00182A  24F3               	addwf	prodl,w,c
  2117  00182C  6E59               	movwf	_hora,c
  2118  00182E  0100               	movlb	0	; () banked
  2119  001830  0E00               	movlw	0
  2120  001832  20F4               	addwfc	prodh,w,c
  2121  001834  6E5A               	movwf	_hora+1,c
  2122                           
  2123                           ; BSR set to: 0
  2124                           ;headers\unmc_rtcc_01.h: 133: dia=fecha_d*10+fecha_u;
  2125  001836  0100               	movlb	0	; () banked
  2126  001838  51EF               	movf	_fecha_d& (0+255),w,b
  2127  00183A  0D0A               	mullw	10
  2128  00183C  0100               	movlb	0	; () banked
  2129  00183E  51F0               	movf	_fecha_u& (0+255),w,b
  2130  001840  24F3               	addwf	prodl,w,c
  2131  001842  6E55               	movwf	_dia,c
  2132  001844  0100               	movlb	0	; () banked
  2133  001846  0E00               	movlw	0
  2134  001848  20F4               	addwfc	prodh,w,c
  2135  00184A  6E56               	movwf	_dia+1,c
  2136                           
  2137                           ; BSR set to: 0
  2138                           ;headers\unmc_rtcc_01.h: 134: diasem=dia_semana;
  2139  00184C  C0EE  F057         	movff	_dia_semana,_diasem
  2140  001850  6A58               	clrf	_diasem+1,c
  2141                           
  2142                           ; BSR set to: 0
  2143                           ;headers\unmc_rtcc_01.h: 135: mes=mes_d*10+mes_u;
  2144  001852  0100               	movlb	0	; () banked
  2145  001854  51F3               	movf	_mes_d& (0+255),w,b
  2146  001856  0D0A               	mullw	10
  2147  001858  0100               	movlb	0	; () banked
  2148  00185A  51F4               	movf	_mes_u& (0+255),w,b
  2149  00185C  24F3               	addwf	prodl,w,c
  2150  00185E  6E5B               	movwf	_mes,c
  2151  001860  0100               	movlb	0	; () banked
  2152  001862  0E00               	movlw	0
  2153  001864  20F4               	addwfc	prodh,w,c
  2154  001866  6E5C               	movwf	_mes+1,c
  2155                           
  2156                           ; BSR set to: 0
  2157                           ;headers\unmc_rtcc_01.h: 136: anio=anio_d*10+anio_u;
  2158  001868  0100               	movlb	0	; () banked
  2159  00186A  51EC               	movf	_anio_d& (0+255),w,b
  2160  00186C  0D0A               	mullw	10
  2161  00186E  0100               	movlb	0	; () banked
  2162  001870  51ED               	movf	_anio_u& (0+255),w,b
  2163  001872  24F3               	addwf	prodl,w,c
  2164  001874  6E53               	movwf	_anio,c
  2165  001876  0100               	movlb	0	; () banked
  2166  001878  0E00               	movlw	0
  2167  00187A  20F4               	addwfc	prodh,w,c
  2168  00187C  6E54               	movwf	_anio+1,c
  2169                           
  2170                           ; BSR set to: 0
  2171  00187E  0012               	return		;funcret
  2172  001880                     __end_of_Read_RTC:
  2173                           	opt stack 0
  2174                           tblptru	equ	0xFF8
  2175                           tblptrh	equ	0xFF7
  2176                           tblptrl	equ	0xFF6
  2177                           tablat	equ	0xFF5
  2178                           prodh	equ	0xFF4
  2179                           prodl	equ	0xFF3
  2180                           postinc0	equ	0xFEE
  2181                           wreg	equ	0xFE8
  2182                           postdec1	equ	0xFE5
  2183                           fsr1l	equ	0xFE1
  2184                           postinc2	equ	0xFDE
  2185                           postdec2	equ	0xFDD
  2186                           fsr2h	equ	0xFDA
  2187                           fsr2l	equ	0xFD9
  2188                           status	equ	0xFD8
  2189                           
  2190 ;; *************** function _RtccReadTime *****************
  2191 ;; Defined at:
  2192 ;;		line 23 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccReadTime.c"
  2193 ;; Parameters:    Size  Location     Type
  2194 ;;  pTm             2    0[COMRAM] PTR struct .
  2195 ;;		 -> RtccTime(4), 
  2196 ;; Auto vars:     Size  Location     Type
  2197 ;;  rTD0            8   10[COMRAM] struct .
  2198 ;;  rTD1            8    2[COMRAM] struct .
  2199 ;; Return value:  Size  Location     Type
  2200 ;;		None               void
  2201 ;; Registers used:
  2202 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2203 ;; Tracked objects:
  2204 ;;		On entry : 0/0
  2205 ;;		On exit  : 0/0
  2206 ;;		Unchanged: 0/0
  2207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2208 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2209 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2211 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2212 ;;Total ram usage:       18 bytes
  2213 ;; Hardware stack levels used:    1
  2214 ;; This function calls:
  2215 ;;		Nothing
  2216 ;; This function is called by:
  2217 ;;		_Read_RTC
  2218 ;; This function uses a non-reentrant model
  2219 ;;
  2220                           
  2221                           	psect	text11
  2222  001E14                     __ptext11:
  2223                           	opt stack 0
  2224  001E14                     _RtccReadTime:
  2225                           	opt stack 28
  2226  001E14  0EFC               	movlw	252
  2227  001E16  010F               	movlb	15	; () banked
  2228  001E18  173F               	andwf	63,f,b	;volatile
  2229                           
  2230                           ; BSR set to: 15
  2231  001E1A  010F               	movlb	15	; () banked
  2232  001E1C  813F               	bsf	63,0,b	;volatile
  2233                           
  2234                           ; BSR set to: 15
  2235  001E1E  CF98 F03B          	movff	3992,RtccReadTime@rTD0+4	;volatile
  2236                           
  2237                           ; BSR set to: 15
  2238  001E22  CF99 F03C          	movff	3993,RtccReadTime@rTD0+5	;volatile
  2239                           
  2240                           ; BSR set to: 15
  2241  001E26  CF98 F03D          	movff	3992,RtccReadTime@rTD0+6	;volatile
  2242                           
  2243                           ; BSR set to: 15
  2244  001E2A  CF99 F03E          	movff	3993,RtccReadTime@rTD0+7	;volatile
  2245                           
  2246                           ; BSR set to: 15
  2247  001E2E  0EFC               	movlw	252
  2248  001E30  010F               	movlb	15	; () banked
  2249  001E32  173F               	andwf	63,f,b	;volatile
  2250  001E34  010F               	movlb	15	; () banked
  2251  001E36  813F               	bsf	63,0,b	;volatile
  2252                           
  2253                           ; BSR set to: 15
  2254  001E38  CF98 F033          	movff	3992,RtccReadTime@rTD1+4	;volatile
  2255                           
  2256                           ; BSR set to: 15
  2257  001E3C  CF99 F034          	movff	3993,RtccReadTime@rTD1+5	;volatile
  2258                           
  2259                           ; BSR set to: 15
  2260  001E40  CF98 F035          	movff	3992,RtccReadTime@rTD1+6	;volatile
  2261                           
  2262                           ; BSR set to: 15
  2263  001E44  CF99 F036          	movff	3993,RtccReadTime@rTD1+7	;volatile
  2264                           
  2265                           ; BSR set to: 15
  2266  001E48  5035               	movf	RtccReadTime@rTD1+6,w,c
  2267  001E4A  183D               	xorwf	RtccReadTime@rTD0+6,w,c
  2268  001E4C  A4D8               	btfss	status,2,c
  2269  001E4E  D7E2               	goto	l2414
  2270                           
  2271                           ; BSR set to: 15
  2272                           
  2273                           ; BSR set to: 15
  2274  001E50  EE20 F003          	lfsr	2,3
  2275  001E54  502D               	movf	RtccReadTime@pTm,w,c
  2276  001E56  26D9               	addwf	fsr2l,f,c
  2277  001E58  502E               	movf	RtccReadTime@pTm+1,w,c
  2278  001E5A  22DA               	addwfc	fsr2h,f,c
  2279  001E5C  C03B  FFDF         	movff	RtccReadTime@rTD0+4,indf2
  2280  001E60  EE20 F002          	lfsr	2,2
  2281  001E64  502D               	movf	RtccReadTime@pTm,w,c
  2282  001E66  26D9               	addwf	fsr2l,f,c
  2283  001E68  502E               	movf	RtccReadTime@pTm+1,w,c
  2284  001E6A  22DA               	addwfc	fsr2h,f,c
  2285  001E6C  C03E  FFDF         	movff	RtccReadTime@rTD0+7,indf2
  2286  001E70  EE20 F001          	lfsr	2,1
  2287  001E74  502D               	movf	RtccReadTime@pTm,w,c
  2288  001E76  26D9               	addwf	fsr2l,f,c
  2289  001E78  502E               	movf	RtccReadTime@pTm+1,w,c
  2290  001E7A  22DA               	addwfc	fsr2h,f,c
  2291  001E7C  C03D  FFDF         	movff	RtccReadTime@rTD0+6,indf2
  2292                           
  2293                           ; BSR set to: 15
  2294  001E80  0012               	return		;funcret
  2295  001E82                     __end_of_RtccReadTime:
  2296                           	opt stack 0
  2297                           tblptru	equ	0xFF8
  2298                           tblptrh	equ	0xFF7
  2299                           tblptrl	equ	0xFF6
  2300                           tablat	equ	0xFF5
  2301                           prodh	equ	0xFF4
  2302                           prodl	equ	0xFF3
  2303                           postinc0	equ	0xFEE
  2304                           wreg	equ	0xFE8
  2305                           postdec1	equ	0xFE5
  2306                           fsr1l	equ	0xFE1
  2307                           indf2	equ	0xFDF
  2308                           postinc2	equ	0xFDE
  2309                           postdec2	equ	0xFDD
  2310                           fsr2h	equ	0xFDA
  2311                           fsr2l	equ	0xFD9
  2312                           status	equ	0xFD8
  2313                           
  2314 ;; *************** function _RtccReadDate *****************
  2315 ;; Defined at:
  2316 ;;		line 23 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccReadDate.c"
  2317 ;; Parameters:    Size  Location     Type
  2318 ;;  pDt             2    0[COMRAM] PTR struct .
  2319 ;;		 -> RtccDate(4), 
  2320 ;; Auto vars:     Size  Location     Type
  2321 ;;  rTD0            8   10[COMRAM] struct .
  2322 ;;  rTD1            8    2[COMRAM] struct .
  2323 ;; Return value:  Size  Location     Type
  2324 ;;		None               void
  2325 ;; Registers used:
  2326 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2327 ;; Tracked objects:
  2328 ;;		On entry : 0/0
  2329 ;;		On exit  : 0/0
  2330 ;;		Unchanged: 0/0
  2331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2332 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2333 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2335 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2336 ;;Total ram usage:       18 bytes
  2337 ;; Hardware stack levels used:    1
  2338 ;; This function calls:
  2339 ;;		Nothing
  2340 ;; This function is called by:
  2341 ;;		_Read_RTC
  2342 ;; This function uses a non-reentrant model
  2343 ;;
  2344                           
  2345                           	psect	text12
  2346  001C18                     __ptext12:
  2347                           	opt stack 0
  2348  001C18                     _RtccReadDate:
  2349                           	opt stack 28
  2350  001C18  0EFC               	movlw	252
  2351  001C1A  010F               	movlb	15	; () banked
  2352  001C1C  173F               	andwf	63,f,b	;volatile
  2353  001C1E  0E03               	movlw	3
  2354  001C20  010F               	movlb	15	; () banked
  2355  001C22  133F               	iorwf	63,f,b	;volatile
  2356                           
  2357                           ; BSR set to: 15
  2358  001C24  CF98 F037          	movff	3992,RtccReadDate@rTD0	;volatile
  2359                           
  2360                           ; BSR set to: 15
  2361  001C28  CF99 F038          	movff	3993,RtccReadDate@rTD0+1	;volatile
  2362                           
  2363                           ; BSR set to: 15
  2364  001C2C  CF98 F039          	movff	3992,RtccReadDate@rTD0+2	;volatile
  2365                           
  2366                           ; BSR set to: 15
  2367  001C30  CF99 F03A          	movff	3993,RtccReadDate@rTD0+3	;volatile
  2368                           
  2369                           ; BSR set to: 15
  2370  001C34  CF98 F03B          	movff	3992,RtccReadDate@rTD0+4	;volatile
  2371                           
  2372                           ; BSR set to: 15
  2373  001C38  CF99 F03C          	movff	3993,RtccReadDate@rTD0+5	;volatile
  2374  001C3C  0EFC               	movlw	252
  2375  001C3E  010F               	movlb	15	; () banked
  2376  001C40  173F               	andwf	63,f,b	;volatile
  2377  001C42  0E03               	movlw	3
  2378  001C44  010F               	movlb	15	; () banked
  2379  001C46  133F               	iorwf	63,f,b	;volatile
  2380                           
  2381                           ; BSR set to: 15
  2382  001C48  CF98 F02F          	movff	3992,RtccReadDate@rTD1	;volatile
  2383                           
  2384                           ; BSR set to: 15
  2385  001C4C  CF99 F030          	movff	3993,RtccReadDate@rTD1+1	;volatile
  2386                           
  2387                           ; BSR set to: 15
  2388  001C50  CF98 F031          	movff	3992,RtccReadDate@rTD1+2	;volatile
  2389                           
  2390                           ; BSR set to: 15
  2391  001C54  CF99 F032          	movff	3993,RtccReadDate@rTD1+3	;volatile
  2392                           
  2393                           ; BSR set to: 15
  2394  001C58  CF98 F033          	movff	3992,RtccReadDate@rTD1+4	;volatile
  2395                           
  2396                           ; BSR set to: 15
  2397  001C5C  CF99 F034          	movff	3993,RtccReadDate@rTD1+5	;volatile
  2398  001C60  5031               	movf	RtccReadDate@rTD1+2,w,c
  2399  001C62  1839               	xorwf	RtccReadDate@rTD0+2,w,c
  2400  001C64  A4D8               	btfss	status,2,c
  2401  001C66  D7D8               	goto	l2440
  2402                           
  2403                           ; BSR set to: 15
  2404                           
  2405                           ; BSR set to: 15
  2406  001C68  EE20 F001          	lfsr	2,1
  2407  001C6C  502D               	movf	RtccReadDate@pDt,w,c
  2408  001C6E  26D9               	addwf	fsr2l,f,c
  2409  001C70  502E               	movf	RtccReadDate@pDt+1,w,c
  2410  001C72  22DA               	addwfc	fsr2h,f,c
  2411  001C74  C039  FFDF         	movff	RtccReadDate@rTD0+2,indf2
  2412  001C78  EE20 F002          	lfsr	2,2
  2413  001C7C  502D               	movf	RtccReadDate@pDt,w,c
  2414  001C7E  26D9               	addwf	fsr2l,f,c
  2415  001C80  502E               	movf	RtccReadDate@pDt+1,w,c
  2416  001C82  22DA               	addwfc	fsr2h,f,c
  2417  001C84  C03A  FFDF         	movff	RtccReadDate@rTD0+3,indf2
  2418                           
  2419                           ; BSR set to: 15
  2420  001C88  C02D  FFD9         	movff	RtccReadDate@pDt,fsr2l
  2421  001C8C  C02E  FFDA         	movff	RtccReadDate@pDt+1,fsr2h
  2422  001C90  C03C  FFDF         	movff	RtccReadDate@rTD0+5,indf2
  2423                           
  2424                           ; BSR set to: 15
  2425  001C94  EE20 F003          	lfsr	2,3
  2426  001C98  502D               	movf	RtccReadDate@pDt,w,c
  2427  001C9A  26D9               	addwf	fsr2l,f,c
  2428  001C9C  502E               	movf	RtccReadDate@pDt+1,w,c
  2429  001C9E  22DA               	addwfc	fsr2h,f,c
  2430  001CA0  C037  FFDF         	movff	RtccReadDate@rTD0,indf2
  2431                           
  2432                           ; BSR set to: 15
  2433  001CA4  0012               	return		;funcret
  2434  001CA6                     __end_of_RtccReadDate:
  2435                           	opt stack 0
  2436                           tblptru	equ	0xFF8
  2437                           tblptrh	equ	0xFF7
  2438                           tblptrl	equ	0xFF6
  2439                           tablat	equ	0xFF5
  2440                           prodh	equ	0xFF4
  2441                           prodl	equ	0xFF3
  2442                           postinc0	equ	0xFEE
  2443                           wreg	equ	0xFE8
  2444                           postdec1	equ	0xFE5
  2445                           fsr1l	equ	0xFE1
  2446                           indf2	equ	0xFDF
  2447                           postinc2	equ	0xFDE
  2448                           postdec2	equ	0xFDD
  2449                           fsr2h	equ	0xFDA
  2450                           fsr2l	equ	0xFD9
  2451                           status	equ	0xFD8
  2452                           
  2453 ;; *************** function _continuarCronometrando *****************
  2454 ;; Defined at:
  2455 ;;		line 264 in file "main.c"
  2456 ;; Parameters:    Size  Location     Type
  2457 ;;		None
  2458 ;; Auto vars:     Size  Location     Type
  2459 ;;		None
  2460 ;; Return value:  Size  Location     Type
  2461 ;;		None               void
  2462 ;; Registers used:
  2463 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2464 ;; Tracked objects:
  2465 ;;		On entry : 0/0
  2466 ;;		On exit  : 0/0
  2467 ;;		Unchanged: 0/0
  2468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2469 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2470 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2471 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2472 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2473 ;;Total ram usage:        1 bytes
  2474 ;; Hardware stack levels used:    1
  2475 ;; Hardware stack levels required when called:    5
  2476 ;; This function calls:
  2477 ;;		_Write_RTC
  2478 ;;		_almacenarTiempoParcial
  2479 ;;		_lcd_gotoxy
  2480 ;;		_lcd_putrs
  2481 ;; This function is called by:
  2482 ;;		_main
  2483 ;; This function uses a non-reentrant model
  2484 ;;
  2485                           
  2486                           	psect	text13
  2487  001D26                     __ptext13:
  2488                           	opt stack 0
  2489  001D26                     _continuarCronometrando:
  2490                           	opt stack 25
  2491                           
  2492                           ;main.c: 265: if (estadoCentro == 4 && PORTAbits.RA5 == 0){
  2493                           
  2494                           ; BSR set to: 15
  2495                           ;incstack = 0
  2496  001D26  0E04               	movlw	4
  2497  001D28  1803               	xorwf	_estadoCentro,w,c
  2498  001D2A  1004               	iorwf	_estadoCentro+1,w,c
  2499  001D2C  A4D8               	btfss	status,2,c
  2500  001D2E  0012               	return	
  2501  001D30  BA80               	btfsc	3968,5,c	;volatile
  2502  001D32  0012               	return	
  2503                           
  2504                           ;main.c: 266: _delay((unsigned long)((98)*(8000000/4000.0)));
  2505  001D34  0EFF               	movlw	255
  2506  001D36  6E3A               	movwf	??_continuarCronometrando& (0+255),c
  2507  001D38  0E8A               	movlw	138
  2508  001D3A                     u2127:
  2509  001D3A  2EE8               	decfsz	wreg,f,c
  2510  001D3C  D7FE               	goto	u2127
  2511  001D3E  2E3A               	decfsz	??_continuarCronometrando& (0+255),f,c
  2512  001D40  D7FC               	goto	u2127
  2513  001D42  D000               	nop2	
  2514                           
  2515                           ;main.c: 267: estadoCentro = 3;
  2516  001D44  0E00               	movlw	0
  2517  001D46  6E04               	movwf	_estadoCentro+1,c
  2518  001D48  0E03               	movlw	3
  2519  001D4A  6E03               	movwf	_estadoCentro,c
  2520                           
  2521                           ;main.c: 268: _delay((unsigned long)((98)*(8000000/4000.0)));
  2522  001D4C  0EFF               	movlw	255
  2523  001D4E  6E3A               	movwf	??_continuarCronometrando& (0+255),c
  2524  001D50  0E8A               	movlw	138
  2525  001D52                     u2137:
  2526  001D52  2EE8               	decfsz	wreg,f,c
  2527  001D54  D7FE               	goto	u2137
  2528  001D56  2E3A               	decfsz	??_continuarCronometrando& (0+255),f,c
  2529  001D58  D7FC               	goto	u2137
  2530  001D5A  D000               	nop2	
  2531                           
  2532                           ;main.c: 269: flajReloj = 1;
  2533  001D5C  0E00               	movlw	0
  2534  001D5E  6E06               	movwf	_flajReloj+1,c
  2535  001D60  0E01               	movlw	1
  2536  001D62  6E05               	movwf	_flajReloj,c
  2537                           
  2538                           ;main.c: 270: almacenarTiempoParcial();
  2539  001D64  EC14  F00B         	call	_almacenarTiempoParcial	;wreg free
  2540                           
  2541                           ;main.c: 271: lcd_gotoxy(1,1);
  2542  001D68  0E01               	movlw	1
  2543  001D6A  6E31               	movwf	lcd_gotoxy@y,c
  2544  001D6C  0E01               	movlw	1
  2545  001D6E  ECCC  F011         	call	_lcd_gotoxy
  2546                           
  2547                           ;main.c: 272: lcd_putrs("CRONOMETRANDO");
  2548  001D72  0E4E               	movlw	low STR_5
  2549  001D74  6E35               	movwf	lcd_putrs@ptr,c
  2550  001D76  0E0F               	movlw	high STR_5
  2551  001D78  6E36               	movwf	lcd_putrs@ptr+1,c
  2552  001D7A  EC29  F010         	call	_lcd_putrs	;wreg free
  2553                           
  2554                           ;main.c: 273: minuto = unMinuto;
  2555  001D7E  C01D  F00D         	movff	_unMinuto,_minuto
  2556  001D82  C01E  F00E         	movff	_unMinuto+1,_minuto+1
  2557                           
  2558                           ;main.c: 274: segundo = unSegundo;
  2559  001D86  C021  F011         	movff	_unSegundo,_segundo
  2560  001D8A  C022  F012         	movff	_unSegundo+1,_segundo+1
  2561                           
  2562                           ;main.c: 275: milesima = unaMilesima;
  2563  001D8E  C023  F007         	movff	_unaMilesima,_milesima
  2564  001D92  C024  F008         	movff	_unaMilesima+1,_milesima+1
  2565                           
  2566                           ;main.c: 276: Write_RTC();
  2567  001D96  EC00  F009         	call	_Write_RTC	;wreg free
  2568  001D9A  0012               	return	
  2569  001D9C  0012               	return		;funcret
  2570  001D9E                     __end_of_continuarCronometrando:
  2571                           	opt stack 0
  2572                           tblptru	equ	0xFF8
  2573                           tblptrh	equ	0xFF7
  2574                           tblptrl	equ	0xFF6
  2575                           tablat	equ	0xFF5
  2576                           prodh	equ	0xFF4
  2577                           prodl	equ	0xFF3
  2578                           postinc0	equ	0xFEE
  2579                           wreg	equ	0xFE8
  2580                           postdec1	equ	0xFE5
  2581                           fsr1l	equ	0xFE1
  2582                           indf2	equ	0xFDF
  2583                           postinc2	equ	0xFDE
  2584                           postdec2	equ	0xFDD
  2585                           fsr2h	equ	0xFDA
  2586                           fsr2l	equ	0xFD9
  2587                           status	equ	0xFD8
  2588                           
  2589 ;; *************** function _almacenarTiempoParcial *****************
  2590 ;; Defined at:
  2591 ;;		line 233 in file "main.c"
  2592 ;; Parameters:    Size  Location     Type
  2593 ;;		None
  2594 ;; Auto vars:     Size  Location     Type
  2595 ;;  i               2   10[COMRAM] int 
  2596 ;; Return value:  Size  Location     Type
  2597 ;;		None               void
  2598 ;; Registers used:
  2599 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2600 ;; Tracked objects:
  2601 ;;		On entry : 0/0
  2602 ;;		On exit  : 0/0
  2603 ;;		Unchanged: 0/0
  2604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2606 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2607 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2608 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2609 ;;Total ram usage:        4 bytes
  2610 ;; Hardware stack levels used:    1
  2611 ;; Hardware stack levels required when called:    1
  2612 ;; This function calls:
  2613 ;;		_CargoVueltas
  2614 ;;		_verificarNroVuelta
  2615 ;; This function is called by:
  2616 ;;		_continuarCronometrando
  2617 ;; This function uses a non-reentrant model
  2618 ;;
  2619                           
  2620                           	psect	text14
  2621  001628                     __ptext14:
  2622                           	opt stack 0
  2623  001628                     _almacenarTiempoParcial:
  2624                           	opt stack 28
  2625                           
  2626                           ;main.c: 234: verificarNroVuelta();
  2627                           
  2628                           ;incstack = 0
  2629  001628  EC86  F011         	call	_verificarNroVuelta	;wreg free
  2630                           
  2631                           ;main.c: 235: if(nroVuelta==0){
  2632  00162C  500F               	movf	_nroVuelta,w,c
  2633  00162E  1010               	iorwf	_nroVuelta+1,w,c
  2634  001630  A4D8               	btfss	status,2,c
  2635  001632  D00D               	goto	l2666
  2636                           
  2637                           ;main.c: 236: unMinutoParcial = unMinuto;
  2638  001634  C01D  F01F         	movff	_unMinuto,_unMinutoParcial
  2639  001638  C01E  F020         	movff	_unMinuto+1,_unMinutoParcial+1
  2640                           
  2641                           ;main.c: 237: unSegundoParcial = unSegundo;
  2642  00163C  C021  F0D2         	movff	_unSegundo,_unSegundoParcial
  2643  001640  C022  F0D3         	movff	_unSegundo+1,_unSegundoParcial+1
  2644                           
  2645                           ;main.c: 238: unaMilesimaParcial = unaMilesima;
  2646  001644  C023  F0D4         	movff	_unaMilesima,_unaMilesimaParcial
  2647  001648  C024  F0D5         	movff	_unaMilesima+1,_unaMilesimaParcial+1
  2648                           
  2649                           ;main.c: 239: }else{
  2650  00164C  D07A               	goto	l2676
  2651  00164E                     l2666:
  2652                           
  2653                           ;main.c: 240: for (int i = 0; i < nroVuelta; i++){
  2654  00164E  0E00               	movlw	0
  2655  001650  6E38               	movwf	almacenarTiempoParcial@i+1,c
  2656  001652  0E00               	movlw	0
  2657  001654  6E37               	movwf	almacenarTiempoParcial@i,c
  2658  001656  D03C               	goto	l2672
  2659  001658                     l2668:
  2660                           
  2661                           ;main.c: 241: sumaMinutosVueltas = sumaMinutosVueltas + vMinutos[i];
  2662  001658  90D8               	bcf	status,0,c
  2663  00165A  3437               	rlcf	almacenarTiempoParcial@i,w,c
  2664  00165C  6ED9               	movwf	fsr2l,c
  2665  00165E  3438               	rlcf	almacenarTiempoParcial@i+1,w,c
  2666  001660  6EDA               	movwf	fsr2h,c
  2667  001662  0E74               	movlw	low _vMinutos
  2668  001664  26D9               	addwf	fsr2l,f,c
  2669  001666  0E00               	movlw	high _vMinutos
  2670  001668  22DA               	addwfc	fsr2h,f,c
  2671  00166A  CFDE F035          	movff	postinc2,??_almacenarTiempoParcial
  2672  00166E  CFDD F036          	movff	postdec2,??_almacenarTiempoParcial+1
  2673  001672  5019               	movf	_sumaMinutosVueltas,w,c
  2674  001674  2435               	addwf	??_almacenarTiempoParcial,w,c
  2675  001676  6E19               	movwf	_sumaMinutosVueltas,c
  2676  001678  501A               	movf	_sumaMinutosVueltas+1,w,c
  2677  00167A  2036               	addwfc	??_almacenarTiempoParcial+1,w,c
  2678  00167C  6E1A               	movwf	_sumaMinutosVueltas+1,c
  2679                           
  2680                           ;main.c: 242: sumaSegundosVueltas = sumaSegundosVueltas + vSegundos[i];
  2681  00167E  90D8               	bcf	status,0,c
  2682  001680  3437               	rlcf	almacenarTiempoParcial@i,w,c
  2683  001682  6ED9               	movwf	fsr2l,c
  2684  001684  3438               	rlcf	almacenarTiempoParcial@i+1,w,c
  2685  001686  6EDA               	movwf	fsr2h,c
  2686  001688  0E88               	movlw	low _vSegundos
  2687  00168A  26D9               	addwf	fsr2l,f,c
  2688  00168C  0E00               	movlw	high _vSegundos
  2689  00168E  22DA               	addwfc	fsr2h,f,c
  2690  001690  CFDE F035          	movff	postinc2,??_almacenarTiempoParcial
  2691  001694  CFDD F036          	movff	postdec2,??_almacenarTiempoParcial+1
  2692  001698  501B               	movf	_sumaSegundosVueltas,w,c
  2693  00169A  2435               	addwf	??_almacenarTiempoParcial,w,c
  2694  00169C  6E1B               	movwf	_sumaSegundosVueltas,c
  2695  00169E  501C               	movf	_sumaSegundosVueltas+1,w,c
  2696  0016A0  2036               	addwfc	??_almacenarTiempoParcial+1,w,c
  2697  0016A2  6E1C               	movwf	_sumaSegundosVueltas+1,c
  2698                           
  2699                           ;main.c: 243: sumaMilesimasVueltas = sumaMilesimasVueltas + vMilesimas[i];
  2700  0016A4  90D8               	bcf	status,0,c
  2701  0016A6  3437               	rlcf	almacenarTiempoParcial@i,w,c
  2702  0016A8  6ED9               	movwf	fsr2l,c
  2703  0016AA  3438               	rlcf	almacenarTiempoParcial@i+1,w,c
  2704  0016AC  6EDA               	movwf	fsr2h,c
  2705  0016AE  0E60               	movlw	low _vMilesimas
  2706  0016B0  26D9               	addwf	fsr2l,f,c
  2707  0016B2  0E00               	movlw	high _vMilesimas
  2708  0016B4  22DA               	addwfc	fsr2h,f,c
  2709  0016B6  CFDE F035          	movff	postinc2,??_almacenarTiempoParcial
  2710  0016BA  CFDD F036          	movff	postdec2,??_almacenarTiempoParcial+1
  2711  0016BE  5017               	movf	_sumaMilesimasVueltas,w,c
  2712  0016C0  2435               	addwf	??_almacenarTiempoParcial,w,c
  2713  0016C2  6E17               	movwf	_sumaMilesimasVueltas,c
  2714  0016C4  5018               	movf	_sumaMilesimasVueltas+1,w,c
  2715  0016C6  2036               	addwfc	??_almacenarTiempoParcial+1,w,c
  2716  0016C8  6E18               	movwf	_sumaMilesimasVueltas+1,c
  2717  0016CA  4A37               	infsnz	almacenarTiempoParcial@i,f,c
  2718  0016CC  2A38               	incf	almacenarTiempoParcial@i+1,f,c
  2719  0016CE  D000               	goto	l2672
  2720  0016D0                     l2672:
  2721  0016D0  500F               	movf	_nroVuelta,w,c
  2722  0016D2  5C37               	subwf	almacenarTiempoParcial@i,w,c
  2723  0016D4  5038               	movf	almacenarTiempoParcial@i+1,w,c
  2724  0016D6  0A80               	xorlw	128
  2725  0016D8  6E35               	movwf	??_almacenarTiempoParcial& (0+255),c
  2726  0016DA  5010               	movf	_nroVuelta+1,w,c
  2727  0016DC  0A80               	xorlw	128
  2728  0016DE  5835               	subwfb	??_almacenarTiempoParcial& (0+255),w,c
  2729  0016E0  A0D8               	btfss	status,0,c
  2730  0016E2  D7BA               	goto	l2668
  2731                           
  2732                           ;main.c: 244: }
  2733                           ;main.c: 246: unMinutoParcial = unMinuto - sumaMinutosVueltas;
  2734  0016E4  C019  F035         	movff	_sumaMinutosVueltas,??_almacenarTiempoParcial
  2735  0016E8  C01A  F036         	movff	_sumaMinutosVueltas+1,??_almacenarTiempoParcial+1
  2736  0016EC  1E35               	comf	??_almacenarTiempoParcial,f,c
  2737  0016EE  1E36               	comf	??_almacenarTiempoParcial+1,f,c
  2738  0016F0  4A35               	infsnz	??_almacenarTiempoParcial,f,c
  2739  0016F2  2A36               	incf	??_almacenarTiempoParcial+1,f,c
  2740  0016F4  501D               	movf	_unMinuto,w,c
  2741  0016F6  2435               	addwf	??_almacenarTiempoParcial,w,c
  2742  0016F8  6E1F               	movwf	_unMinutoParcial,c
  2743  0016FA  501E               	movf	_unMinuto+1,w,c
  2744  0016FC  2036               	addwfc	??_almacenarTiempoParcial+1,w,c
  2745  0016FE  6E20               	movwf	_unMinutoParcial+1,c
  2746                           
  2747                           ;main.c: 247: unSegundoParcial = unSegundo - sumaSegundosVueltas;
  2748  001700  C01B  F035         	movff	_sumaSegundosVueltas,??_almacenarTiempoParcial
  2749  001704  C01C  F036         	movff	_sumaSegundosVueltas+1,??_almacenarTiempoParcial+1
  2750  001708  1E35               	comf	??_almacenarTiempoParcial,f,c
  2751  00170A  1E36               	comf	??_almacenarTiempoParcial+1,f,c
  2752  00170C  4A35               	infsnz	??_almacenarTiempoParcial,f,c
  2753  00170E  2A36               	incf	??_almacenarTiempoParcial+1,f,c
  2754  001710  5021               	movf	_unSegundo,w,c
  2755  001712  2435               	addwf	??_almacenarTiempoParcial,w,c
  2756  001714  0100               	movlb	0	; () banked
  2757  001716  6FD2               	movwf	_unSegundoParcial& (0+255),b
  2758  001718  5022               	movf	_unSegundo+1,w,c
  2759  00171A  2036               	addwfc	??_almacenarTiempoParcial+1,w,c
  2760  00171C  0100               	movlb	0	; () banked
  2761  00171E  6FD3               	movwf	(_unSegundoParcial+1)& (0+255),b
  2762                           
  2763                           ;main.c: 248: unaMilesimaParcial = unaMilesima - sumaMilesimasVueltas;
  2764  001720  C017  F035         	movff	_sumaMilesimasVueltas,??_almacenarTiempoParcial
  2765  001724  C018  F036         	movff	_sumaMilesimasVueltas+1,??_almacenarTiempoParcial+1
  2766  001728  1E35               	comf	??_almacenarTiempoParcial,f,c
  2767  00172A  1E36               	comf	??_almacenarTiempoParcial+1,f,c
  2768  00172C  4A35               	infsnz	??_almacenarTiempoParcial,f,c
  2769  00172E  2A36               	incf	??_almacenarTiempoParcial+1,f,c
  2770  001730  5023               	movf	_unaMilesima,w,c
  2771  001732  2435               	addwf	??_almacenarTiempoParcial,w,c
  2772  001734  0100               	movlb	0	; () banked
  2773  001736  6FD4               	movwf	_unaMilesimaParcial& (0+255),b
  2774  001738  5024               	movf	_unaMilesima+1,w,c
  2775  00173A  2036               	addwfc	??_almacenarTiempoParcial+1,w,c
  2776  00173C  0100               	movlb	0	; () banked
  2777  00173E  6FD5               	movwf	(_unaMilesimaParcial+1)& (0+255),b
  2778  001740  D000               	goto	l2676
  2779  001742                     l2676:
  2780                           
  2781                           ;main.c: 250: }
  2782                           ;main.c: 251: CargoVueltas(nroVuelta, unMinutoParcial, unSegundoParcial, unaMilesimaParc
      +                          ial);
  2783  001742  C00F  F02D         	movff	_nroVuelta,CargoVueltas@p_nrovuelta
  2784  001746  C010  F02E         	movff	_nroVuelta+1,CargoVueltas@p_nrovuelta+1
  2785  00174A  C01F  F02F         	movff	_unMinutoParcial,CargoVueltas@p_minuto
  2786  00174E  C020  F030         	movff	_unMinutoParcial+1,CargoVueltas@p_minuto+1
  2787  001752  C0D2  F031         	movff	_unSegundoParcial,CargoVueltas@p_segundo
  2788  001756  C0D3  F032         	movff	_unSegundoParcial+1,CargoVueltas@p_segundo+1
  2789  00175A  C0D4  F033         	movff	_unaMilesimaParcial,CargoVueltas@p_milesima
  2790  00175E  C0D5  F034         	movff	_unaMilesimaParcial+1,CargoVueltas@p_milesima+1
  2791  001762  EC53  F010         	call	_CargoVueltas	;wreg free
  2792                           
  2793                           ;main.c: 252: nroVuelta++;
  2794  001766  4A0F               	infsnz	_nroVuelta,f,c
  2795  001768  2A10               	incf	_nroVuelta+1,f,c
  2796  00176A  0012               	return		;funcret
  2797  00176C                     __end_of_almacenarTiempoParcial:
  2798                           	opt stack 0
  2799                           tblptru	equ	0xFF8
  2800                           tblptrh	equ	0xFF7
  2801                           tblptrl	equ	0xFF6
  2802                           tablat	equ	0xFF5
  2803                           prodh	equ	0xFF4
  2804                           prodl	equ	0xFF3
  2805                           postinc0	equ	0xFEE
  2806                           wreg	equ	0xFE8
  2807                           postdec1	equ	0xFE5
  2808                           fsr1l	equ	0xFE1
  2809                           indf2	equ	0xFDF
  2810                           postinc2	equ	0xFDE
  2811                           postdec2	equ	0xFDD
  2812                           fsr2h	equ	0xFDA
  2813                           fsr2l	equ	0xFD9
  2814                           status	equ	0xFD8
  2815                           
  2816 ;; *************** function _clickIniciar *****************
  2817 ;; Defined at:
  2818 ;;		line 171 in file "main.c"
  2819 ;; Parameters:    Size  Location     Type
  2820 ;;		None
  2821 ;; Auto vars:     Size  Location     Type
  2822 ;;		None
  2823 ;; Return value:  Size  Location     Type
  2824 ;;		None               void
  2825 ;; Registers used:
  2826 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2827 ;; Tracked objects:
  2828 ;;		On entry : 0/0
  2829 ;;		On exit  : 0/0
  2830 ;;		Unchanged: 0/0
  2831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2832 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2833 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2834 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2835 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2836 ;;Total ram usage:        1 bytes
  2837 ;; Hardware stack levels used:    1
  2838 ;; Hardware stack levels required when called:    5
  2839 ;; This function calls:
  2840 ;;		_lcd_comand
  2841 ;;		_lcd_gotoxy
  2842 ;;		_lcd_putrs
  2843 ;; This function is called by:
  2844 ;;		_main
  2845 ;; This function uses a non-reentrant model
  2846 ;;
  2847                           
  2848                           	psect	text15
  2849  001EE6                     __ptext15:
  2850                           	opt stack 0
  2851  001EE6                     _clickIniciar:
  2852                           	opt stack 25
  2853                           
  2854                           ;main.c: 172: if (PORTAbits.RA5 == 0 && estadoCentro == 1){
  2855                           
  2856                           ;incstack = 0
  2857  001EE6  BA80               	btfsc	3968,5,c	;volatile
  2858  001EE8  0012               	return	
  2859  001EEA  0403               	decf	_estadoCentro,w,c
  2860  001EEC  1004               	iorwf	_estadoCentro+1,w,c
  2861  001EEE  A4D8               	btfss	status,2,c
  2862  001EF0  0012               	return	
  2863                           
  2864                           ;main.c: 173: estadoCentro++;
  2865  001EF2  4A03               	infsnz	_estadoCentro,f,c
  2866  001EF4  2A04               	incf	_estadoCentro+1,f,c
  2867                           
  2868                           ;main.c: 174: _delay((unsigned long)((40)*(8000000/4000.0)));
  2869  001EF6  0E68               	movlw	104
  2870  001EF8  6E37               	movwf	??_clickIniciar& (0+255),c
  2871  001EFA  0EE4               	movlw	228
  2872  001EFC                     u2147:
  2873  001EFC  2EE8               	decfsz	wreg,f,c
  2874  001EFE  D7FE               	goto	u2147
  2875  001F00  2E37               	decfsz	??_clickIniciar& (0+255),f,c
  2876  001F02  D7FC               	goto	u2147
  2877  001F04  D000               	nop2	
  2878                           
  2879                           ;main.c: 175: lcd_comand(0b00000001);
  2880  001F06  0E01               	movlw	1
  2881  001F08  EC1D  F012         	call	_lcd_comand
  2882                           
  2883                           ;main.c: 176: _delay((unsigned long)((90)*(8000000/4000.0)));
  2884  001F0C  0EEA               	movlw	234
  2885  001F0E  6E37               	movwf	??_clickIniciar& (0+255),c
  2886  001F10  0EC3               	movlw	195
  2887  001F12                     u2157:
  2888  001F12  2EE8               	decfsz	wreg,f,c
  2889  001F14  D7FE               	goto	u2157
  2890  001F16  2E37               	decfsz	??_clickIniciar& (0+255),f,c
  2891  001F18  D7FC               	goto	u2157
  2892  001F1A  F000               	nop	
  2893                           
  2894                           ;main.c: 177: lcd_gotoxy(1,1);
  2895  001F1C  0E01               	movlw	1
  2896  001F1E  6E31               	movwf	lcd_gotoxy@y,c
  2897  001F20  0E01               	movlw	1
  2898  001F22  ECCC  F011         	call	_lcd_gotoxy
  2899                           
  2900                           ;main.c: 178: lcd_putrs("CLICK INICIAR");
  2901  001F26  0E5C               	movlw	low STR_4
  2902  001F28  6E35               	movwf	lcd_putrs@ptr,c
  2903  001F2A  0E0F               	movlw	high STR_4
  2904  001F2C  6E36               	movwf	lcd_putrs@ptr+1,c
  2905  001F2E  EC29  F010         	call	_lcd_putrs	;wreg free
  2906                           
  2907                           ;main.c: 179: _delay((unsigned long)((90)*(8000000/4000.0)));
  2908  001F32  0EEA               	movlw	234
  2909  001F34  6E37               	movwf	??_clickIniciar& (0+255),c
  2910  001F36  0EC3               	movlw	195
  2911  001F38                     u2167:
  2912  001F38  2EE8               	decfsz	wreg,f,c
  2913  001F3A  D7FE               	goto	u2167
  2914  001F3C  2E37               	decfsz	??_clickIniciar& (0+255),f,c
  2915  001F3E  D7FC               	goto	u2167
  2916  001F40  F000               	nop	
  2917  001F42  0012               	return	
  2918  001F44  0012               	return		;funcret
  2919  001F46                     __end_of_clickIniciar:
  2920                           	opt stack 0
  2921                           tblptru	equ	0xFF8
  2922                           tblptrh	equ	0xFF7
  2923                           tblptrl	equ	0xFF6
  2924                           tablat	equ	0xFF5
  2925                           prodh	equ	0xFF4
  2926                           prodl	equ	0xFF3
  2927                           postinc0	equ	0xFEE
  2928                           wreg	equ	0xFE8
  2929                           postdec1	equ	0xFE5
  2930                           fsr1l	equ	0xFE1
  2931                           indf2	equ	0xFDF
  2932                           postinc2	equ	0xFDE
  2933                           postdec2	equ	0xFDD
  2934                           fsr2h	equ	0xFDA
  2935                           fsr2l	equ	0xFD9
  2936                           status	equ	0xFD8
  2937                           
  2938 ;; *************** function _almacenarTiempo *****************
  2939 ;; Defined at:
  2940 ;;		line 280 in file "main.c"
  2941 ;; Parameters:    Size  Location     Type
  2942 ;;		None
  2943 ;; Auto vars:     Size  Location     Type
  2944 ;;		None
  2945 ;; Return value:  Size  Location     Type
  2946 ;;		None               void
  2947 ;; Registers used:
  2948 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2949 ;; Tracked objects:
  2950 ;;		On entry : 0/0
  2951 ;;		On exit  : 0/0
  2952 ;;		Unchanged: 0/0
  2953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2954 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2955 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2956 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2957 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2958 ;;Total ram usage:        1 bytes
  2959 ;; Hardware stack levels used:    1
  2960 ;; Hardware stack levels required when called:    6
  2961 ;; This function calls:
  2962 ;;		_CargoVueltas
  2963 ;;		___wmul
  2964 ;;		_lcd_comand
  2965 ;;		_lcd_gotoxy
  2966 ;;		_lcd_putrs
  2967 ;;		_mostrarMejorVuelta
  2968 ;;		_mostrarReloj
  2969 ;;		_verificarNroVuelta
  2970 ;; This function is called by:
  2971 ;;		_main
  2972 ;; This function uses a non-reentrant model
  2973 ;;
  2974                           
  2975                           	psect	text16
  2976  001384                     __ptext16:
  2977                           	opt stack 0
  2978  001384                     _almacenarTiempo:
  2979                           	opt stack 24
  2980                           
  2981                           ;main.c: 281: if (PORTAbits.RA6 == 0 && estadoCentro == 4){
  2982                           
  2983                           ;incstack = 0
  2984  001384  BC80               	btfsc	3968,6,c	;volatile
  2985  001386  0012               	return	
  2986  001388  0E04               	movlw	4
  2987  00138A  1803               	xorwf	_estadoCentro,w,c
  2988  00138C  1004               	iorwf	_estadoCentro+1,w,c
  2989  00138E  A4D8               	btfss	status,2,c
  2990  001390  0012               	return	
  2991                           
  2992                           ;main.c: 282: verificarNroVuelta();
  2993  001392  EC86  F011         	call	_verificarNroVuelta	;wreg free
  2994                           
  2995                           ;main.c: 283: CargoVueltas(nroVuelta, unMinuto, unSegundo, unaMilesima);
  2996  001396  C00F  F02D         	movff	_nroVuelta,CargoVueltas@p_nrovuelta
  2997  00139A  C010  F02E         	movff	_nroVuelta+1,CargoVueltas@p_nrovuelta+1
  2998  00139E  C01D  F02F         	movff	_unMinuto,CargoVueltas@p_minuto
  2999  0013A2  C01E  F030         	movff	_unMinuto+1,CargoVueltas@p_minuto+1
  3000  0013A6  C021  F031         	movff	_unSegundo,CargoVueltas@p_segundo
  3001  0013AA  C022  F032         	movff	_unSegundo+1,CargoVueltas@p_segundo+1
  3002  0013AE  C023  F033         	movff	_unaMilesima,CargoVueltas@p_milesima
  3003  0013B2  C024  F034         	movff	_unaMilesima+1,CargoVueltas@p_milesima+1
  3004  0013B6  EC53  F010         	call	_CargoVueltas	;wreg free
  3005                           
  3006                           ;main.c: 284: mejorVuelta = 0;
  3007  0013BA  0E00               	movlw	0
  3008  0013BC  0100               	movlb	0	; () banked
  3009  0013BE  6FC9               	movwf	(_mejorVuelta+1)& (0+255),b
  3010  0013C0  0E00               	movlw	0
  3011  0013C2  6FC8               	movwf	_mejorVuelta& (0+255),b
  3012                           
  3013                           ; BSR set to: 0
  3014                           ;main.c: 285: if (primeraVuelta == 0){
  3015  0013C4  0100               	movlb	0	; () banked
  3016  0013C6  51CC               	movf	_primeraVuelta& (0+255),w,b
  3017  0013C8  0100               	movlb	0	; () banked
  3018  0013CA  11CD               	iorwf	(_primeraVuelta+1)& (0+255),w,b
  3019  0013CC  A4D8               	btfss	status,2,c
  3020  0013CE  D024               	goto	l2858
  3021                           
  3022                           ; BSR set to: 0
  3023                           ;main.c: 286: minutoVuelta = unMinuto;
  3024  0013D0  C01D  F0EA         	movff	_unMinuto,_minutoVuelta
  3025  0013D4  C01E  F0EB         	movff	_unMinuto+1,_minutoVuelta+1
  3026                           
  3027                           ;main.c: 287: segundoVuelta = unSegundo;
  3028  0013D8  C021  F0CE         	movff	_unSegundo,_segundoVuelta
  3029  0013DC  C022  F0CF         	movff	_unSegundo+1,_segundoVuelta+1
  3030                           
  3031                           ;main.c: 288: milesimaVuelta = unaMilesima;
  3032  0013E0  C023  F009         	movff	_unaMilesima,_milesimaVuelta
  3033  0013E4  C024  F00A         	movff	_unaMilesima+1,_milesimaVuelta+1
  3034                           
  3035                           ; BSR set to: 0
  3036                           ;main.c: 289: primeraVuelta = 1;
  3037  0013E8  0E00               	movlw	0
  3038  0013EA  0100               	movlb	0	; () banked
  3039  0013EC  6FCD               	movwf	(_primeraVuelta+1)& (0+255),b
  3040  0013EE  0E01               	movlw	1
  3041  0013F0  6FCC               	movwf	_primeraVuelta& (0+255),b
  3042                           
  3043                           ; BSR set to: 0
  3044                           ;main.c: 290: segundosTotales = 60*minutoVuelta + segundoVuelta;
  3045  0013F2  C0EA  F02D         	movff	_minutoVuelta,___wmul@multiplier
  3046  0013F6  C0EB  F02E         	movff	_minutoVuelta+1,___wmul@multiplier+1
  3047  0013FA  0E00               	movlw	0
  3048  0013FC  6E30               	movwf	___wmul@multiplicand+1,c
  3049  0013FE  0E3C               	movlw	60
  3050  001400  6E2F               	movwf	___wmul@multiplicand,c
  3051  001402  ECB8  F011         	call	___wmul	;wreg free
  3052  001406  0100               	movlb	0	; () banked
  3053  001408  51CE               	movf	_segundoVuelta& (0+255),w,b
  3054  00140A  242D               	addwf	?___wmul,w,c
  3055  00140C  6E15               	movwf	_segundosTotales,c
  3056  00140E  0100               	movlb	0	; () banked
  3057  001410  51CF               	movf	(_segundoVuelta+1)& (0+255),w,b
  3058  001412  202E               	addwfc	?___wmul+1,w,c
  3059  001414  6E16               	movwf	_segundosTotales+1,c
  3060  001416  D000               	goto	l2858
  3061  001418                     l2858:
  3062                           
  3063                           ; BSR set to: 0
  3064                           ;main.c: 292: }
  3065                           ;main.c: 294: segundosParciales = unMinuto*60 + unSegundo;
  3066  001418  C01D  F02D         	movff	_unMinuto,___wmul@multiplier
  3067  00141C  C01E  F02E         	movff	_unMinuto+1,___wmul@multiplier+1
  3068  001420  0E00               	movlw	0
  3069  001422  6E30               	movwf	___wmul@multiplicand+1,c
  3070  001424  0E3C               	movlw	60
  3071  001426  6E2F               	movwf	___wmul@multiplicand,c
  3072  001428  ECB8  F011         	call	___wmul	;wreg free
  3073  00142C  5021               	movf	_unSegundo,w,c
  3074  00142E  242D               	addwf	?___wmul,w,c
  3075  001430  6E13               	movwf	_segundosParciales,c
  3076  001432  5022               	movf	_unSegundo+1,w,c
  3077  001434  202E               	addwfc	?___wmul+1,w,c
  3078  001436  6E14               	movwf	_segundosParciales+1,c
  3079                           
  3080                           ;main.c: 295: if ((segundosParciales < segundosTotales)||((segundosParciales == segundos
      +                          Totales)&&(unaMilesima < milesimaVuelta))){
  3081  001438  5015               	movf	_segundosTotales,w,c
  3082  00143A  5C13               	subwf	_segundosParciales,w,c
  3083  00143C  5014               	movf	_segundosParciales+1,w,c
  3084  00143E  0A80               	xorlw	128
  3085  001440  6E52               	movwf	??_almacenarTiempo& (0+255),c
  3086  001442  5016               	movf	_segundosTotales+1,w,c
  3087  001444  0A80               	xorlw	128
  3088  001446  5852               	subwfb	??_almacenarTiempo& (0+255),w,c
  3089  001448  A0D8               	btfss	status,0,c
  3090  00144A  D011               	goto	l2866
  3091  00144C  5015               	movf	_segundosTotales,w,c
  3092  00144E  1813               	xorwf	_segundosParciales,w,c
  3093  001450  E121               	bnz	l2876
  3094  001452  5016               	movf	_segundosTotales+1,w,c
  3095  001454  1814               	xorwf	_segundosParciales+1,w,c
  3096  001456  A4D8               	btfss	status,2,c
  3097  001458  D01D               	goto	l2876
  3098  00145A  5009               	movf	_milesimaVuelta,w,c
  3099  00145C  5C23               	subwf	_unaMilesima,w,c
  3100  00145E  5024               	movf	_unaMilesima+1,w,c
  3101  001460  0A80               	xorlw	128
  3102  001462  6E52               	movwf	??_almacenarTiempo& (0+255),c
  3103  001464  500A               	movf	_milesimaVuelta+1,w,c
  3104  001466  0A80               	xorlw	128
  3105  001468  5852               	subwfb	??_almacenarTiempo& (0+255),w,c
  3106  00146A  B0D8               	btfsc	status,0,c
  3107  00146C  D013               	goto	l2876
  3108  00146E                     l2866:
  3109                           
  3110                           ;main.c: 296: mostrarMejorVuelta();
  3111  00146E  ECC6  F00C         	call	_mostrarMejorVuelta	;wreg free
  3112                           
  3113                           ;main.c: 297: segundosTotales = segundosParciales;
  3114  001472  C013  F015         	movff	_segundosParciales,_segundosTotales
  3115  001476  C014  F016         	movff	_segundosParciales+1,_segundosTotales+1
  3116                           
  3117                           ;main.c: 299: minutoVuelta = unMinuto;
  3118  00147A  C01D  F0EA         	movff	_unMinuto,_minutoVuelta
  3119  00147E  C01E  F0EB         	movff	_unMinuto+1,_minutoVuelta+1
  3120                           
  3121                           ;main.c: 300: segundoVuelta = unSegundo;
  3122  001482  C021  F0CE         	movff	_unSegundo,_segundoVuelta
  3123  001486  C022  F0CF         	movff	_unSegundo+1,_segundoVuelta+1
  3124                           
  3125                           ;main.c: 301: milesimaVuelta = unaMilesima;
  3126  00148A  C023  F009         	movff	_unaMilesima,_milesimaVuelta
  3127  00148E  C024  F00A         	movff	_unaMilesima+1,_milesimaVuelta+1
  3128  001492  D000               	goto	l2876
  3129  001494                     l2876:
  3130                           
  3131                           ;main.c: 302: }
  3132                           ;main.c: 305: if (mejorVuelta == 0){
  3133  001494  0100               	movlb	0	; () banked
  3134  001496  51C8               	movf	_mejorVuelta& (0+255),w,b
  3135  001498  0100               	movlb	0	; () banked
  3136  00149A  11C9               	iorwf	(_mejorVuelta+1)& (0+255),w,b
  3137  00149C  A4D8               	btfss	status,2,c
  3138  00149E  D017               	goto	l2886
  3139                           
  3140                           ; BSR set to: 0
  3141                           ;main.c: 306: lcd_comand(0b00000001);
  3142  0014A0  0E01               	movlw	1
  3143  0014A2  EC1D  F012         	call	_lcd_comand
  3144                           
  3145                           ;main.c: 307: _delay((unsigned long)((90)*(8000000/4000.0)));
  3146  0014A6  0EEA               	movlw	234
  3147  0014A8  6E52               	movwf	??_almacenarTiempo& (0+255),c
  3148  0014AA  0EC3               	movlw	195
  3149  0014AC                     u2177:
  3150  0014AC  2EE8               	decfsz	wreg,f,c
  3151  0014AE  D7FE               	goto	u2177
  3152  0014B0  2E52               	decfsz	??_almacenarTiempo& (0+255),f,c
  3153  0014B2  D7FC               	goto	u2177
  3154  0014B4  F000               	nop	
  3155                           
  3156                           ;main.c: 308: lcd_gotoxy(1,1);
  3157  0014B6  0E01               	movlw	1
  3158  0014B8  6E31               	movwf	lcd_gotoxy@y,c
  3159  0014BA  0E01               	movlw	1
  3160  0014BC  ECCC  F011         	call	_lcd_gotoxy
  3161                           
  3162                           ;main.c: 309: lcd_putrs("TU TIEMPO");
  3163  0014C0  0E90               	movlw	low STR_7
  3164  0014C2  6E35               	movwf	lcd_putrs@ptr,c
  3165  0014C4  0E0F               	movlw	high STR_7
  3166  0014C6  6E36               	movwf	lcd_putrs@ptr+1,c
  3167  0014C8  EC29  F010         	call	_lcd_putrs	;wreg free
  3168  0014CC  D000               	goto	l2886
  3169  0014CE                     l2886:
  3170                           
  3171                           ;main.c: 310: }
  3172                           ;main.c: 312: mostrarReloj();
  3173  0014CE  ECED  F010         	call	_mostrarReloj	;wreg free
  3174                           
  3175                           ;main.c: 313: estadoCentro = 2;
  3176  0014D2  0E00               	movlw	0
  3177  0014D4  6E04               	movwf	_estadoCentro+1,c
  3178  0014D6  0E02               	movlw	2
  3179  0014D8  6E03               	movwf	_estadoCentro,c
  3180                           
  3181                           ;main.c: 314: nroVuelta++;
  3182  0014DA  4A0F               	infsnz	_nroVuelta,f,c
  3183  0014DC  2A10               	incf	_nroVuelta+1,f,c
  3184  0014DE  0012               	return	
  3185  0014E0  0012               	return		;funcret
  3186  0014E2                     __end_of_almacenarTiempo:
  3187                           	opt stack 0
  3188                           tblptru	equ	0xFF8
  3189                           tblptrh	equ	0xFF7
  3190                           tblptrl	equ	0xFF6
  3191                           tablat	equ	0xFF5
  3192                           prodh	equ	0xFF4
  3193                           prodl	equ	0xFF3
  3194                           postinc0	equ	0xFEE
  3195                           wreg	equ	0xFE8
  3196                           postdec1	equ	0xFE5
  3197                           fsr1l	equ	0xFE1
  3198                           indf2	equ	0xFDF
  3199                           postinc2	equ	0xFDE
  3200                           postdec2	equ	0xFDD
  3201                           fsr2h	equ	0xFDA
  3202                           fsr2l	equ	0xFD9
  3203                           status	equ	0xFD8
  3204                           
  3205 ;; *************** function _verificarNroVuelta *****************
  3206 ;; Defined at:
  3207 ;;		line 255 in file "main.c"
  3208 ;; Parameters:    Size  Location     Type
  3209 ;;		None
  3210 ;; Auto vars:     Size  Location     Type
  3211 ;;		None
  3212 ;; Return value:  Size  Location     Type
  3213 ;;		None               void
  3214 ;; Registers used:
  3215 ;;		wreg, status,2, status,0
  3216 ;; Tracked objects:
  3217 ;;		On entry : 0/0
  3218 ;;		On exit  : 0/0
  3219 ;;		Unchanged: 0/0
  3220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3221 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3222 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3223 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3224 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3225 ;;Total ram usage:        0 bytes
  3226 ;; Hardware stack levels used:    1
  3227 ;; This function calls:
  3228 ;;		Nothing
  3229 ;; This function is called by:
  3230 ;;		_almacenarTiempoParcial
  3231 ;;		_almacenarTiempo
  3232 ;; This function uses a non-reentrant model
  3233 ;;
  3234                           
  3235                           	psect	text17
  3236  00230C                     __ptext17:
  3237                           	opt stack 0
  3238  00230C                     _verificarNroVuelta:
  3239                           	opt stack 28
  3240                           
  3241                           ;main.c: 256: if (nroVuelta > 9){
  3242                           
  3243                           ;incstack = 0
  3244  00230C  BE10               	btfsc	_nroVuelta+1,7,c
  3245  00230E  D00A               	goto	l313
  3246  002310  5010               	movf	_nroVuelta+1,w,c
  3247  002312  E104               	bnz	u1650
  3248  002314  0E0A               	movlw	10
  3249  002316  5C0F               	subwf	_nroVuelta,w,c
  3250  002318  A0D8               	btfss	status,0,c
  3251  00231A  D004               	goto	l313
  3252  00231C                     u1650:
  3253                           
  3254                           ;main.c: 257: nroVuelta = 0;
  3255  00231C  0E00               	movlw	0
  3256  00231E  6E10               	movwf	_nroVuelta+1,c
  3257  002320  0E00               	movlw	0
  3258  002322  6E0F               	movwf	_nroVuelta,c
  3259  002324                     l313:
  3260                           
  3261                           ;main.c: 258: }
  3262                           ;main.c: 259: sumaMinutosVueltas = 0;
  3263  002324  0E00               	movlw	0
  3264  002326  6E1A               	movwf	_sumaMinutosVueltas+1,c
  3265  002328  0E00               	movlw	0
  3266  00232A  6E19               	movwf	_sumaMinutosVueltas,c
  3267                           
  3268                           ;main.c: 260: sumaSegundosVueltas = 0;
  3269  00232C  0E00               	movlw	0
  3270  00232E  6E1C               	movwf	_sumaSegundosVueltas+1,c
  3271  002330  0E00               	movlw	0
  3272  002332  6E1B               	movwf	_sumaSegundosVueltas,c
  3273                           
  3274                           ;main.c: 261: sumaMilesimasVueltas = 0;
  3275  002334  0E00               	movlw	0
  3276  002336  6E18               	movwf	_sumaMilesimasVueltas+1,c
  3277  002338  0E00               	movlw	0
  3278  00233A  6E17               	movwf	_sumaMilesimasVueltas,c
  3279  00233C  0012               	return		;funcret
  3280  00233E                     __end_of_verificarNroVuelta:
  3281                           	opt stack 0
  3282                           tblptru	equ	0xFF8
  3283                           tblptrh	equ	0xFF7
  3284                           tblptrl	equ	0xFF6
  3285                           tablat	equ	0xFF5
  3286                           prodh	equ	0xFF4
  3287                           prodl	equ	0xFF3
  3288                           postinc0	equ	0xFEE
  3289                           wreg	equ	0xFE8
  3290                           postdec1	equ	0xFE5
  3291                           fsr1l	equ	0xFE1
  3292                           indf2	equ	0xFDF
  3293                           postinc2	equ	0xFDE
  3294                           postdec2	equ	0xFDD
  3295                           fsr2h	equ	0xFDA
  3296                           fsr2l	equ	0xFD9
  3297                           status	equ	0xFD8
  3298                           
  3299 ;; *************** function _mostrarReloj *****************
  3300 ;; Defined at:
  3301 ;;		line 99 in file "main.c"
  3302 ;; Parameters:    Size  Location     Type
  3303 ;;		None
  3304 ;; Auto vars:     Size  Location     Type
  3305 ;;		None
  3306 ;; Return value:  Size  Location     Type
  3307 ;;		None               void
  3308 ;; Registers used:
  3309 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3310 ;; Tracked objects:
  3311 ;;		On entry : 0/0
  3312 ;;		On exit  : 0/0
  3313 ;;		Unchanged: 0/0
  3314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3316 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3318 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3319 ;;Total ram usage:        0 bytes
  3320 ;; Hardware stack levels used:    1
  3321 ;; Hardware stack levels required when called:    5
  3322 ;; This function calls:
  3323 ;;		_lcd_comand
  3324 ;;		_lcd_gotoxy
  3325 ;;		_lcd_putrs
  3326 ;;		_sprintf
  3327 ;; This function is called by:
  3328 ;;		_cronometrando
  3329 ;;		_tiempoParcial
  3330 ;;		_almacenarTiempo
  3331 ;;		_mostrarVuelta
  3332 ;; This function uses a non-reentrant model
  3333 ;;
  3334                           
  3335                           	psect	text18
  3336  0021DA                     __ptext18:
  3337                           	opt stack 0
  3338  0021DA                     _mostrarReloj:
  3339                           	opt stack 23
  3340                           
  3341                           ;main.c: 100: lcd_comand(0b00001100);
  3342                           
  3343                           ;incstack = 0
  3344  0021DA  0E0C               	movlw	12
  3345  0021DC  EC1D  F012         	call	_lcd_comand
  3346                           
  3347                           ;main.c: 101: sprintf(buffer2,"%01u:%02u.%03u",minuto,segundo,milesima);
  3348  0021E0  0ED6               	movlw	low _buffer2
  3349  0021E2  6E39               	movwf	sprintf@sp,c
  3350  0021E4  0E00               	movlw	high _buffer2
  3351  0021E6  6E3A               	movwf	sprintf@sp+1,c
  3352  0021E8  0E3F               	movlw	low STR_1
  3353  0021EA  6E3B               	movwf	sprintf@f,c
  3354  0021EC  0E0F               	movlw	high STR_1
  3355  0021EE  6E3C               	movwf	sprintf@f+1,c
  3356  0021F0  C00D  F03D         	movff	_minuto,?_sprintf+4
  3357  0021F4  C00E  F03E         	movff	_minuto+1,?_sprintf+5
  3358  0021F8  C011  F03F         	movff	_segundo,?_sprintf+6
  3359  0021FC  C012  F040         	movff	_segundo+1,?_sprintf+7
  3360  002200  C007  F041         	movff	_milesima,?_sprintf+8
  3361  002204  C008  F042         	movff	_milesima+1,?_sprintf+9
  3362  002208  ECCE  F007         	call	_sprintf	;wreg free
  3363                           
  3364                           ;main.c: 102: lcd_gotoxy(1,2);
  3365  00220C  0E02               	movlw	2
  3366  00220E  6E31               	movwf	lcd_gotoxy@y,c
  3367  002210  0E01               	movlw	1
  3368  002212  ECCC  F011         	call	_lcd_gotoxy
  3369                           
  3370                           ;main.c: 103: lcd_putrs(buffer2);
  3371  002216  0ED6               	movlw	low _buffer2
  3372  002218  6E35               	movwf	lcd_putrs@ptr,c
  3373  00221A  0E00               	movlw	high _buffer2
  3374  00221C  6E36               	movwf	lcd_putrs@ptr+1,c
  3375  00221E  EC29  F010         	call	_lcd_putrs	;wreg free
  3376  002222  0012               	return		;funcret
  3377  002224                     __end_of_mostrarReloj:
  3378                           	opt stack 0
  3379                           tblptru	equ	0xFF8
  3380                           tblptrh	equ	0xFF7
  3381                           tblptrl	equ	0xFF6
  3382                           tablat	equ	0xFF5
  3383                           prodh	equ	0xFF4
  3384                           prodl	equ	0xFF3
  3385                           postinc0	equ	0xFEE
  3386                           wreg	equ	0xFE8
  3387                           postdec1	equ	0xFE5
  3388                           fsr1l	equ	0xFE1
  3389                           indf2	equ	0xFDF
  3390                           postinc2	equ	0xFDE
  3391                           postdec2	equ	0xFDD
  3392                           fsr2h	equ	0xFDA
  3393                           fsr2l	equ	0xFD9
  3394                           status	equ	0xFD8
  3395                           
  3396 ;; *************** function _mostrarMejorVuelta *****************
  3397 ;; Defined at:
  3398 ;;		line 320 in file "main.c"
  3399 ;; Parameters:    Size  Location     Type
  3400 ;;		None
  3401 ;; Auto vars:     Size  Location     Type
  3402 ;;		None
  3403 ;; Return value:  Size  Location     Type
  3404 ;;		None               void
  3405 ;; Registers used:
  3406 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3407 ;; Tracked objects:
  3408 ;;		On entry : 0/0
  3409 ;;		On exit  : 0/0
  3410 ;;		Unchanged: 0/0
  3411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3412 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3413 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3414 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3415 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3416 ;;Total ram usage:        2 bytes
  3417 ;; Hardware stack levels used:    1
  3418 ;; Hardware stack levels required when called:    5
  3419 ;; This function calls:
  3420 ;;		_lcd_comand
  3421 ;;		_lcd_gotoxy
  3422 ;;		_lcd_putrs
  3423 ;;		_sprintf
  3424 ;; This function is called by:
  3425 ;;		_almacenarTiempo
  3426 ;; This function uses a non-reentrant model
  3427 ;;
  3428                           
  3429                           	psect	text19
  3430  00198C                     __ptext19:
  3431                           	opt stack 0
  3432  00198C                     _mostrarMejorVuelta:
  3433                           	opt stack 24
  3434                           
  3435                           ;main.c: 321: lcd_comand(0b00000001);
  3436                           
  3437                           ;incstack = 0
  3438  00198C  0E01               	movlw	1
  3439  00198E  EC1D  F012         	call	_lcd_comand
  3440                           
  3441                           ;main.c: 322: _delay((unsigned long)((45)*(8000000/4000.0)));
  3442  001992  0E75               	movlw	117
  3443  001994  6E50               	movwf	??_mostrarMejorVuelta& (0+255),c
  3444  001996  0EE1               	movlw	225
  3445  001998                     u2187:
  3446  001998  2EE8               	decfsz	wreg,f,c
  3447  00199A  D7FE               	goto	u2187
  3448  00199C  2E50               	decfsz	??_mostrarMejorVuelta& (0+255),f,c
  3449  00199E  D7FC               	goto	u2187
  3450  0019A0  F000               	nop	
  3451                           
  3452                           ;main.c: 323: lcd_gotoxy(1,1);
  3453  0019A2  0E01               	movlw	1
  3454  0019A4  6E31               	movwf	lcd_gotoxy@y,c
  3455  0019A6  0E01               	movlw	1
  3456  0019A8  ECCC  F011         	call	_lcd_gotoxy
  3457                           
  3458                           ;main.c: 324: lcd_putrs("MEJOR VUELTA");
  3459  0019AC  0E78               	movlw	low STR_8
  3460  0019AE  6E35               	movwf	lcd_putrs@ptr,c
  3461  0019B0  0E0F               	movlw	high STR_8
  3462  0019B2  6E36               	movwf	lcd_putrs@ptr+1,c
  3463  0019B4  EC29  F010         	call	_lcd_putrs	;wreg free
  3464                           
  3465                           ;main.c: 325: mejorVuelta = 1;
  3466  0019B8  0E00               	movlw	0
  3467  0019BA  0100               	movlb	0	; () banked
  3468  0019BC  6FC9               	movwf	(_mejorVuelta+1)& (0+255),b
  3469  0019BE  0E01               	movlw	1
  3470  0019C0  6FC8               	movwf	_mejorVuelta& (0+255),b
  3471                           
  3472                           ; BSR set to: 0
  3473                           ;main.c: 326: segundosDisplay = segundosTotales - segundosParciales;
  3474  0019C2  C013  F050         	movff	_segundosParciales,??_mostrarMejorVuelta
  3475  0019C6  C014  F051         	movff	_segundosParciales+1,??_mostrarMejorVuelta+1
  3476  0019CA  1E50               	comf	??_mostrarMejorVuelta,f,c
  3477  0019CC  1E51               	comf	??_mostrarMejorVuelta+1,f,c
  3478  0019CE  4A50               	infsnz	??_mostrarMejorVuelta,f,c
  3479  0019D0  2A51               	incf	??_mostrarMejorVuelta+1,f,c
  3480  0019D2  5015               	movf	_segundosTotales,w,c
  3481  0019D4  2450               	addwf	??_mostrarMejorVuelta,w,c
  3482  0019D6  0100               	movlb	0	; () banked
  3483  0019D8  6FD0               	movwf	_segundosDisplay& (0+255),b
  3484  0019DA  5016               	movf	_segundosTotales+1,w,c
  3485  0019DC  2051               	addwfc	??_mostrarMejorVuelta+1,w,c
  3486  0019DE  0100               	movlb	0	; () banked
  3487  0019E0  6FD1               	movwf	(_segundosDisplay+1)& (0+255),b
  3488                           
  3489                           ; BSR set to: 0
  3490                           ;main.c: 327: milesimasDisplay = milesimaVuelta - unaMilesima;
  3491  0019E2  C023  F050         	movff	_unaMilesima,??_mostrarMejorVuelta
  3492  0019E6  C024  F051         	movff	_unaMilesima+1,??_mostrarMejorVuelta+1
  3493  0019EA  1E50               	comf	??_mostrarMejorVuelta,f,c
  3494  0019EC  1E51               	comf	??_mostrarMejorVuelta+1,f,c
  3495  0019EE  4A50               	infsnz	??_mostrarMejorVuelta,f,c
  3496  0019F0  2A51               	incf	??_mostrarMejorVuelta+1,f,c
  3497  0019F2  5009               	movf	_milesimaVuelta,w,c
  3498  0019F4  2450               	addwf	??_mostrarMejorVuelta,w,c
  3499  0019F6  6E0B               	movwf	_milesimasDisplay,c
  3500  0019F8  500A               	movf	_milesimaVuelta+1,w,c
  3501  0019FA  2051               	addwfc	??_mostrarMejorVuelta+1,w,c
  3502  0019FC  6E0C               	movwf	_milesimasDisplay+1,c
  3503                           
  3504                           ; BSR set to: 0
  3505                           ;main.c: 328: if (milesimasDisplay < 0) {
  3506  0019FE  AE0C               	btfss	_milesimasDisplay+1,7,c
  3507  001A00  D00B               	goto	l2700
  3508                           
  3509                           ; BSR set to: 0
  3510                           ;main.c: 329: milesimasDisplay = 1000 + milesimasDisplay;
  3511  001A02  0EE8               	movlw	232
  3512  001A04  240B               	addwf	_milesimasDisplay,w,c
  3513  001A06  6E0B               	movwf	_milesimasDisplay,c
  3514  001A08  0E03               	movlw	3
  3515  001A0A  200C               	addwfc	_milesimasDisplay+1,w,c
  3516  001A0C  6E0C               	movwf	_milesimasDisplay+1,c
  3517                           
  3518                           ; BSR set to: 0
  3519                           ;main.c: 330: segundosDisplay--;
  3520  001A0E  0100               	movlb	0	; () banked
  3521  001A10  07D0               	decf	_segundosDisplay& (0+255),f,b
  3522  001A12  A0D8               	btfss	status,0,c
  3523  001A14  07D1               	decf	(_segundosDisplay+1)& (0+255),f,b
  3524  001A16  D000               	goto	l2700
  3525  001A18                     l2700:
  3526                           
  3527                           ; BSR set to: 0
  3528                           ;main.c: 331: }
  3529                           ;main.c: 333: sprintf(buffer2,"-%02u.%03u",segundosDisplay,milesimasDisplay);
  3530  001A18  0ED6               	movlw	low _buffer2
  3531  001A1A  6E39               	movwf	sprintf@sp,c
  3532  001A1C  0E00               	movlw	high _buffer2
  3533  001A1E  6E3A               	movwf	sprintf@sp+1,c
  3534  001A20  0E85               	movlw	low STR_9
  3535  001A22  6E3B               	movwf	sprintf@f,c
  3536  001A24  0E0F               	movlw	high STR_9
  3537  001A26  6E3C               	movwf	sprintf@f+1,c
  3538  001A28  C0D0  F03D         	movff	_segundosDisplay,?_sprintf+4
  3539  001A2C  C0D1  F03E         	movff	_segundosDisplay+1,?_sprintf+5
  3540  001A30  C00B  F03F         	movff	_milesimasDisplay,?_sprintf+6
  3541  001A34  C00C  F040         	movff	_milesimasDisplay+1,?_sprintf+7
  3542  001A38  ECCE  F007         	call	_sprintf	;wreg free
  3543                           
  3544                           ;main.c: 334: lcd_gotoxy(10,2);
  3545  001A3C  0E02               	movlw	2
  3546  001A3E  6E31               	movwf	lcd_gotoxy@y,c
  3547  001A40  0E0A               	movlw	10
  3548  001A42  ECCC  F011         	call	_lcd_gotoxy
  3549                           
  3550                           ;main.c: 335: lcd_putrs(buffer2);
  3551  001A46  0ED6               	movlw	low _buffer2
  3552  001A48  6E35               	movwf	lcd_putrs@ptr,c
  3553  001A4A  0E00               	movlw	high _buffer2
  3554  001A4C  6E36               	movwf	lcd_putrs@ptr+1,c
  3555  001A4E  EC29  F010         	call	_lcd_putrs	;wreg free
  3556  001A52  0012               	return		;funcret
  3557  001A54                     __end_of_mostrarMejorVuelta:
  3558                           	opt stack 0
  3559                           tblptru	equ	0xFF8
  3560                           tblptrh	equ	0xFF7
  3561                           tblptrl	equ	0xFF6
  3562                           tablat	equ	0xFF5
  3563                           prodh	equ	0xFF4
  3564                           prodl	equ	0xFF3
  3565                           postinc0	equ	0xFEE
  3566                           wreg	equ	0xFE8
  3567                           postdec1	equ	0xFE5
  3568                           fsr1l	equ	0xFE1
  3569                           indf2	equ	0xFDF
  3570                           postinc2	equ	0xFDE
  3571                           postdec2	equ	0xFDD
  3572                           fsr2h	equ	0xFDA
  3573                           fsr2l	equ	0xFD9
  3574                           status	equ	0xFD8
  3575                           
  3576 ;; *************** function _sprintf *****************
  3577 ;; Defined at:
  3578 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
  3579 ;; Parameters:    Size  Location     Type
  3580 ;;  sp              2   12[COMRAM] PTR unsigned char 
  3581 ;;		 -> buffer2(20), 
  3582 ;;  f               2   14[COMRAM] PTR const unsigned char 
  3583 ;;		 -> STR_11(14), STR_10(16), STR_9(11), STR_1(15), 
  3584 ;; Auto vars:     Size  Location     Type
  3585 ;;  tmpval          4    0        struct .
  3586 ;;  cp              3    0        PTR const unsigned char 
  3587 ;;  width           2   32[COMRAM] int 
  3588 ;;  val             2   29[COMRAM] unsigned int 
  3589 ;;  ap              2   26[COMRAM] PTR void [1]
  3590 ;;		 -> ?_sprintf(2), 
  3591 ;;  len             2    0        unsigned int 
  3592 ;;  c               1   34[COMRAM] char 
  3593 ;;  prec            1   31[COMRAM] char 
  3594 ;;  flag            1   28[COMRAM] unsigned char 
  3595 ;; Return value:  Size  Location     Type
  3596 ;;                  2   12[COMRAM] int 
  3597 ;; Registers used:
  3598 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3599 ;; Tracked objects:
  3600 ;;		On entry : 0/0
  3601 ;;		On exit  : 0/0
  3602 ;;		Unchanged: 0/0
  3603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3604 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3605 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3606 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3607 ;;      Totals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3608 ;;Total ram usage:       23 bytes
  3609 ;; Hardware stack levels used:    1
  3610 ;; Hardware stack levels required when called:    1
  3611 ;; This function calls:
  3612 ;;		___lwdiv
  3613 ;;		___lwmod
  3614 ;;		___wmul
  3615 ;;		_isdigit
  3616 ;; This function is called by:
  3617 ;;		_mostrarReloj
  3618 ;;		_mostrarMejorVuelta
  3619 ;;		_mostrarVuelta
  3620 ;;		_debug
  3621 ;; This function uses a non-reentrant model
  3622 ;;
  3623                           
  3624                           	psect	text20
  3625  000F9C                     __ptext20:
  3626                           	opt stack 0
  3627  000F9C                     _sprintf:
  3628                           	opt stack 27
  3629                           
  3630                           ;doprnt.c: 494: va_list ap;
  3631                           ;doprnt.c: 499: signed char c;
  3632                           ;doprnt.c: 501: int width;
  3633                           ;doprnt.c: 506: signed char prec;
  3634                           ;doprnt.c: 508: unsigned char flag;
  3635                           ;doprnt.c: 523: union {
  3636                           ;doprnt.c: 524: unsigned long vd;
  3637                           ;doprnt.c: 525: double integ;
  3638                           ;doprnt.c: 526: } tmpval;
  3639                           ;doprnt.c: 528: unsigned int val;
  3640                           ;doprnt.c: 529: unsigned len;
  3641                           ;doprnt.c: 530: const char * cp;
  3642                           ;doprnt.c: 533: *ap = __va_start();
  3643                           
  3644                           ;incstack = 0
  3645  000F9C  0E3D               	movlw	low (?_sprintf+4)
  3646  000F9E  6E47               	movwf	sprintf@ap,c
  3647  000FA0  0E00               	movlw	high (?_sprintf+4)
  3648  000FA2  6E48               	movwf	sprintf@ap+1,c
  3649                           
  3650                           ;doprnt.c: 536: while(c = *f++) {
  3651  000FA4  D117               	goto	l2272
  3652  000FA6                     l2190:
  3653                           
  3654                           ;doprnt.c: 538: if(c != '%')
  3655  000FA6  0E25               	movlw	37
  3656  000FA8  184F               	xorwf	sprintf@c,w,c
  3657  000FAA  B4D8               	btfsc	status,2,c
  3658  000FAC  D009               	goto	l2196
  3659                           
  3660                           ;doprnt.c: 540: {
  3661                           ;doprnt.c: 541: ((*sp++ = (c)));
  3662  000FAE  C039  FFD9         	movff	sprintf@sp,fsr2l
  3663  000FB2  C03A  FFDA         	movff	sprintf@sp+1,fsr2h
  3664  000FB6  C04F  FFDF         	movff	sprintf@c,indf2
  3665  000FBA  4A39               	infsnz	sprintf@sp,f,c
  3666  000FBC  2A3A               	incf	sprintf@sp+1,f,c
  3667                           
  3668                           ;doprnt.c: 542: continue;
  3669  000FBE  D10A               	goto	l2272
  3670  000FC0                     l2196:
  3671                           
  3672                           ;doprnt.c: 543: }
  3673                           ;doprnt.c: 546: width = 0;
  3674  000FC0  0E00               	movlw	0
  3675  000FC2  6E4E               	movwf	sprintf@width+1,c
  3676  000FC4  0E00               	movlw	0
  3677  000FC6  6E4D               	movwf	sprintf@width,c
  3678                           
  3679                           ;doprnt.c: 548: flag = 0;
  3680  000FC8  0E00               	movlw	0
  3681  000FCA  6E49               	movwf	sprintf@flag,c
  3682                           
  3683                           ;doprnt.c: 551: switch(*f) {
  3684                           
  3685                           ;doprnt.c: 550: for(;;) {
  3686  000FCC  D005               	goto	l2202
  3687  000FCE                     l2198:
  3688                           
  3689                           ;doprnt.c: 580: flag |= 0x04;
  3690  000FCE  8449               	bsf	sprintf@flag,2,c
  3691                           
  3692                           ;doprnt.c: 581: f++;
  3693  000FD0  4A3B               	infsnz	sprintf@f,f,c
  3694  000FD2  2A3C               	incf	sprintf@f+1,f,c
  3695                           
  3696                           ;doprnt.c: 582: continue;
  3697  000FD4  D001               	goto	l2202
  3698                           
  3699                           ;doprnt.c: 584: }
  3700  000FD6  D00B               	goto	l2204
  3701  000FD8                     l2202:
  3702  000FD8  C03B  FFF6         	movff	sprintf@f,tblptrl
  3703  000FDC  C03C  FFF7         	movff	sprintf@f+1,tblptrh
  3704  000FE0                     	if	0	;tblptru may be non-zero
  3705  000FE0                     	endif
  3706  000FE0                     	if	0	;tblptru may be non-zero
  3707  000FE0                     	endif
  3708  000FE0  0008               	tblrd		*
  3709  000FE2  50F5               	movf	tablat,w,c
  3710                           
  3711                           ; Switch size 1, requested type "space"
  3712                           ; Number of cases is 1, Range of values is 48 to 48
  3713                           ; switch strategies available:
  3714                           ; Name         Instructions Cycles
  3715                           ; simple_byte            4     3 (average)
  3716                           ;	Chosen strategy is simple_byte
  3717  000FE4  0A30               	xorlw	48	; case 48
  3718  000FE6  B4D8               	btfsc	status,2,c
  3719  000FE8  D7F2               	goto	l2198
  3720                           
  3721                           ;doprnt.c: 585: break;
  3722  000FEA  D001               	goto	l2204
  3723                           
  3724                           ;doprnt.c: 586: }
  3725  000FEC  D7F5               	goto	l2202
  3726  000FEE                     l2204:
  3727                           
  3728                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  3729  000FEE  C03B  FFF6         	movff	sprintf@f,tblptrl
  3730  000FF2  C03C  FFF7         	movff	sprintf@f+1,tblptrh
  3731  000FF6                     	if	0	;tblptru may be non-zero
  3732  000FF6                     	endif
  3733  000FF6                     	if	0	;tblptru may be non-zero
  3734  000FF6                     	endif
  3735  000FF6  0008               	tblrd		*
  3736  000FF8  50F5               	movf	tablat,w,c
  3737  000FFA  ECDE  F011         	call	_isdigit
  3738  000FFE  A0D8               	btfss	status,0,c
  3739  001000  D03A               	goto	l2220
  3740                           
  3741                           ;doprnt.c: 598: width = 0;
  3742  001002  0E00               	movlw	0
  3743  001004  6E4E               	movwf	sprintf@width+1,c
  3744  001006  0E00               	movlw	0
  3745  001008  6E4D               	movwf	sprintf@width,c
  3746  00100A  D000               	goto	l2208
  3747  00100C                     l2208:
  3748                           
  3749                           ;doprnt.c: 600: width *= 10;
  3750  00100C  C04D  F02D         	movff	sprintf@width,___wmul@multiplier
  3751  001010  C04E  F02E         	movff	sprintf@width+1,___wmul@multiplier+1
  3752  001014  0E00               	movlw	0
  3753  001016  6E30               	movwf	___wmul@multiplicand+1,c
  3754  001018  0E0A               	movlw	10
  3755  00101A  6E2F               	movwf	___wmul@multiplicand,c
  3756  00101C  ECB8  F011         	call	___wmul	;wreg free
  3757  001020  C02D  F04D         	movff	?___wmul,sprintf@width
  3758  001024  C02E  F04E         	movff	?___wmul+1,sprintf@width+1
  3759                           
  3760                           ;doprnt.c: 601: width += *f++ - '0';
  3761  001028  0ED0               	movlw	208
  3762  00102A  6E43               	movwf	??_sprintf& (0+255),c
  3763  00102C  0EFF               	movlw	255
  3764  00102E  6E44               	movwf	(??_sprintf+1)& (0+255),c
  3765  001030  C03B  FFF6         	movff	sprintf@f,tblptrl
  3766  001034  C03C  FFF7         	movff	sprintf@f+1,tblptrh
  3767  001038                     	if	0	;tblptru may be non-zero
  3768  001038                     	endif
  3769  001038                     	if	0	;tblptru may be non-zero
  3770  001038                     	endif
  3771  001038  0008               	tblrd		*
  3772  00103A  50F5               	movf	tablat,w,c
  3773  00103C  6E45               	movwf	(??_sprintf+2)& (0+255),c
  3774  00103E  6A46               	clrf	(??_sprintf+3)& (0+255),c
  3775  001040  5043               	movf	??_sprintf,w,c
  3776  001042  2645               	addwf	??_sprintf+2,f,c
  3777  001044  5044               	movf	??_sprintf+1,w,c
  3778  001046  2246               	addwfc	??_sprintf+3,f,c
  3779  001048  5045               	movf	??_sprintf+2,w,c
  3780  00104A  264D               	addwf	sprintf@width,f,c
  3781  00104C  5046               	movf	??_sprintf+3,w,c
  3782  00104E  224E               	addwfc	sprintf@width+1,f,c
  3783  001050  4A3B               	infsnz	sprintf@f,f,c
  3784  001052  2A3C               	incf	sprintf@f+1,f,c
  3785                           
  3786                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  3787  001054  C03B  FFF6         	movff	sprintf@f,tblptrl
  3788  001058  C03C  FFF7         	movff	sprintf@f+1,tblptrh
  3789  00105C                     	if	0	;tblptru may be non-zero
  3790  00105C                     	endif
  3791  00105C                     	if	0	;tblptru may be non-zero
  3792  00105C                     	endif
  3793  00105C  0008               	tblrd		*
  3794  00105E  50F5               	movf	tablat,w,c
  3795  001060  ECDE  F011         	call	_isdigit
  3796  001064  A0D8               	btfss	status,0,c
  3797  001066  D007               	goto	l2220
  3798  001068  D7D1               	goto	l2208
  3799                           
  3800                           ;doprnt.c: 608: }
  3801                           ;doprnt.c: 635: switch(c = *f++) {
  3802  00106A  D005               	goto	l2220
  3803                           
  3804                           ;doprnt.c: 638: goto alldone;
  3805                           
  3806                           ;doprnt.c: 637: case 0:
  3807  00106C  D0C1               	goto	l2274
  3808                           
  3809                           ;doprnt.c: 813: continue;
  3810                           
  3811                           ;doprnt.c: 802: default:
  3812  00106E  D0B2               	goto	l2272
  3813  001070                     l2216:
  3814                           
  3815                           ;doprnt.c: 818: flag |= 0xC0;
  3816  001070  0EC0               	movlw	192
  3817  001072  1249               	iorwf	sprintf@flag,f,c
  3818                           
  3819                           ;doprnt.c: 822: }
  3820                           
  3821                           ;doprnt.c: 819: break;
  3822  001074  D011               	goto	l2222
  3823  001076                     l2220:
  3824  001076  C03B  FFF6         	movff	sprintf@f,tblptrl
  3825  00107A  C03C  FFF7         	movff	sprintf@f+1,tblptrh
  3826  00107E  4A3B               	infsnz	sprintf@f,f,c
  3827  001080  2A3C               	incf	sprintf@f+1,f,c
  3828  001082                     	if	0	;tblptru may be non-zero
  3829  001082                     	endif
  3830  001082                     	if	0	;tblptru may be non-zero
  3831  001082                     	endif
  3832  001082  0008               	tblrd		*
  3833  001084  CFF5 F04F          	movff	tablat,sprintf@c
  3834  001088  504F               	movf	sprintf@c,w,c
  3835                           
  3836                           ; Switch size 1, requested type "space"
  3837                           ; Number of cases is 2, Range of values is 0 to 117
  3838                           ; switch strategies available:
  3839                           ; Name         Instructions Cycles
  3840                           ; simple_byte            7     4 (average)
  3841                           ;	Chosen strategy is simple_byte
  3842  00108A  0A00               	xorlw	0	; case 0
  3843  00108C  B4D8               	btfsc	status,2,c
  3844  00108E  D0B0               	goto	l2274
  3845  001090  0A75               	xorlw	117	; case 117
  3846  001092  B4D8               	btfsc	status,2,c
  3847  001094  D7ED               	goto	l2216
  3848  001096  D09E               	goto	l2272
  3849  001098                     l2222:
  3850                           
  3851                           ;doprnt.c: 1273: {
  3852                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  3853  001098  C047  FFD9         	movff	sprintf@ap,fsr2l
  3854  00109C  C048  FFDA         	movff	sprintf@ap+1,fsr2h
  3855  0010A0  CFDE F04A          	movff	postinc2,sprintf@val
  3856  0010A4  CFDD F04B          	movff	postdec2,sprintf@val+1
  3857  0010A8  0E02               	movlw	2
  3858  0010AA  2647               	addwf	sprintf@ap,f,c
  3859  0010AC  0E00               	movlw	0
  3860  0010AE  2248               	addwfc	sprintf@ap+1,f,c
  3861                           
  3862                           ;doprnt.c: 1287: }
  3863                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  3864  0010B0  0E01               	movlw	1
  3865  0010B2  6E4F               	movwf	sprintf@c,c
  3866  0010B4                     l2228:
  3867  0010B4  0E05               	movlw	5
  3868  0010B6  184F               	xorwf	sprintf@c,w,c
  3869  0010B8  B4D8               	btfsc	status,2,c
  3870  0010BA  D016               	goto	l2240
  3871  0010BC  D001               	goto	l2232
  3872  0010BE  D014               	goto	l2240
  3873  0010C0                     l2232:
  3874                           
  3875                           ;doprnt.c: 1306: if(val < dpowers[c])
  3876  0010C0  504F               	movf	sprintf@c,w,c
  3877  0010C2  0D02               	mullw	2
  3878  0010C4  0E01               	movlw	low _dpowers
  3879  0010C6  24F3               	addwf	prodl,w,c
  3880  0010C8  6EF6               	movwf	tblptrl,c
  3881  0010CA  0E0F               	movlw	high _dpowers
  3882  0010CC  20F4               	addwfc	prodh,w,c
  3883  0010CE  6EF7               	movwf	tblptrh,c
  3884  0010D0                     	if	0	;There are less than 3 active tblptr bytes
  3885  0010D0                     	endif
  3886  0010D0  0009               	tblrd		*+
  3887  0010D2  50F5               	movf	tablat,w,c
  3888  0010D4  5C4A               	subwf	sprintf@val,w,c
  3889  0010D6  0009               	tblrd		*+
  3890  0010D8  50F5               	movf	tablat,w,c
  3891  0010DA  584B               	subwfb	sprintf@val+1,w,c
  3892  0010DC  A0D8               	btfss	status,0,c
  3893  0010DE  D004               	goto	l2240
  3894  0010E0  D001               	goto	l2236
  3895                           
  3896                           ;doprnt.c: 1307: break;
  3897  0010E2  D002               	goto	l2240
  3898  0010E4                     l2236:
  3899  0010E4  2A4F               	incf	sprintf@c,f,c
  3900  0010E6  D7E6               	goto	l2228
  3901  0010E8                     l2240:
  3902                           
  3903                           ;doprnt.c: 1381: if(width > c)
  3904  0010E8  0E80               	movlw	128
  3905  0010EA  BE4F               	btfsc	sprintf@c,7,c
  3906  0010EC  0E7F               	movlw	127
  3907  0010EE  6E43               	movwf	??_sprintf& (0+255),c
  3908  0010F0  504D               	movf	sprintf@width,w,c
  3909  0010F2  5C4F               	subwf	sprintf@c,w,c
  3910  0010F4  504E               	movf	sprintf@width+1,w,c
  3911  0010F6  0A80               	xorlw	128
  3912  0010F8  5843               	subwfb	??_sprintf& (0+255),w,c
  3913  0010FA  B0D8               	btfsc	status,0,c
  3914  0010FC  D007               	goto	l2244
  3915                           
  3916                           ;doprnt.c: 1382: width -= c;
  3917  0010FE  504F               	movf	sprintf@c,w,c
  3918  001100  5E4D               	subwf	sprintf@width,f,c
  3919  001102  0E00               	movlw	0
  3920  001104  BE4F               	btfsc	sprintf@c,7,c
  3921  001106  0EFF               	movlw	255
  3922  001108  5A4E               	subwfb	sprintf@width+1,f,c
  3923  00110A  D005               	goto	l2246
  3924  00110C                     l2244:
  3925                           
  3926                           ;doprnt.c: 1383: else
  3927                           ;doprnt.c: 1384: width = 0;
  3928  00110C  0E00               	movlw	0
  3929  00110E  6E4E               	movwf	sprintf@width+1,c
  3930  001110  0E00               	movlw	0
  3931  001112  6E4D               	movwf	sprintf@width,c
  3932  001114  D000               	goto	l2246
  3933  001116                     l2246:
  3934                           
  3935                           ;doprnt.c: 1387: if(flag & 0x04) {
  3936  001116  A449               	btfss	sprintf@flag,2,c
  3937  001118  D015               	goto	l2256
  3938                           
  3939                           ;doprnt.c: 1415: if(width)
  3940  00111A  504D               	movf	sprintf@width,w,c
  3941  00111C  104E               	iorwf	sprintf@width+1,w,c
  3942  00111E  B4D8               	btfsc	status,2,c
  3943  001120  D026               	goto	l399
  3944  001122                     l2250:
  3945                           
  3946                           ;doprnt.c: 1417: ((*sp++ = ('0')));
  3947  001122  C039  FFD9         	movff	sprintf@sp,fsr2l
  3948  001126  C03A  FFDA         	movff	sprintf@sp+1,fsr2h
  3949  00112A  0E30               	movlw	48
  3950  00112C  6EDF               	movwf	indf2,c
  3951  00112E  4A39               	infsnz	sprintf@sp,f,c
  3952  001130  2A3A               	incf	sprintf@sp+1,f,c
  3953                           
  3954                           ;doprnt.c: 1418: while(--width);
  3955  001132  064D               	decf	sprintf@width,f,c
  3956  001134  A0D8               	btfss	status,0,c
  3957  001136  064E               	decf	sprintf@width+1,f,c
  3958  001138  504D               	movf	sprintf@width,w,c
  3959  00113A  104E               	iorwf	sprintf@width+1,w,c
  3960  00113C  B4D8               	btfsc	status,2,c
  3961  00113E  D017               	goto	l399
  3962  001140  D7F0               	goto	l2250
  3963                           
  3964                           ;doprnt.c: 1420: } else
  3965  001142  D015               	goto	l399
  3966  001144                     l2256:
  3967                           
  3968                           ;doprnt.c: 1422: {
  3969                           ;doprnt.c: 1424: if(width
  3970                           ;doprnt.c: 1428: )
  3971  001144  504D               	movf	sprintf@width,w,c
  3972  001146  104E               	iorwf	sprintf@width+1,w,c
  3973  001148  B4D8               	btfsc	status,2,c
  3974  00114A  D011               	goto	l399
  3975  00114C                     l2258:
  3976                           
  3977                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  3978  00114C  C039  FFD9         	movff	sprintf@sp,fsr2l
  3979  001150  C03A  FFDA         	movff	sprintf@sp+1,fsr2h
  3980  001154  0E20               	movlw	32
  3981  001156  6EDF               	movwf	indf2,c
  3982  001158  4A39               	infsnz	sprintf@sp,f,c
  3983  00115A  2A3A               	incf	sprintf@sp+1,f,c
  3984                           
  3985                           ;doprnt.c: 1431: while(--width);
  3986  00115C  064D               	decf	sprintf@width,f,c
  3987  00115E  A0D8               	btfss	status,0,c
  3988  001160  064E               	decf	sprintf@width+1,f,c
  3989  001162  504D               	movf	sprintf@width,w,c
  3990  001164  104E               	iorwf	sprintf@width+1,w,c
  3991  001166  B4D8               	btfsc	status,2,c
  3992  001168  D002               	goto	l399
  3993  00116A  D7F0               	goto	l2258
  3994  00116C  D000               	goto	l399
  3995  00116E                     l399:
  3996                           
  3997                           ;doprnt.c: 1469: }
  3998                           ;doprnt.c: 1472: prec = c;
  3999  00116E  C04F  F04C         	movff	sprintf@c,sprintf@prec
  4000                           
  4001                           ;doprnt.c: 1474: while(prec--) {
  4002  001172  D02A               	goto	l2270
  4003  001174                     l2264:
  4004                           
  4005                           ;doprnt.c: 1478: {
  4006                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  4007  001174  504C               	movf	sprintf@prec,w,c
  4008  001176  0D02               	mullw	2
  4009  001178  0E01               	movlw	low _dpowers
  4010  00117A  24F3               	addwf	prodl,w,c
  4011  00117C  6EF6               	movwf	tblptrl,c
  4012  00117E  0E0F               	movlw	high _dpowers
  4013  001180  20F4               	addwfc	prodh,w,c
  4014  001182  6EF7               	movwf	tblptrh,c
  4015  001184                     	if	0	;There are less than 3 active tblptr bytes
  4016  001184                     	endif
  4017  001184  0009               	tblrd		*+
  4018  001186  CFF5 F02F          	movff	tablat,___lwdiv@divisor
  4019  00118A  000A               	tblrd		*-
  4020  00118C  CFF5 F030          	movff	tablat,___lwdiv@divisor+1
  4021  001190  C04A  F02D         	movff	sprintf@val,___lwdiv@dividend
  4022  001194  C04B  F02E         	movff	sprintf@val+1,___lwdiv@dividend+1
  4023  001198  ECA3  F00F         	call	___lwdiv	;wreg free
  4024  00119C  C02D  F034         	movff	?___lwdiv,___lwmod@dividend
  4025  0011A0  C02E  F035         	movff	?___lwdiv+1,___lwmod@dividend+1
  4026  0011A4  0E00               	movlw	0
  4027  0011A6  6E37               	movwf	___lwmod@divisor+1,c
  4028  0011A8  0E0A               	movlw	10
  4029  0011AA  6E36               	movwf	___lwmod@divisor,c
  4030  0011AC  ECA1  F010         	call	___lwmod	;wreg free
  4031  0011B0  5034               	movf	?___lwmod,w,c
  4032  0011B2  0F30               	addlw	48
  4033  0011B4  6E4F               	movwf	sprintf@c,c
  4034                           
  4035                           ;doprnt.c: 1523: }
  4036                           ;doprnt.c: 1524: ((*sp++ = (c)));
  4037  0011B6  C039  FFD9         	movff	sprintf@sp,fsr2l
  4038  0011BA  C03A  FFDA         	movff	sprintf@sp+1,fsr2h
  4039  0011BE  C04F  FFDF         	movff	sprintf@c,indf2
  4040  0011C2  4A39               	infsnz	sprintf@sp,f,c
  4041  0011C4  2A3A               	incf	sprintf@sp+1,f,c
  4042  0011C6  D000               	goto	l2270
  4043  0011C8                     l2270:
  4044  0011C8  064C               	decf	sprintf@prec,f,c
  4045  0011CA  284C               	incf	sprintf@prec,w,c
  4046  0011CC  B4D8               	btfsc	status,2,c
  4047  0011CE  D002               	goto	l2272
  4048  0011D0  D7D1               	goto	l2264
  4049  0011D2  D000               	goto	l2272
  4050  0011D4                     l2272:
  4051  0011D4  C03B  FFF6         	movff	sprintf@f,tblptrl
  4052  0011D8  C03C  FFF7         	movff	sprintf@f+1,tblptrh
  4053  0011DC  4A3B               	infsnz	sprintf@f,f,c
  4054  0011DE  2A3C               	incf	sprintf@f+1,f,c
  4055  0011E0                     	if	0	;tblptru may be non-zero
  4056  0011E0                     	endif
  4057  0011E0                     	if	0	;tblptru may be non-zero
  4058  0011E0                     	endif
  4059  0011E0  0008               	tblrd		*
  4060  0011E2  CFF5 F04F          	movff	tablat,sprintf@c
  4061  0011E6  504F               	movf	sprintf@c,w,c
  4062  0011E8  B4D8               	btfsc	status,2,c
  4063  0011EA  D002               	goto	l2274
  4064  0011EC  D6DC               	goto	l2190
  4065  0011EE  D000               	goto	l2274
  4066  0011F0                     l2274:
  4067                           
  4068                           ;doprnt.c: 1538: *sp = 0;
  4069  0011F0  C039  FFD9         	movff	sprintf@sp,fsr2l
  4070  0011F4  C03A  FFDA         	movff	sprintf@sp+1,fsr2h
  4071  0011F8  0E00               	movlw	0
  4072  0011FA  6EDF               	movwf	indf2,c
  4073  0011FC  0012               	return	
  4074                           
  4075                           ;doprnt.c: 1540: return 0;
  4076                           ;	Return value of _sprintf is never used
  4077  0011FE  0012               	return		;funcret
  4078  001200                     __end_of_sprintf:
  4079                           	opt stack 0
  4080                           tblptru	equ	0xFF8
  4081                           tblptrh	equ	0xFF7
  4082                           tblptrl	equ	0xFF6
  4083                           tablat	equ	0xFF5
  4084                           prodh	equ	0xFF4
  4085                           prodl	equ	0xFF3
  4086                           postinc0	equ	0xFEE
  4087                           wreg	equ	0xFE8
  4088                           postdec1	equ	0xFE5
  4089                           fsr1l	equ	0xFE1
  4090                           indf2	equ	0xFDF
  4091                           postinc2	equ	0xFDE
  4092                           postdec2	equ	0xFDD
  4093                           fsr2h	equ	0xFDA
  4094                           fsr2l	equ	0xFD9
  4095                           status	equ	0xFD8
  4096                           
  4097 ;; *************** function _isdigit *****************
  4098 ;; Defined at:
  4099 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\isdigit.c"
  4100 ;; Parameters:    Size  Location     Type
  4101 ;;  c               1    wreg     unsigned char 
  4102 ;; Auto vars:     Size  Location     Type
  4103 ;;  c               1    2[COMRAM] unsigned char 
  4104 ;; Return value:  Size  Location     Type
  4105 ;;		None               void
  4106 ;; Registers used:
  4107 ;;		wreg, status,2, status,0
  4108 ;; Tracked objects:
  4109 ;;		On entry : 0/0
  4110 ;;		On exit  : 0/0
  4111 ;;		Unchanged: 0/0
  4112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4113 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4114 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4115 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4116 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4117 ;;Total ram usage:        3 bytes
  4118 ;; Hardware stack levels used:    1
  4119 ;; This function calls:
  4120 ;;		Nothing
  4121 ;; This function is called by:
  4122 ;;		_sprintf
  4123 ;; This function uses a non-reentrant model
  4124 ;;
  4125                           
  4126                           	psect	text21
  4127  0023BC                     __ptext21:
  4128                           	opt stack 0
  4129  0023BC                     _isdigit:
  4130                           	opt stack 27
  4131                           
  4132                           ;incstack = 0
  4133                           ;isdigit@c stored from wreg
  4134  0023BC  6E2F               	movwf	isdigit@c,c
  4135  0023BE  0E00               	movlw	0
  4136  0023C0  6E2E               	movwf	_isdigit$1895,c
  4137  0023C2  0E3A               	movlw	58
  4138  0023C4  602F               	cpfslt	isdigit@c,c
  4139  0023C6  D006               	goto	l2122
  4140  0023C8  0E2F               	movlw	47
  4141  0023CA  642F               	cpfsgt	isdigit@c,c
  4142  0023CC  D003               	goto	l2122
  4143  0023CE  0E01               	movlw	1
  4144  0023D0  6E2E               	movwf	_isdigit$1895,c
  4145  0023D2  D000               	goto	l2122
  4146  0023D4                     l2122:
  4147  0023D4  C02E  F02D         	movff	_isdigit$1895,??_isdigit
  4148  0023D8  302D               	rrcf	??_isdigit,w,c
  4149  0023DA  0012               	return	
  4150  0023DC  0012               	return		;funcret
  4151  0023DE                     __end_of_isdigit:
  4152                           	opt stack 0
  4153                           tblptru	equ	0xFF8
  4154                           tblptrh	equ	0xFF7
  4155                           tblptrl	equ	0xFF6
  4156                           tablat	equ	0xFF5
  4157                           prodh	equ	0xFF4
  4158                           prodl	equ	0xFF3
  4159                           postinc0	equ	0xFEE
  4160                           wreg	equ	0xFE8
  4161                           postdec1	equ	0xFE5
  4162                           fsr1l	equ	0xFE1
  4163                           indf2	equ	0xFDF
  4164                           postinc2	equ	0xFDE
  4165                           postdec2	equ	0xFDD
  4166                           fsr2h	equ	0xFDA
  4167                           fsr2l	equ	0xFD9
  4168                           status	equ	0xFD8
  4169                           
  4170 ;; *************** function ___wmul *****************
  4171 ;; Defined at:
  4172 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
  4173 ;; Parameters:    Size  Location     Type
  4174 ;;  multiplier      2    0[COMRAM] unsigned int 
  4175 ;;  multiplicand    2    2[COMRAM] unsigned int 
  4176 ;; Auto vars:     Size  Location     Type
  4177 ;;  product         2    4[COMRAM] unsigned int 
  4178 ;; Return value:  Size  Location     Type
  4179 ;;                  2    0[COMRAM] unsigned int 
  4180 ;; Registers used:
  4181 ;;		wreg, status,2, status,0, prodl, prodh
  4182 ;; Tracked objects:
  4183 ;;		On entry : 0/0
  4184 ;;		On exit  : 0/0
  4185 ;;		Unchanged: 0/0
  4186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4187 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4188 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4190 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4191 ;;Total ram usage:        6 bytes
  4192 ;; Hardware stack levels used:    1
  4193 ;; This function calls:
  4194 ;;		Nothing
  4195 ;; This function is called by:
  4196 ;;		_almacenarTiempo
  4197 ;;		_sprintf
  4198 ;; This function uses a non-reentrant model
  4199 ;;
  4200                           
  4201                           	psect	text22
  4202  002370                     __ptext22:
  4203                           	opt stack 0
  4204  002370                     ___wmul:
  4205                           	opt stack 27
  4206                           
  4207                           ;incstack = 0
  4208  002370  502D               	movf	___wmul@multiplier,w,c
  4209  002372  022F               	mulwf	___wmul@multiplicand,c
  4210  002374  CFF3 F031          	movff	prodl,___wmul@product
  4211  002378  CFF4 F032          	movff	prodh,___wmul@product+1
  4212  00237C  502D               	movf	___wmul@multiplier,w,c
  4213  00237E  0230               	mulwf	___wmul@multiplicand+1,c
  4214  002380  50F3               	movf	prodl,w,c
  4215  002382  2632               	addwf	___wmul@product+1,f,c
  4216  002384  502E               	movf	___wmul@multiplier+1,w,c
  4217  002386  022F               	mulwf	___wmul@multiplicand,c
  4218  002388  50F3               	movf	prodl,w,c
  4219  00238A  2632               	addwf	___wmul@product+1,f,c
  4220  00238C  C031  F02D         	movff	___wmul@product,?___wmul
  4221  002390  C032  F02E         	movff	___wmul@product+1,?___wmul+1
  4222  002394  0012               	return	
  4223  002396  0012               	return		;funcret
  4224  002398                     __end_of___wmul:
  4225                           	opt stack 0
  4226                           tblptru	equ	0xFF8
  4227                           tblptrh	equ	0xFF7
  4228                           tblptrl	equ	0xFF6
  4229                           tablat	equ	0xFF5
  4230                           prodh	equ	0xFF4
  4231                           prodl	equ	0xFF3
  4232                           postinc0	equ	0xFEE
  4233                           wreg	equ	0xFE8
  4234                           postdec1	equ	0xFE5
  4235                           fsr1l	equ	0xFE1
  4236                           indf2	equ	0xFDF
  4237                           postinc2	equ	0xFDE
  4238                           postdec2	equ	0xFDD
  4239                           fsr2h	equ	0xFDA
  4240                           fsr2l	equ	0xFD9
  4241                           status	equ	0xFD8
  4242                           
  4243 ;; *************** function ___lwmod *****************
  4244 ;; Defined at:
  4245 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwmod.c"
  4246 ;; Parameters:    Size  Location     Type
  4247 ;;  dividend        2    7[COMRAM] unsigned int 
  4248 ;;  divisor         2    9[COMRAM] unsigned int 
  4249 ;; Auto vars:     Size  Location     Type
  4250 ;;  counter         1   11[COMRAM] unsigned char 
  4251 ;; Return value:  Size  Location     Type
  4252 ;;                  2    7[COMRAM] unsigned int 
  4253 ;; Registers used:
  4254 ;;		wreg, status,2, status,0
  4255 ;; Tracked objects:
  4256 ;;		On entry : 0/0
  4257 ;;		On exit  : 0/0
  4258 ;;		Unchanged: 0/0
  4259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4260 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4261 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4263 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4264 ;;Total ram usage:        5 bytes
  4265 ;; Hardware stack levels used:    1
  4266 ;; This function calls:
  4267 ;;		Nothing
  4268 ;; This function is called by:
  4269 ;;		_sprintf
  4270 ;; This function uses a non-reentrant model
  4271 ;;
  4272                           
  4273                           	psect	text23
  4274  002142                     __ptext23:
  4275                           	opt stack 0
  4276  002142                     ___lwmod:
  4277                           	opt stack 27
  4278                           
  4279                           ;incstack = 0
  4280  002142  5036               	movf	___lwmod@divisor,w,c
  4281  002144  1037               	iorwf	___lwmod@divisor+1,w,c
  4282  002146  B4D8               	btfsc	status,2,c
  4283  002148  D01D               	goto	l1053
  4284  00214A  0E01               	movlw	1
  4285  00214C  6E38               	movwf	___lwmod@counter,c
  4286  00214E  D005               	goto	l2160
  4287  002150                     l2158:
  4288  002150  90D8               	bcf	status,0,c
  4289  002152  3636               	rlcf	___lwmod@divisor,f,c
  4290  002154  3637               	rlcf	___lwmod@divisor+1,f,c
  4291  002156  2A38               	incf	___lwmod@counter,f,c
  4292  002158  D000               	goto	l2160
  4293  00215A                     l2160:
  4294  00215A  BE37               	btfsc	___lwmod@divisor+1,7,c
  4295  00215C  D002               	goto	l2162
  4296  00215E  D7F8               	goto	l2158
  4297  002160  D000               	goto	l2162
  4298  002162                     l2162:
  4299  002162  5036               	movf	___lwmod@divisor,w,c
  4300  002164  5C34               	subwf	___lwmod@dividend,w,c
  4301  002166  5037               	movf	___lwmod@divisor+1,w,c
  4302  002168  5835               	subwfb	___lwmod@dividend+1,w,c
  4303  00216A  A0D8               	btfss	status,0,c
  4304  00216C  D005               	goto	l2166
  4305  00216E  5036               	movf	___lwmod@divisor,w,c
  4306  002170  5E34               	subwf	___lwmod@dividend,f,c
  4307  002172  5037               	movf	___lwmod@divisor+1,w,c
  4308  002174  5A35               	subwfb	___lwmod@dividend+1,f,c
  4309  002176  D000               	goto	l2166
  4310  002178                     l2166:
  4311  002178  90D8               	bcf	status,0,c
  4312  00217A  3237               	rrcf	___lwmod@divisor+1,f,c
  4313  00217C  3236               	rrcf	___lwmod@divisor,f,c
  4314  00217E  2E38               	decfsz	___lwmod@counter,f,c
  4315  002180  D7F0               	goto	l2162
  4316  002182  D000               	goto	l1053
  4317  002184                     l1053:
  4318  002184  C034  F034         	movff	___lwmod@dividend,?___lwmod
  4319  002188  C035  F035         	movff	___lwmod@dividend+1,?___lwmod+1
  4320  00218C  0012               	return		;funcret
  4321  00218E                     __end_of___lwmod:
  4322                           	opt stack 0
  4323                           tblptru	equ	0xFF8
  4324                           tblptrh	equ	0xFF7
  4325                           tblptrl	equ	0xFF6
  4326                           tablat	equ	0xFF5
  4327                           prodh	equ	0xFF4
  4328                           prodl	equ	0xFF3
  4329                           postinc0	equ	0xFEE
  4330                           wreg	equ	0xFE8
  4331                           postdec1	equ	0xFE5
  4332                           fsr1l	equ	0xFE1
  4333                           indf2	equ	0xFDF
  4334                           postinc2	equ	0xFDE
  4335                           postdec2	equ	0xFDD
  4336                           fsr2h	equ	0xFDA
  4337                           fsr2l	equ	0xFD9
  4338                           status	equ	0xFD8
  4339                           
  4340 ;; *************** function ___lwdiv *****************
  4341 ;; Defined at:
  4342 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c"
  4343 ;; Parameters:    Size  Location     Type
  4344 ;;  dividend        2    0[COMRAM] unsigned int 
  4345 ;;  divisor         2    2[COMRAM] unsigned int 
  4346 ;; Auto vars:     Size  Location     Type
  4347 ;;  quotient        2    4[COMRAM] unsigned int 
  4348 ;;  counter         1    6[COMRAM] unsigned char 
  4349 ;; Return value:  Size  Location     Type
  4350 ;;                  2    0[COMRAM] unsigned int 
  4351 ;; Registers used:
  4352 ;;		wreg, status,2, status,0
  4353 ;; Tracked objects:
  4354 ;;		On entry : 0/0
  4355 ;;		On exit  : 0/0
  4356 ;;		Unchanged: 0/0
  4357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4358 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4359 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4361 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4362 ;;Total ram usage:        7 bytes
  4363 ;; Hardware stack levels used:    1
  4364 ;; This function calls:
  4365 ;;		Nothing
  4366 ;; This function is called by:
  4367 ;;		_sprintf
  4368 ;; This function uses a non-reentrant model
  4369 ;;
  4370                           
  4371                           	psect	text24
  4372  001F46                     __ptext24:
  4373                           	opt stack 0
  4374  001F46                     ___lwdiv:
  4375                           	opt stack 27
  4376                           
  4377                           ;incstack = 0
  4378  001F46  0E00               	movlw	0
  4379  001F48  6E32               	movwf	___lwdiv@quotient+1,c
  4380  001F4A  0E00               	movlw	0
  4381  001F4C  6E31               	movwf	___lwdiv@quotient,c
  4382  001F4E  502F               	movf	___lwdiv@divisor,w,c
  4383  001F50  1030               	iorwf	___lwdiv@divisor+1,w,c
  4384  001F52  B4D8               	btfsc	status,2,c
  4385  001F54  D021               	goto	l1043
  4386  001F56  0E01               	movlw	1
  4387  001F58  6E33               	movwf	___lwdiv@counter,c
  4388  001F5A  D005               	goto	l2140
  4389  001F5C                     l2138:
  4390  001F5C  90D8               	bcf	status,0,c
  4391  001F5E  362F               	rlcf	___lwdiv@divisor,f,c
  4392  001F60  3630               	rlcf	___lwdiv@divisor+1,f,c
  4393  001F62  2A33               	incf	___lwdiv@counter,f,c
  4394  001F64  D000               	goto	l2140
  4395  001F66                     l2140:
  4396  001F66  BE30               	btfsc	___lwdiv@divisor+1,7,c
  4397  001F68  D002               	goto	l2142
  4398  001F6A  D7F8               	goto	l2138
  4399  001F6C  D000               	goto	l2142
  4400  001F6E                     l2142:
  4401  001F6E  90D8               	bcf	status,0,c
  4402  001F70  3631               	rlcf	___lwdiv@quotient,f,c
  4403  001F72  3632               	rlcf	___lwdiv@quotient+1,f,c
  4404  001F74  502F               	movf	___lwdiv@divisor,w,c
  4405  001F76  5C2D               	subwf	___lwdiv@dividend,w,c
  4406  001F78  5030               	movf	___lwdiv@divisor+1,w,c
  4407  001F7A  582E               	subwfb	___lwdiv@dividend+1,w,c
  4408  001F7C  A0D8               	btfss	status,0,c
  4409  001F7E  D006               	goto	l2150
  4410  001F80  502F               	movf	___lwdiv@divisor,w,c
  4411  001F82  5E2D               	subwf	___lwdiv@dividend,f,c
  4412  001F84  5030               	movf	___lwdiv@divisor+1,w,c
  4413  001F86  5A2E               	subwfb	___lwdiv@dividend+1,f,c
  4414  001F88  8031               	bsf	___lwdiv@quotient,0,c
  4415  001F8A  D000               	goto	l2150
  4416  001F8C                     l2150:
  4417  001F8C  90D8               	bcf	status,0,c
  4418  001F8E  3230               	rrcf	___lwdiv@divisor+1,f,c
  4419  001F90  322F               	rrcf	___lwdiv@divisor,f,c
  4420  001F92  2E33               	decfsz	___lwdiv@counter,f,c
  4421  001F94  D7EC               	goto	l2142
  4422  001F96  D000               	goto	l1043
  4423  001F98                     l1043:
  4424  001F98  C031  F02D         	movff	___lwdiv@quotient,?___lwdiv
  4425  001F9C  C032  F02E         	movff	___lwdiv@quotient+1,?___lwdiv+1
  4426  001FA0  0012               	return		;funcret
  4427  001FA2                     __end_of___lwdiv:
  4428                           	opt stack 0
  4429                           tblptru	equ	0xFF8
  4430                           tblptrh	equ	0xFF7
  4431                           tblptrl	equ	0xFF6
  4432                           tablat	equ	0xFF5
  4433                           prodh	equ	0xFF4
  4434                           prodl	equ	0xFF3
  4435                           postinc0	equ	0xFEE
  4436                           wreg	equ	0xFE8
  4437                           postdec1	equ	0xFE5
  4438                           fsr1l	equ	0xFE1
  4439                           indf2	equ	0xFDF
  4440                           postinc2	equ	0xFDE
  4441                           postdec2	equ	0xFDD
  4442                           fsr2h	equ	0xFDA
  4443                           fsr2l	equ	0xFD9
  4444                           status	equ	0xFD8
  4445                           
  4446 ;; *************** function _lcd_putrs *****************
  4447 ;; Defined at:
  4448 ;;		line 221 in file "unmc_lcd_216.c"
  4449 ;; Parameters:    Size  Location     Type
  4450 ;;  ptr             2    8[COMRAM] PTR const unsigned char 
  4451 ;;		 -> STR_8(13), STR_7(10), STR_6(14), STR_5(14), 
  4452 ;;		 -> STR_4(14), STR_3(17), STR_2(15), buffer2(20), 
  4453 ;; Auto vars:     Size  Location     Type
  4454 ;;		None
  4455 ;; Return value:  Size  Location     Type
  4456 ;;		None               void
  4457 ;; Registers used:
  4458 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4459 ;; Tracked objects:
  4460 ;;		On entry : 0/0
  4461 ;;		On exit  : 0/0
  4462 ;;		Unchanged: 0/0
  4463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4464 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4465 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4467 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4468 ;;Total ram usage:        2 bytes
  4469 ;; Hardware stack levels used:    1
  4470 ;; Hardware stack levels required when called:    4
  4471 ;; This function calls:
  4472 ;;		_lcd_putc
  4473 ;; This function is called by:
  4474 ;;		_mostrarReloj
  4475 ;;		_caratulaCronometro
  4476 ;;		_clickIniciar
  4477 ;;		_inicializarCronometro
  4478 ;;		_continuarCronometrando
  4479 ;;		_almacenarTiempo
  4480 ;;		_mostrarMejorVuelta
  4481 ;;		_mostrarVuelta
  4482 ;;		_debug
  4483 ;; This function uses a non-reentrant model
  4484 ;;
  4485                           
  4486                           	psect	text25
  4487  002052                     __ptext25:
  4488                           	opt stack 0
  4489  002052                     _lcd_putrs:
  4490                           	opt stack 23
  4491                           
  4492                           ;unmc_lcd_216.c: 223: while(*ptr){
  4493                           
  4494                           ;incstack = 0
  4495  002052  D015               	goto	l2178
  4496  002054                     l2174:
  4497                           
  4498                           ;unmc_lcd_216.c: 224: lcd_putc(*ptr++);
  4499  002054  C035  FFF6         	movff	lcd_putrs@ptr,tblptrl
  4500  002058  C036  FFF7         	movff	lcd_putrs@ptr+1,tblptrh
  4501  00205C  6AF8               	clrf	tblptru,c
  4502  00205E  0E0E               	movlw	(high __ramtop+-1)
  4503  002060  64F7               	cpfsgt	tblptrh,c
  4504  002062  D003               	bra	u1227
  4505  002064  0008               	tblrd		*
  4506  002066  50F5               	movf	tablat,w,c
  4507  002068  D005               	bra	u1220
  4508  00206A                     u1227:
  4509  00206A  CFF6 FFE9          	movff	tblptrl,fsr0l
  4510  00206E  CFF7 FFEA          	movff	tblptrh,fsr0h
  4511  002072  50EF               	movf	indf0,w,c
  4512  002074                     u1220:
  4513  002074  ECC7  F010         	call	_lcd_putc
  4514  002078  4A35               	infsnz	lcd_putrs@ptr,f,c
  4515  00207A  2A36               	incf	lcd_putrs@ptr+1,f,c
  4516  00207C  D000               	goto	l2178
  4517  00207E                     l2178:
  4518  00207E  C035  FFF6         	movff	lcd_putrs@ptr,tblptrl
  4519  002082  C036  FFF7         	movff	lcd_putrs@ptr+1,tblptrh
  4520  002086  6AF8               	clrf	tblptru,c
  4521  002088  0E0E               	movlw	(high __ramtop+-1)
  4522  00208A  64F7               	cpfsgt	tblptrh,c
  4523  00208C  D003               	bra	u1237
  4524  00208E  0008               	tblrd		*
  4525  002090  50F5               	movf	tablat,w,c
  4526  002092  D005               	bra	u1230
  4527  002094                     u1237:
  4528  002094  CFF6 FFE9          	movff	tblptrl,fsr0l
  4529  002098  CFF7 FFEA          	movff	tblptrh,fsr0h
  4530  00209C  50EF               	movf	indf0,w,c
  4531  00209E                     u1230:
  4532  00209E  0900               	iorlw	0
  4533  0020A0  A4D8               	btfss	status,2,c
  4534  0020A2  D7D8               	goto	l2174
  4535  0020A4  0012               	return		;funcret
  4536  0020A6                     __end_of_lcd_putrs:
  4537                           	opt stack 0
  4538                           tblptru	equ	0xFF8
  4539                           tblptrh	equ	0xFF7
  4540                           tblptrl	equ	0xFF6
  4541                           tablat	equ	0xFF5
  4542                           prodh	equ	0xFF4
  4543                           prodl	equ	0xFF3
  4544                           indf0	equ	0xFEF
  4545                           postinc0	equ	0xFEE
  4546                           fsr0h	equ	0xFEA
  4547                           fsr0l	equ	0xFE9
  4548                           wreg	equ	0xFE8
  4549                           postdec1	equ	0xFE5
  4550                           fsr1l	equ	0xFE1
  4551                           indf2	equ	0xFDF
  4552                           postinc2	equ	0xFDE
  4553                           postdec2	equ	0xFDD
  4554                           fsr2h	equ	0xFDA
  4555                           fsr2l	equ	0xFD9
  4556                           status	equ	0xFD8
  4557                           
  4558 ;; *************** function _lcd_putc *****************
  4559 ;; Defined at:
  4560 ;;		line 172 in file "unmc_lcd_216.c"
  4561 ;; Parameters:    Size  Location     Type
  4562 ;;  c               1    wreg     unsigned char 
  4563 ;; Auto vars:     Size  Location     Type
  4564 ;;  c               1    7[COMRAM] unsigned char 
  4565 ;; Return value:  Size  Location     Type
  4566 ;;		None               void
  4567 ;; Registers used:
  4568 ;;		wreg, status,2, status,0, cstack
  4569 ;; Tracked objects:
  4570 ;;		On entry : 0/0
  4571 ;;		On exit  : 0/0
  4572 ;;		Unchanged: 0/0
  4573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4574 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4575 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4577 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4578 ;;Total ram usage:        1 bytes
  4579 ;; Hardware stack levels used:    1
  4580 ;; Hardware stack levels required when called:    3
  4581 ;; This function calls:
  4582 ;;		_lcd_gotoxy
  4583 ;;		_lcd_send_byte
  4584 ;; This function is called by:
  4585 ;;		_lcd_putrs
  4586 ;;		_lcd_puts
  4587 ;; This function uses a non-reentrant model
  4588 ;;
  4589                           
  4590                           	psect	text26
  4591  00218E                     __ptext26:
  4592                           	opt stack 0
  4593  00218E                     _lcd_putc:
  4594                           	opt stack 23
  4595                           
  4596                           ;incstack = 0
  4597                           ;lcd_putc@c stored from wreg
  4598  00218E  6E34               	movwf	lcd_putc@c,c
  4599                           
  4600                           ;unmc_lcd_216.c: 173: switch(c){
  4601  002190  D018               	goto	l2112
  4602  002192                     l2102:
  4603                           
  4604                           ;unmc_lcd_216.c: 175: lcd_send_byte(0,1);
  4605  002192  0E01               	movlw	1
  4606  002194  6E2F               	movwf	lcd_send_byte@n,c
  4607  002196  0E00               	movlw	0
  4608  002198  EC9F  F011         	call	_lcd_send_byte
  4609                           
  4610                           ;unmc_lcd_216.c: 176: break;
  4611  00219C  0012               	return	
  4612  00219E                     l2104:
  4613                           
  4614                           ;unmc_lcd_216.c: 178: lcd_gotoxy(1,2);
  4615  00219E  0E02               	movlw	2
  4616  0021A0  6E31               	movwf	lcd_gotoxy@y,c
  4617  0021A2  0E01               	movlw	1
  4618  0021A4  ECCC  F011         	call	_lcd_gotoxy
  4619                           
  4620                           ;unmc_lcd_216.c: 179: break;
  4621  0021A8  0012               	return	
  4622  0021AA                     l2106:
  4623                           
  4624                           ;unmc_lcd_216.c: 181: lcd_send_byte(0,0x10);
  4625  0021AA  0E10               	movlw	16
  4626  0021AC  6E2F               	movwf	lcd_send_byte@n,c
  4627  0021AE  0E00               	movlw	0
  4628  0021B0  EC9F  F011         	call	_lcd_send_byte
  4629                           
  4630                           ;unmc_lcd_216.c: 182: break;
  4631  0021B4  0012               	return	
  4632  0021B6                     l2108:
  4633                           
  4634                           ;unmc_lcd_216.c: 184: lcd_send_byte(1,c);
  4635  0021B6  C034  F02F         	movff	lcd_putc@c,lcd_send_byte@n
  4636  0021BA  0E01               	movlw	1
  4637  0021BC  EC9F  F011         	call	_lcd_send_byte
  4638                           
  4639                           ;unmc_lcd_216.c: 186: }
  4640                           
  4641                           ;unmc_lcd_216.c: 185: break;
  4642  0021C0  0012               	return	
  4643  0021C2                     l2112:
  4644  0021C2  5034               	movf	lcd_putc@c,w,c
  4645                           
  4646                           ; Switch size 1, requested type "space"
  4647                           ; Number of cases is 3, Range of values is 8 to 12
  4648                           ; switch strategies available:
  4649                           ; Name         Instructions Cycles
  4650                           ; simple_byte           10     6 (average)
  4651                           ;	Chosen strategy is simple_byte
  4652  0021C4  0A08               	xorlw	8	; case 8
  4653  0021C6  B4D8               	btfsc	status,2,c
  4654  0021C8  D7F0               	goto	l2106
  4655  0021CA  0A02               	xorlw	2	; case 10
  4656  0021CC  B4D8               	btfsc	status,2,c
  4657  0021CE  D7E7               	goto	l2104
  4658  0021D0  0A06               	xorlw	6	; case 12
  4659  0021D2  B4D8               	btfsc	status,2,c
  4660  0021D4  D7DE               	goto	l2102
  4661  0021D6  D7EF               	goto	l2108
  4662  0021D8  0012               	return		;funcret
  4663  0021DA                     __end_of_lcd_putc:
  4664                           	opt stack 0
  4665                           tblptru	equ	0xFF8
  4666                           tblptrh	equ	0xFF7
  4667                           tblptrl	equ	0xFF6
  4668                           tablat	equ	0xFF5
  4669                           prodh	equ	0xFF4
  4670                           prodl	equ	0xFF3
  4671                           indf0	equ	0xFEF
  4672                           postinc0	equ	0xFEE
  4673                           fsr0h	equ	0xFEA
  4674                           fsr0l	equ	0xFE9
  4675                           wreg	equ	0xFE8
  4676                           postdec1	equ	0xFE5
  4677                           fsr1l	equ	0xFE1
  4678                           indf2	equ	0xFDF
  4679                           postinc2	equ	0xFDE
  4680                           postdec2	equ	0xFDD
  4681                           fsr2h	equ	0xFDA
  4682                           fsr2l	equ	0xFD9
  4683                           status	equ	0xFD8
  4684                           
  4685 ;; *************** function _lcd_gotoxy *****************
  4686 ;; Defined at:
  4687 ;;		line 158 in file "unmc_lcd_216.c"
  4688 ;; Parameters:    Size  Location     Type
  4689 ;;  x               1    wreg     unsigned char 
  4690 ;;  y               1    4[COMRAM] unsigned char 
  4691 ;; Auto vars:     Size  Location     Type
  4692 ;;  x               1    5[COMRAM] unsigned char 
  4693 ;;  address         1    6[COMRAM] unsigned char 
  4694 ;; Return value:  Size  Location     Type
  4695 ;;		None               void
  4696 ;; Registers used:
  4697 ;;		wreg, status,2, status,0, cstack
  4698 ;; Tracked objects:
  4699 ;;		On entry : 0/0
  4700 ;;		On exit  : 0/0
  4701 ;;		Unchanged: 0/0
  4702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4703 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4704 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4706 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4707 ;;Total ram usage:        3 bytes
  4708 ;; Hardware stack levels used:    1
  4709 ;; Hardware stack levels required when called:    2
  4710 ;; This function calls:
  4711 ;;		_lcd_send_byte
  4712 ;; This function is called by:
  4713 ;;		_lcd_putc
  4714 ;;		_mostrarReloj
  4715 ;;		_caratulaCronometro
  4716 ;;		_clickIniciar
  4717 ;;		_inicializarCronometro
  4718 ;;		_continuarCronometrando
  4719 ;;		_almacenarTiempo
  4720 ;;		_mostrarMejorVuelta
  4721 ;;		_mostrarVuelta
  4722 ;;		_debug
  4723 ;; This function uses a non-reentrant model
  4724 ;;
  4725                           
  4726                           	psect	text27
  4727  002398                     __ptext27:
  4728                           	opt stack 0
  4729  002398                     _lcd_gotoxy:
  4730                           	opt stack 23
  4731                           
  4732                           ;incstack = 0
  4733                           ;lcd_gotoxy@x stored from wreg
  4734  002398  6E32               	movwf	lcd_gotoxy@x,c
  4735                           
  4736                           ;unmc_lcd_216.c: 159: int8 address;
  4737                           ;unmc_lcd_216.c: 161: if(y != 1)
  4738  00239A  0431               	decf	lcd_gotoxy@y,w,c
  4739  00239C  B4D8               	btfsc	status,2,c
  4740  00239E  D002               	goto	l2094
  4741                           
  4742                           ;unmc_lcd_216.c: 162: address = 0x40;
  4743  0023A0  0E40               	movlw	64
  4744  0023A2  D001               	goto	L1
  4745  0023A4                     l2094:
  4746                           
  4747                           ;unmc_lcd_216.c: 163: else
  4748                           ;unmc_lcd_216.c: 164: address=0;
  4749  0023A4  0E00               	movlw	0
  4750  0023A6                     L1:
  4751  0023A6  6E33               	movwf	lcd_gotoxy@address,c
  4752  0023A8  D000               	goto	l2096
  4753  0023AA                     l2096:
  4754                           
  4755                           ;unmc_lcd_216.c: 166: address += x-1;
  4756  0023AA  0432               	decf	lcd_gotoxy@x,w,c
  4757  0023AC  2633               	addwf	lcd_gotoxy@address,f,c
  4758                           
  4759                           ;unmc_lcd_216.c: 167: lcd_send_byte(0, 0x80 | address);
  4760  0023AE  5033               	movf	lcd_gotoxy@address,w,c
  4761  0023B0  0980               	iorlw	128
  4762  0023B2  6E2F               	movwf	lcd_send_byte@n,c
  4763  0023B4  0E00               	movlw	0
  4764  0023B6  EC9F  F011         	call	_lcd_send_byte
  4765  0023BA  0012               	return		;funcret
  4766  0023BC                     __end_of_lcd_gotoxy:
  4767                           	opt stack 0
  4768                           tblptru	equ	0xFF8
  4769                           tblptrh	equ	0xFF7
  4770                           tblptrl	equ	0xFF6
  4771                           tablat	equ	0xFF5
  4772                           prodh	equ	0xFF4
  4773                           prodl	equ	0xFF3
  4774                           indf0	equ	0xFEF
  4775                           postinc0	equ	0xFEE
  4776                           fsr0h	equ	0xFEA
  4777                           fsr0l	equ	0xFE9
  4778                           wreg	equ	0xFE8
  4779                           postdec1	equ	0xFE5
  4780                           fsr1l	equ	0xFE1
  4781                           indf2	equ	0xFDF
  4782                           postinc2	equ	0xFDE
  4783                           postdec2	equ	0xFDD
  4784                           fsr2h	equ	0xFDA
  4785                           fsr2l	equ	0xFD9
  4786                           status	equ	0xFD8
  4787                           
  4788 ;; *************** function _CargoVueltas *****************
  4789 ;; Defined at:
  4790 ;;		line 338 in file "main.c"
  4791 ;; Parameters:    Size  Location     Type
  4792 ;;  p_nrovuelta     2    0[COMRAM] int 
  4793 ;;  p_minuto        2    2[COMRAM] int 
  4794 ;;  p_segundo       2    4[COMRAM] int 
  4795 ;;  p_milesima      2    6[COMRAM] int 
  4796 ;; Auto vars:     Size  Location     Type
  4797 ;;		None
  4798 ;; Return value:  Size  Location     Type
  4799 ;;		None               void
  4800 ;; Registers used:
  4801 ;;		fsr2l, fsr2h, status,2, status,0
  4802 ;; Tracked objects:
  4803 ;;		On entry : 0/0
  4804 ;;		On exit  : 0/0
  4805 ;;		Unchanged: 0/0
  4806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4807 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4808 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4810 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4811 ;;Total ram usage:        8 bytes
  4812 ;; Hardware stack levels used:    1
  4813 ;; This function calls:
  4814 ;;		Nothing
  4815 ;; This function is called by:
  4816 ;;		_almacenarTiempoParcial
  4817 ;;		_almacenarTiempo
  4818 ;; This function uses a non-reentrant model
  4819 ;;
  4820                           
  4821                           	psect	text28
  4822  0020A6                     __ptext28:
  4823                           	opt stack 0
  4824  0020A6                     _CargoVueltas:
  4825                           	opt stack 28
  4826                           
  4827                           ;main.c: 339: vMinutos[p_nrovuelta] = p_minuto;
  4828                           
  4829                           ;incstack = 0
  4830  0020A6  90D8               	bcf	status,0,c
  4831  0020A8  342D               	rlcf	CargoVueltas@p_nrovuelta,w,c
  4832  0020AA  6ED9               	movwf	fsr2l,c
  4833  0020AC  342E               	rlcf	CargoVueltas@p_nrovuelta+1,w,c
  4834  0020AE  6EDA               	movwf	fsr2h,c
  4835  0020B0  0E74               	movlw	low _vMinutos
  4836  0020B2  26D9               	addwf	fsr2l,f,c
  4837  0020B4  0E00               	movlw	high _vMinutos
  4838  0020B6  22DA               	addwfc	fsr2h,f,c
  4839  0020B8  C02F  FFDE         	movff	CargoVueltas@p_minuto,postinc2
  4840  0020BC  C030  FFDD         	movff	CargoVueltas@p_minuto+1,postdec2
  4841                           
  4842                           ;main.c: 340: vSegundos[p_nrovuelta] = p_segundo;
  4843  0020C0  90D8               	bcf	status,0,c
  4844  0020C2  342D               	rlcf	CargoVueltas@p_nrovuelta,w,c
  4845  0020C4  6ED9               	movwf	fsr2l,c
  4846  0020C6  342E               	rlcf	CargoVueltas@p_nrovuelta+1,w,c
  4847  0020C8  6EDA               	movwf	fsr2h,c
  4848  0020CA  0E88               	movlw	low _vSegundos
  4849  0020CC  26D9               	addwf	fsr2l,f,c
  4850  0020CE  0E00               	movlw	high _vSegundos
  4851  0020D0  22DA               	addwfc	fsr2h,f,c
  4852  0020D2  C031  FFDE         	movff	CargoVueltas@p_segundo,postinc2
  4853  0020D6  C032  FFDD         	movff	CargoVueltas@p_segundo+1,postdec2
  4854                           
  4855                           ;main.c: 341: vMilesimas[p_nrovuelta] = p_milesima;
  4856  0020DA  90D8               	bcf	status,0,c
  4857  0020DC  342D               	rlcf	CargoVueltas@p_nrovuelta,w,c
  4858  0020DE  6ED9               	movwf	fsr2l,c
  4859  0020E0  342E               	rlcf	CargoVueltas@p_nrovuelta+1,w,c
  4860  0020E2  6EDA               	movwf	fsr2h,c
  4861  0020E4  0E60               	movlw	low _vMilesimas
  4862  0020E6  26D9               	addwf	fsr2l,f,c
  4863  0020E8  0E00               	movlw	high _vMilesimas
  4864  0020EA  22DA               	addwfc	fsr2h,f,c
  4865  0020EC  C033  FFDE         	movff	CargoVueltas@p_milesima,postinc2
  4866  0020F0  C034  FFDD         	movff	CargoVueltas@p_milesima+1,postdec2
  4867  0020F4  0012               	return		;funcret
  4868  0020F6                     __end_of_CargoVueltas:
  4869                           	opt stack 0
  4870                           tblptru	equ	0xFF8
  4871                           tblptrh	equ	0xFF7
  4872                           tblptrl	equ	0xFF6
  4873                           tablat	equ	0xFF5
  4874                           prodh	equ	0xFF4
  4875                           prodl	equ	0xFF3
  4876                           indf0	equ	0xFEF
  4877                           postinc0	equ	0xFEE
  4878                           fsr0h	equ	0xFEA
  4879                           fsr0l	equ	0xFE9
  4880                           wreg	equ	0xFE8
  4881                           postdec1	equ	0xFE5
  4882                           fsr1l	equ	0xFE1
  4883                           indf2	equ	0xFDF
  4884                           postinc2	equ	0xFDE
  4885                           postdec2	equ	0xFDD
  4886                           fsr2h	equ	0xFDA
  4887                           fsr2l	equ	0xFD9
  4888                           status	equ	0xFD8
  4889                           
  4890 ;; *************** function _Setup *****************
  4891 ;; Defined at:
  4892 ;;		line 113 in file "main.c"
  4893 ;; Parameters:    Size  Location     Type
  4894 ;;		None
  4895 ;; Auto vars:     Size  Location     Type
  4896 ;;		None
  4897 ;; Return value:  Size  Location     Type
  4898 ;;		None               void
  4899 ;; Registers used:
  4900 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4901 ;; Tracked objects:
  4902 ;;		On entry : 0/0
  4903 ;;		On exit  : 0/0
  4904 ;;		Unchanged: 0/0
  4905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4907 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4909 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4910 ;;Total ram usage:        0 bytes
  4911 ;; Hardware stack levels used:    1
  4912 ;; Hardware stack levels required when called:    3
  4913 ;; This function calls:
  4914 ;;		_Write_RTC
  4915 ;;		_lcd_comand
  4916 ;;		_lcd_init
  4917 ;; This function is called by:
  4918 ;;		_main
  4919 ;; This function uses a non-reentrant model
  4920 ;;
  4921                           
  4922                           	psect	text29
  4923  002264                     __ptext29:
  4924                           	opt stack 0
  4925  002264                     _Setup:
  4926                           	opt stack 27
  4927                           
  4928                           ;main.c: 115: OSCTUNEbits.INTSRC=1;
  4929                           
  4930                           ;incstack = 0
  4931  002264  8E9B               	bsf	3995,7,c	;volatile
  4932                           
  4933                           ;main.c: 116: OSCTUNEbits.PLLEN=0;
  4934  002266  9C9B               	bcf	3995,6,c	;volatile
  4935                           
  4936                           ;main.c: 117: OSCCONbits.IRCF0=1;
  4937  002268  88D3               	bsf	4051,4,c	;volatile
  4938                           
  4939                           ;main.c: 118: OSCCONbits.IRCF1=1;
  4940  00226A  8AD3               	bsf	4051,5,c	;volatile
  4941                           
  4942                           ;main.c: 119: OSCCONbits.IRCF2=1;
  4943  00226C  8CD3               	bsf	4051,6,c	;volatile
  4944                           
  4945                           ;main.c: 120: OSCCONbits.SCS0=0;
  4946  00226E  90D3               	bcf	4051,0,c	;volatile
  4947                           
  4948                           ;main.c: 121: OSCCONbits.SCS1=0;
  4949  002270  92D3               	bcf	4051,1,c	;volatile
  4950                           
  4951                           ;main.c: 123: TRISA = 0b11111111;
  4952  002272  6892               	setf	3986,c	;volatile
  4953                           
  4954                           ;main.c: 124: TRISB = 0;
  4955  002274  0E00               	movlw	0
  4956  002276  6E93               	movwf	3987,c	;volatile
  4957                           
  4958                           ;main.c: 125: TRISC = 0b00000111;
  4959  002278  0E07               	movlw	7
  4960  00227A  6E94               	movwf	3988,c	;volatile
  4961                           
  4962                           ;main.c: 131: ANCON0=0b11111111;
  4963  00227C  010F               	movlb	15	; () banked
  4964  00227E  6948               	setf	72,b	;volatile
  4965                           
  4966                           ;main.c: 133: ADCON0=0b00111111;
  4967  002280  0E3F               	movlw	63
  4968  002282  6EC2               	movwf	4034,c	;volatile
  4969                           
  4970                           ; BSR set to: 15
  4971                           ;main.c: 134: ADCON1=0b11111111;
  4972  002284  68C1               	setf	4033,c	;volatile
  4973                           
  4974                           ; BSR set to: 15
  4975                           ;main.c: 136: RTCCFGbits.RTCEN=1;
  4976  002286  010F               	movlb	15	; () banked
  4977  002288  8F3F               	bsf	63,7,b	;volatile
  4978                           
  4979                           ; BSR set to: 15
  4980                           ;main.c: 137: RTCCFGbits.RTCWREN=1;
  4981  00228A  010F               	movlb	15	; () banked
  4982  00228C  8B3F               	bsf	63,5,b	;volatile
  4983                           
  4984                           ; BSR set to: 15
  4985                           ;main.c: 138: T1CONbits.T1OSCEN=1;
  4986  00228E  86CD               	bsf	4045,3,c	;volatile
  4987                           
  4988                           ; BSR set to: 15
  4989                           ;main.c: 139: Write_RTC();
  4990  002290  EC00  F009         	call	_Write_RTC	;wreg free
  4991                           
  4992                           ;main.c: 140: lcd_init();
  4993  002294  EC53  F00E         	call	_lcd_init	;wreg free
  4994                           
  4995                           ;main.c: 141: lcd_comand(0b00001100);
  4996  002298  0E0C               	movlw	12
  4997  00229A  EC1D  F012         	call	_lcd_comand
  4998                           
  4999                           ;main.c: 142: LATBbits.LATB1 = 0;;
  5000  00229E  928A               	bcf	3978,1,c	;volatile
  5001                           
  5002                           ;main.c: 143: LATBbits.LATB0 = 0;;
  5003  0022A0  908A               	bcf	3978,0,c	;volatile
  5004  0022A2  0012               	return		;funcret
  5005  0022A4                     __end_of_Setup:
  5006                           	opt stack 0
  5007                           tblptru	equ	0xFF8
  5008                           tblptrh	equ	0xFF7
  5009                           tblptrl	equ	0xFF6
  5010                           tablat	equ	0xFF5
  5011                           prodh	equ	0xFF4
  5012                           prodl	equ	0xFF3
  5013                           indf0	equ	0xFEF
  5014                           postinc0	equ	0xFEE
  5015                           fsr0h	equ	0xFEA
  5016                           fsr0l	equ	0xFE9
  5017                           wreg	equ	0xFE8
  5018                           postdec1	equ	0xFE5
  5019                           fsr1l	equ	0xFE1
  5020                           indf2	equ	0xFDF
  5021                           postinc2	equ	0xFDE
  5022                           postdec2	equ	0xFDD
  5023                           fsr2h	equ	0xFDA
  5024                           fsr2l	equ	0xFD9
  5025                           status	equ	0xFD8
  5026                           
  5027 ;; *************** function _lcd_init *****************
  5028 ;; Defined at:
  5029 ;;		line 119 in file "unmc_lcd_216.c"
  5030 ;; Parameters:    Size  Location     Type
  5031 ;;		None
  5032 ;; Auto vars:     Size  Location     Type
  5033 ;;  i               1    4[COMRAM] unsigned char 
  5034 ;; Return value:  Size  Location     Type
  5035 ;;		None               void
  5036 ;; Registers used:
  5037 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5038 ;; Tracked objects:
  5039 ;;		On entry : 0/0
  5040 ;;		On exit  : 0/0
  5041 ;;		Unchanged: 0/0
  5042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5044 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5046 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5047 ;;Total ram usage:        1 bytes
  5048 ;; Hardware stack levels used:    1
  5049 ;; Hardware stack levels required when called:    2
  5050 ;; This function calls:
  5051 ;;		_Delay1KTCYx
  5052 ;;		_lcd_send_byte
  5053 ;;		_lcd_send_nibble
  5054 ;; This function is called by:
  5055 ;;		_Setup
  5056 ;; This function uses a non-reentrant model
  5057 ;;
  5058                           
  5059                           	psect	text30
  5060  001CA6                     __ptext30:
  5061                           	opt stack 0
  5062  001CA6                     _lcd_init:
  5063                           	opt stack 27
  5064                           
  5065                           ;unmc_lcd_216.c: 120: int8 i;
  5066                           ;unmc_lcd_216.c: 122: TRISBbits.TRISB3=0;
  5067                           
  5068                           ;incstack = 0
  5069  001CA6  9693               	bcf	3987,3,c	;volatile
  5070                           
  5071                           ;unmc_lcd_216.c: 123: TRISBbits.TRISB2=0;
  5072  001CA8  9493               	bcf	3987,2,c	;volatile
  5073                           
  5074                           ;unmc_lcd_216.c: 128: LATBbits.LATB3=0;
  5075  001CAA  968A               	bcf	3978,3,c	;volatile
  5076                           
  5077                           ;unmc_lcd_216.c: 129: LATBbits.LATB2=0;
  5078  001CAC  948A               	bcf	3978,2,c	;volatile
  5079                           
  5080                           ;unmc_lcd_216.c: 134: TRISBbits.TRISB4=0;
  5081  001CAE  9893               	bcf	3987,4,c	;volatile
  5082                           
  5083                           ;unmc_lcd_216.c: 135: TRISBbits.TRISB5=0;
  5084  001CB0  9A93               	bcf	3987,5,c	;volatile
  5085                           
  5086                           ;unmc_lcd_216.c: 136: TRISBbits.TRISB6=0;
  5087  001CB2  9C93               	bcf	3987,6,c	;volatile
  5088                           
  5089                           ;unmc_lcd_216.c: 137: TRISBbits.TRISB7=0;
  5090  001CB4  9E93               	bcf	3987,7,c	;volatile
  5091                           
  5092                           ;unmc_lcd_216.c: 139: Delay1KTCYx(8000000UL/800000UL);
  5093  001CB6  0E0A               	movlw	10
  5094  001CB8  EC02  F012         	call	_Delay1KTCYx
  5095                           
  5096                           ;unmc_lcd_216.c: 140: Delay1KTCYx(8000000UL/800000UL);
  5097  001CBC  0E0A               	movlw	10
  5098  001CBE  EC02  F012         	call	_Delay1KTCYx
  5099                           
  5100                           ;unmc_lcd_216.c: 141: Delay1KTCYx(8000000UL/800000UL);
  5101  001CC2  0E0A               	movlw	10
  5102  001CC4  EC02  F012         	call	_Delay1KTCYx
  5103                           
  5104                           ;unmc_lcd_216.c: 143: for(i=0 ;i < 3; i++){
  5105  001CC8  0E00               	movlw	0
  5106  001CCA  6E31               	movwf	lcd_init@i,c
  5107  001CCC                     l2536:
  5108  001CCC  0E02               	movlw	2
  5109  001CCE  6431               	cpfsgt	lcd_init@i,c
  5110  001CD0  D001               	goto	l2540
  5111  001CD2  D008               	goto	l2546
  5112  001CD4                     l2540:
  5113                           
  5114                           ;unmc_lcd_216.c: 144: lcd_send_nibble(0x03);
  5115  001CD4  0E03               	movlw	3
  5116  001CD6  ECCF  F00E         	call	_lcd_send_nibble
  5117                           
  5118                           ;unmc_lcd_216.c: 145: Delay1KTCYx(8000000UL/800000UL);
  5119  001CDA  0E0A               	movlw	10
  5120  001CDC  EC02  F012         	call	_Delay1KTCYx
  5121  001CE0  2A31               	incf	lcd_init@i,f,c
  5122  001CE2  D7F4               	goto	l2536
  5123  001CE4                     l2546:
  5124                           
  5125                           ;unmc_lcd_216.c: 146: }
  5126                           ;unmc_lcd_216.c: 148: lcd_send_nibble(0x02);
  5127  001CE4  0E02               	movlw	2
  5128  001CE6  ECCF  F00E         	call	_lcd_send_nibble
  5129                           
  5130                           ;unmc_lcd_216.c: 150: for(i=0; i < sizeof(LCD_INIT_STRING); i++){
  5131  001CEA  0E00               	movlw	0
  5132  001CEC  6E31               	movwf	lcd_init@i,c
  5133  001CEE  0E03               	movlw	3
  5134  001CF0  6431               	cpfsgt	lcd_init@i,c
  5135  001CF2  D002               	goto	l2554
  5136  001CF4  0012               	return	
  5137  001CF6  0012               	return	
  5138  001CF8                     l2554:
  5139                           
  5140                           ;unmc_lcd_216.c: 151: lcd_send_byte(0, LCD_INIT_STRING[i]);
  5141  001CF8  5031               	movf	lcd_init@i,w,c
  5142  001CFA  0D01               	mullw	1
  5143  001CFC  0E0B               	movlw	low _LCD_INIT_STRING
  5144  001CFE  24F3               	addwf	prodl,w,c
  5145  001D00  6EF6               	movwf	tblptrl,c
  5146  001D02  0E0F               	movlw	high _LCD_INIT_STRING
  5147  001D04  20F4               	addwfc	prodh,w,c
  5148  001D06  6EF7               	movwf	tblptrh,c
  5149  001D08                     	if	0	;There are less than 3 active tblptr bytes
  5150  001D08                     	endif
  5151  001D08  0008               	tblrd		*
  5152  001D0A  CFF5 F02F          	movff	tablat,lcd_send_byte@n
  5153  001D0E  0E00               	movlw	0
  5154  001D10  EC9F  F011         	call	_lcd_send_byte
  5155                           
  5156                           ;unmc_lcd_216.c: 153: Delay1KTCYx(8000000UL/800000UL);
  5157  001D14  0E0A               	movlw	10
  5158  001D16  EC02  F012         	call	_Delay1KTCYx
  5159  001D1A  2A31               	incf	lcd_init@i,f,c
  5160  001D1C  0E03               	movlw	3
  5161  001D1E  6431               	cpfsgt	lcd_init@i,c
  5162  001D20  D7EB               	goto	l2554
  5163  001D22  0012               	return	
  5164  001D24  0012               	return		;funcret
  5165  001D26                     __end_of_lcd_init:
  5166                           	opt stack 0
  5167                           tblptru	equ	0xFF8
  5168                           tblptrh	equ	0xFF7
  5169                           tblptrl	equ	0xFF6
  5170                           tablat	equ	0xFF5
  5171                           prodh	equ	0xFF4
  5172                           prodl	equ	0xFF3
  5173                           indf0	equ	0xFEF
  5174                           postinc0	equ	0xFEE
  5175                           fsr0h	equ	0xFEA
  5176                           fsr0l	equ	0xFE9
  5177                           wreg	equ	0xFE8
  5178                           postdec1	equ	0xFE5
  5179                           fsr1l	equ	0xFE1
  5180                           indf2	equ	0xFDF
  5181                           postinc2	equ	0xFDE
  5182                           postdec2	equ	0xFDD
  5183                           fsr2h	equ	0xFDA
  5184                           fsr2l	equ	0xFD9
  5185                           status	equ	0xFD8
  5186                           
  5187 ;; *************** function _Delay1KTCYx *****************
  5188 ;; Defined at:
  5189 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\d1ktcyx.c"
  5190 ;; Parameters:    Size  Location     Type
  5191 ;;  unit            1    wreg     unsigned char 
  5192 ;; Auto vars:     Size  Location     Type
  5193 ;;  unit            1    0[COMRAM] unsigned char 
  5194 ;; Return value:  Size  Location     Type
  5195 ;;		None               void
  5196 ;; Registers used:
  5197 ;;		wreg
  5198 ;; Tracked objects:
  5199 ;;		On entry : 0/0
  5200 ;;		On exit  : 0/0
  5201 ;;		Unchanged: 0/0
  5202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5203 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5204 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5205 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5206 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5207 ;;Total ram usage:        1 bytes
  5208 ;; Hardware stack levels used:    1
  5209 ;; This function calls:
  5210 ;;		Nothing
  5211 ;; This function is called by:
  5212 ;;		_lcd_init
  5213 ;;		_DelayPORXLCD
  5214 ;; This function uses a non-reentrant model
  5215 ;;
  5216                           
  5217                           	psect	text31
  5218  002404                     __ptext31:
  5219                           	opt stack 0
  5220  002404                     _Delay1KTCYx:
  5221                           	opt stack 28
  5222                           
  5223                           ;incstack = 0
  5224                           ;Delay1KTCYx@unit stored from wreg
  5225  002404  6E2D               	movwf	Delay1KTCYx@unit,c
  5226  002406  0EFA               	movlw	250
  5227  002408                     u2197:
  5228  002408  F000               	nop	
  5229  00240A  2EE8               	decfsz	wreg,f,c
  5230  00240C  D7FD               	goto	u2197
  5231  00240E  2E2D               	decfsz	Delay1KTCYx@unit,f,c
  5232  002410  D7FA               	goto	l1342
  5233  002412  0012               	return	
  5234  002414  0012               	return		;funcret
  5235  002416                     __end_of_Delay1KTCYx:
  5236                           	opt stack 0
  5237                           tblptru	equ	0xFF8
  5238                           tblptrh	equ	0xFF7
  5239                           tblptrl	equ	0xFF6
  5240                           tablat	equ	0xFF5
  5241                           prodh	equ	0xFF4
  5242                           prodl	equ	0xFF3
  5243                           indf0	equ	0xFEF
  5244                           postinc0	equ	0xFEE
  5245                           fsr0h	equ	0xFEA
  5246                           fsr0l	equ	0xFE9
  5247                           wreg	equ	0xFE8
  5248                           postdec1	equ	0xFE5
  5249                           fsr1l	equ	0xFE1
  5250                           indf2	equ	0xFDF
  5251                           postinc2	equ	0xFDE
  5252                           postdec2	equ	0xFDD
  5253                           fsr2h	equ	0xFDA
  5254                           fsr2l	equ	0xFD9
  5255                           status	equ	0xFD8
  5256                           
  5257 ;; *************** function _lcd_comand *****************
  5258 ;; Defined at:
  5259 ;;		line 189 in file "unmc_lcd_216.c"
  5260 ;; Parameters:    Size  Location     Type
  5261 ;;  d               1    wreg     unsigned char 
  5262 ;; Auto vars:     Size  Location     Type
  5263 ;;  d               1    4[COMRAM] unsigned char 
  5264 ;; Return value:  Size  Location     Type
  5265 ;;		None               void
  5266 ;; Registers used:
  5267 ;;		wreg, status,2, status,0, cstack
  5268 ;; Tracked objects:
  5269 ;;		On entry : 0/0
  5270 ;;		On exit  : 0/0
  5271 ;;		Unchanged: 0/0
  5272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5274 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5276 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5277 ;;Total ram usage:        1 bytes
  5278 ;; Hardware stack levels used:    1
  5279 ;; Hardware stack levels required when called:    2
  5280 ;; This function calls:
  5281 ;;		_lcd_send_byte
  5282 ;; This function is called by:
  5283 ;;		_mostrarReloj
  5284 ;;		_Setup
  5285 ;;		_caratulaCronometro
  5286 ;;		_clickIniciar
  5287 ;;		_inicializarCronometro
  5288 ;;		_almacenarTiempo
  5289 ;;		_mostrarMejorVuelta
  5290 ;;		_mostrarVuelta
  5291 ;; This function uses a non-reentrant model
  5292 ;;
  5293                           
  5294                           	psect	text32
  5295  00243A                     __ptext32:
  5296                           	opt stack 0
  5297  00243A                     _lcd_comand:
  5298                           	opt stack 25
  5299                           
  5300                           ;incstack = 0
  5301                           ;lcd_comand@d stored from wreg
  5302  00243A  6E31               	movwf	lcd_comand@d,c
  5303                           
  5304                           ;unmc_lcd_216.c: 190: lcd_send_byte(0,d);
  5305  00243C  C031  F02F         	movff	lcd_comand@d,lcd_send_byte@n
  5306  002440  0E00               	movlw	0
  5307  002442  EC9F  F011         	call	_lcd_send_byte
  5308  002446  0012               	return		;funcret
  5309  002448                     __end_of_lcd_comand:
  5310                           	opt stack 0
  5311                           tblptru	equ	0xFF8
  5312                           tblptrh	equ	0xFF7
  5313                           tblptrl	equ	0xFF6
  5314                           tablat	equ	0xFF5
  5315                           prodh	equ	0xFF4
  5316                           prodl	equ	0xFF3
  5317                           indf0	equ	0xFEF
  5318                           postinc0	equ	0xFEE
  5319                           fsr0h	equ	0xFEA
  5320                           fsr0l	equ	0xFE9
  5321                           wreg	equ	0xFE8
  5322                           postdec1	equ	0xFE5
  5323                           fsr1l	equ	0xFE1
  5324                           indf2	equ	0xFDF
  5325                           postinc2	equ	0xFDE
  5326                           postdec2	equ	0xFDD
  5327                           fsr2h	equ	0xFDA
  5328                           fsr2l	equ	0xFD9
  5329                           status	equ	0xFD8
  5330                           
  5331 ;; *************** function _lcd_send_byte *****************
  5332 ;; Defined at:
  5333 ;;		line 86 in file "unmc_lcd_216.c"
  5334 ;; Parameters:    Size  Location     Type
  5335 ;;  address         1    wreg     unsigned char 
  5336 ;;  n               1    2[COMRAM] unsigned char 
  5337 ;; Auto vars:     Size  Location     Type
  5338 ;;  address         1    3[COMRAM] unsigned char 
  5339 ;; Return value:  Size  Location     Type
  5340 ;;		None               void
  5341 ;; Registers used:
  5342 ;;		wreg, status,2, status,0, cstack
  5343 ;; Tracked objects:
  5344 ;;		On entry : 0/0
  5345 ;;		On exit  : 0/0
  5346 ;;		Unchanged: 0/0
  5347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5348 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5349 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5351 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5352 ;;Total ram usage:        2 bytes
  5353 ;; Hardware stack levels used:    1
  5354 ;; Hardware stack levels required when called:    1
  5355 ;; This function calls:
  5356 ;;		_Delay100TCYx
  5357 ;;		_lcd_send_nibble
  5358 ;; This function is called by:
  5359 ;;		_lcd_init
  5360 ;;		_lcd_gotoxy
  5361 ;;		_lcd_putc
  5362 ;;		_lcd_comand
  5363 ;;		_lcd_setcursor_vb
  5364 ;; This function uses a non-reentrant model
  5365 ;;
  5366                           
  5367                           	psect	text33
  5368  00233E                     __ptext33:
  5369                           	opt stack 0
  5370  00233E                     _lcd_send_byte:
  5371                           	opt stack 24
  5372                           
  5373                           ;incstack = 0
  5374                           ;lcd_send_byte@address stored from wreg
  5375  00233E  6E30               	movwf	lcd_send_byte@address,c
  5376                           
  5377                           ;unmc_lcd_216.c: 88: LATBbits.LATB3=0;
  5378  002340  968A               	bcf	3978,3,c	;volatile
  5379                           
  5380                           ;unmc_lcd_216.c: 93: Delay100TCYx(8000000UL/4000000UL);
  5381  002342  0E02               	movlw	2
  5382  002344  EC0B  F012         	call	_Delay100TCYx
  5383                           
  5384                           ;unmc_lcd_216.c: 96: TRISBbits.TRISB4=0;
  5385  002348  9893               	bcf	3987,4,c	;volatile
  5386                           
  5387                           ;unmc_lcd_216.c: 97: TRISBbits.TRISB5=0;
  5388  00234A  9A93               	bcf	3987,5,c	;volatile
  5389                           
  5390                           ;unmc_lcd_216.c: 98: TRISBbits.TRISB6=0;
  5391  00234C  9C93               	bcf	3987,6,c	;volatile
  5392                           
  5393                           ;unmc_lcd_216.c: 99: TRISBbits.TRISB7=0;
  5394  00234E  9E93               	bcf	3987,7,c	;volatile
  5395                           
  5396                           ;unmc_lcd_216.c: 101: if(address)
  5397  002350  5030               	movf	lcd_send_byte@address,w,c
  5398  002352  B4D8               	btfsc	status,2,c
  5399  002354  D002               	goto	l18
  5400                           
  5401                           ;unmc_lcd_216.c: 102: LATBbits.LATB3=1;
  5402  002356  868A               	bsf	3978,3,c	;volatile
  5403  002358  D001               	goto	l19
  5404  00235A                     l18:
  5405                           
  5406                           ;unmc_lcd_216.c: 103: else
  5407                           ;unmc_lcd_216.c: 104: LATBbits.LATB3=0;
  5408  00235A  968A               	bcf	3978,3,c	;volatile
  5409  00235C                     l19:
  5410                           
  5411                           ;unmc_lcd_216.c: 106: __nop();
  5412  00235C  F000               	nop	
  5413                           
  5414                           ;unmc_lcd_216.c: 113: lcd_send_nibble(n >> 4);
  5415  00235E  382F               	swapf	lcd_send_byte@n,w,c
  5416  002360  0B0F               	andlw	15
  5417  002362  ECCF  F00E         	call	_lcd_send_nibble
  5418                           
  5419                           ;unmc_lcd_216.c: 114: lcd_send_nibble(n & 0xf);
  5420  002366  502F               	movf	lcd_send_byte@n,w,c
  5421  002368  0B0F               	andlw	15
  5422  00236A  ECCF  F00E         	call	_lcd_send_nibble
  5423  00236E  0012               	return		;funcret
  5424  002370                     __end_of_lcd_send_byte:
  5425                           	opt stack 0
  5426                           tblptru	equ	0xFF8
  5427                           tblptrh	equ	0xFF7
  5428                           tblptrl	equ	0xFF6
  5429                           tablat	equ	0xFF5
  5430                           prodh	equ	0xFF4
  5431                           prodl	equ	0xFF3
  5432                           indf0	equ	0xFEF
  5433                           postinc0	equ	0xFEE
  5434                           fsr0h	equ	0xFEA
  5435                           fsr0l	equ	0xFE9
  5436                           wreg	equ	0xFE8
  5437                           postdec1	equ	0xFE5
  5438                           fsr1l	equ	0xFE1
  5439                           indf2	equ	0xFDF
  5440                           postinc2	equ	0xFDE
  5441                           postdec2	equ	0xFDD
  5442                           fsr2h	equ	0xFDA
  5443                           fsr2l	equ	0xFD9
  5444                           status	equ	0xFD8
  5445                           
  5446 ;; *************** function _lcd_send_nibble *****************
  5447 ;; Defined at:
  5448 ;;		line 25 in file "unmc_lcd_216.c"
  5449 ;; Parameters:    Size  Location     Type
  5450 ;;  nibble          1    wreg     unsigned char 
  5451 ;; Auto vars:     Size  Location     Type
  5452 ;;  nibble          1    1[COMRAM] unsigned char 
  5453 ;; Return value:  Size  Location     Type
  5454 ;;		None               void
  5455 ;; Registers used:
  5456 ;;		wreg, status,2, status,0
  5457 ;; Tracked objects:
  5458 ;;		On entry : 0/0
  5459 ;;		On exit  : 0/0
  5460 ;;		Unchanged: 0/0
  5461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5462 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5463 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5464 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5465 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5466 ;;Total ram usage:        2 bytes
  5467 ;; Hardware stack levels used:    1
  5468 ;; This function calls:
  5469 ;;		Nothing
  5470 ;; This function is called by:
  5471 ;;		_lcd_send_byte
  5472 ;;		_lcd_init
  5473 ;; This function uses a non-reentrant model
  5474 ;;
  5475                           
  5476                           	psect	text34
  5477  001D9E                     __ptext34:
  5478                           	opt stack 0
  5479  001D9E                     _lcd_send_nibble:
  5480                           	opt stack 24
  5481                           
  5482                           ;incstack = 0
  5483                           ;lcd_send_nibble@nibble stored from wreg
  5484  001D9E  6E2E               	movwf	lcd_send_nibble@nibble,c
  5485                           
  5486                           ;unmc_lcd_216.c: 27: LATBbits.LATB4=!!(nibble & 0x01);
  5487  001DA0  A02E               	btfss	lcd_send_nibble@nibble,0,c
  5488  001DA2  D003               	goto	u1040
  5489  001DA4  6A2D               	clrf	??_lcd_send_nibble& (0+255),c
  5490  001DA6  2A2D               	incf	??_lcd_send_nibble& (0+255),f,c
  5491  001DA8  D001               	goto	u1058
  5492  001DAA                     u1040:
  5493  001DAA  6A2D               	clrf	??_lcd_send_nibble& (0+255),c
  5494  001DAC                     u1058:
  5495  001DAC  3A2D               	swapf	??_lcd_send_nibble,f,c
  5496  001DAE  508A               	movf	3978,w,c	;volatile
  5497  001DB0  182D               	xorwf	??_lcd_send_nibble,w,c
  5498  001DB2  0BEF               	andlw	-17
  5499  001DB4  182D               	xorwf	??_lcd_send_nibble,w,c
  5500  001DB6  6E8A               	movwf	3978,c	;volatile
  5501                           
  5502                           ;unmc_lcd_216.c: 28: LATBbits.LATB5=!!(nibble & 0x02);
  5503  001DB8  A22E               	btfss	lcd_send_nibble@nibble,1,c
  5504  001DBA  D003               	goto	u1060
  5505  001DBC  6A2D               	clrf	??_lcd_send_nibble& (0+255),c
  5506  001DBE  2A2D               	incf	??_lcd_send_nibble& (0+255),f,c
  5507  001DC0  D001               	goto	u1078
  5508  001DC2                     u1060:
  5509  001DC2  6A2D               	clrf	??_lcd_send_nibble& (0+255),c
  5510  001DC4                     u1078:
  5511  001DC4  3A2D               	swapf	??_lcd_send_nibble,f,c
  5512  001DC6  462D               	rlncf	??_lcd_send_nibble,f,c
  5513  001DC8  508A               	movf	3978,w,c	;volatile
  5514  001DCA  182D               	xorwf	??_lcd_send_nibble,w,c
  5515  001DCC  0BDF               	andlw	-33
  5516  001DCE  182D               	xorwf	??_lcd_send_nibble,w,c
  5517  001DD0  6E8A               	movwf	3978,c	;volatile
  5518                           
  5519                           ;unmc_lcd_216.c: 29: LATBbits.LATB6=!!(nibble & 0x04);
  5520  001DD2  A42E               	btfss	lcd_send_nibble@nibble,2,c
  5521  001DD4  D003               	goto	u1080
  5522  001DD6  6A2D               	clrf	??_lcd_send_nibble& (0+255),c
  5523  001DD8  2A2D               	incf	??_lcd_send_nibble& (0+255),f,c
  5524  001DDA  D001               	goto	u1098
  5525  001DDC                     u1080:
  5526  001DDC  6A2D               	clrf	??_lcd_send_nibble& (0+255),c
  5527  001DDE                     u1098:
  5528  001DDE  3A2D               	swapf	??_lcd_send_nibble,f,c
  5529  001DE0  462D               	rlncf	??_lcd_send_nibble,f,c
  5530  001DE2  462D               	rlncf	??_lcd_send_nibble,f,c
  5531  001DE4  508A               	movf	3978,w,c	;volatile
  5532  001DE6  182D               	xorwf	??_lcd_send_nibble,w,c
  5533  001DE8  0BBF               	andlw	-65
  5534  001DEA  182D               	xorwf	??_lcd_send_nibble,w,c
  5535  001DEC  6E8A               	movwf	3978,c	;volatile
  5536                           
  5537                           ;unmc_lcd_216.c: 30: LATBbits.LATB7=!!(nibble & 0x08);
  5538  001DEE  A62E               	btfss	lcd_send_nibble@nibble,3,c
  5539  001DF0  D003               	goto	u1100
  5540  001DF2  6A2D               	clrf	??_lcd_send_nibble& (0+255),c
  5541  001DF4  2A2D               	incf	??_lcd_send_nibble& (0+255),f,c
  5542  001DF6  D001               	goto	u1118
  5543  001DF8                     u1100:
  5544  001DF8  6A2D               	clrf	??_lcd_send_nibble& (0+255),c
  5545  001DFA                     u1118:
  5546  001DFA  322D               	rrcf	??_lcd_send_nibble,f,c
  5547  001DFC  322D               	rrcf	??_lcd_send_nibble,f,c
  5548  001DFE  508A               	movf	3978,w,c	;volatile
  5549  001E00  182D               	xorwf	??_lcd_send_nibble,w,c
  5550  001E02  0B7F               	andlw	-129
  5551  001E04  182D               	xorwf	??_lcd_send_nibble,w,c
  5552  001E06  6E8A               	movwf	3978,c	;volatile
  5553                           
  5554                           ;unmc_lcd_216.c: 32: __nop();
  5555  001E08  F000               	nop	
  5556                           
  5557                           ;unmc_lcd_216.c: 33: LATBbits.LATB2=1;
  5558  001E0A  848A               	bsf	3978,2,c	;volatile
  5559                           
  5560                           ;unmc_lcd_216.c: 34: __nop();__nop();
  5561  001E0C  F000               	nop	
  5562  001E0E  F000               	nop	
  5563                           
  5564                           ;unmc_lcd_216.c: 35: LATBbits.LATB2=0;
  5565  001E10  948A               	bcf	3978,2,c	;volatile
  5566  001E12  0012               	return		;funcret
  5567  001E14                     __end_of_lcd_send_nibble:
  5568                           	opt stack 0
  5569                           tblptru	equ	0xFF8
  5570                           tblptrh	equ	0xFF7
  5571                           tblptrl	equ	0xFF6
  5572                           tablat	equ	0xFF5
  5573                           prodh	equ	0xFF4
  5574                           prodl	equ	0xFF3
  5575                           indf0	equ	0xFEF
  5576                           postinc0	equ	0xFEE
  5577                           fsr0h	equ	0xFEA
  5578                           fsr0l	equ	0xFE9
  5579                           wreg	equ	0xFE8
  5580                           postdec1	equ	0xFE5
  5581                           fsr1l	equ	0xFE1
  5582                           indf2	equ	0xFDF
  5583                           postinc2	equ	0xFDE
  5584                           postdec2	equ	0xFDD
  5585                           fsr2h	equ	0xFDA
  5586                           fsr2l	equ	0xFD9
  5587                           status	equ	0xFD8
  5588                           
  5589 ;; *************** function _Delay100TCYx *****************
  5590 ;; Defined at:
  5591 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\d100tcyx.c"
  5592 ;; Parameters:    Size  Location     Type
  5593 ;;  unit            1    wreg     unsigned char 
  5594 ;; Auto vars:     Size  Location     Type
  5595 ;;  unit            1    0[COMRAM] unsigned char 
  5596 ;; Return value:  Size  Location     Type
  5597 ;;		None               void
  5598 ;; Registers used:
  5599 ;;		wreg
  5600 ;; Tracked objects:
  5601 ;;		On entry : 0/0
  5602 ;;		On exit  : 0/0
  5603 ;;		Unchanged: 0/0
  5604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5606 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5608 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5609 ;;Total ram usage:        1 bytes
  5610 ;; Hardware stack levels used:    1
  5611 ;; This function calls:
  5612 ;;		Nothing
  5613 ;; This function is called by:
  5614 ;;		_lcd_send_byte
  5615 ;; This function uses a non-reentrant model
  5616 ;;
  5617                           
  5618                           	psect	text35
  5619  002416                     __ptext35:
  5620                           	opt stack 0
  5621  002416                     _Delay100TCYx:
  5622                           	opt stack 24
  5623                           
  5624                           ;incstack = 0
  5625                           ;Delay100TCYx@unit stored from wreg
  5626  002416  6E2D               	movwf	Delay100TCYx@unit,c
  5627  002418  0E21               	movlw	33
  5628  00241A                     u2207:
  5629  00241A  2EE8               	decfsz	wreg,f,c
  5630  00241C  D7FE               	goto	u2207
  5631  00241E  F000               	nop	
  5632  002420  2E2D               	decfsz	Delay100TCYx@unit,f,c
  5633  002422  D7FA               	goto	l2068
  5634  002424  0012               	return	
  5635  002426  0012               	return		;funcret
  5636  002428                     __end_of_Delay100TCYx:
  5637                           	opt stack 0
  5638                           tblptru	equ	0xFF8
  5639                           tblptrh	equ	0xFF7
  5640                           tblptrl	equ	0xFF6
  5641                           tablat	equ	0xFF5
  5642                           prodh	equ	0xFF4
  5643                           prodl	equ	0xFF3
  5644                           indf0	equ	0xFEF
  5645                           postinc0	equ	0xFEE
  5646                           fsr0h	equ	0xFEA
  5647                           fsr0l	equ	0xFE9
  5648                           wreg	equ	0xFE8
  5649                           postdec1	equ	0xFE5
  5650                           fsr1l	equ	0xFE1
  5651                           indf2	equ	0xFDF
  5652                           postinc2	equ	0xFDE
  5653                           postdec2	equ	0xFDD
  5654                           fsr2h	equ	0xFDA
  5655                           fsr2l	equ	0xFD9
  5656                           status	equ	0xFD8
  5657                           
  5658 ;; *************** function _Write_RTC *****************
  5659 ;; Defined at:
  5660 ;;		line 74 in file "../../unimic/headers\unmc_rtcc_01.h"
  5661 ;; Parameters:    Size  Location     Type
  5662 ;;		None
  5663 ;; Auto vars:     Size  Location     Type
  5664 ;;		None
  5665 ;; Return value:  Size  Location     Type
  5666 ;;		None               void
  5667 ;; Registers used:
  5668 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5669 ;; Tracked objects:
  5670 ;;		On entry : 0/0
  5671 ;;		On exit  : 0/0
  5672 ;;		Unchanged: 0/0
  5673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5674 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5675 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5677 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5678 ;;Total ram usage:        0 bytes
  5679 ;; Hardware stack levels used:    1
  5680 ;; Hardware stack levels required when called:    2
  5681 ;; This function calls:
  5682 ;;		_RtccWrOn
  5683 ;;		_RtccWriteDate
  5684 ;;		_RtccWriteTime
  5685 ;;		___awdiv
  5686 ;; This function is called by:
  5687 ;;		_Setup
  5688 ;;		_inicializarCronometro
  5689 ;;		_continuarCronometrando
  5690 ;; This function uses a non-reentrant model
  5691 ;;
  5692                           
  5693                           	psect	text36
  5694  001200                     __ptext36:
  5695                           	opt stack 0
  5696  001200                     _Write_RTC:
  5697                           	opt stack 27
  5698                           
  5699                           ;headers\unmc_rtcc_01.h: 76: RtccWrOn();
  5700                           
  5701                           ;incstack = 0
  5702  001200  EC14  F012         	call	_RtccWrOn	;wreg free
  5703                           
  5704                           ;headers\unmc_rtcc_01.h: 78: PIE3bits.RTCCIE=1;
  5705  001204  80A3               	bsf	4003,0,c	;volatile
  5706                           
  5707                           ;headers\unmc_rtcc_01.h: 79: segundo_d=segundo/10;
  5708  001206  C011  F02D         	movff	_segundo,___awdiv@dividend
  5709  00120A  C012  F02E         	movff	_segundo+1,___awdiv@dividend+1
  5710  00120E  0E00               	movlw	0
  5711  001210  6E30               	movwf	___awdiv@divisor+1,c
  5712  001212  0E0A               	movlw	10
  5713  001214  6E2F               	movwf	___awdiv@divisor,c
  5714  001216  EC7A  F00D         	call	___awdiv	;wreg free
  5715  00121A  502D               	movf	?___awdiv,w,c
  5716  00121C  0100               	movlb	0	; () banked
  5717  00121E  6FF7               	movwf	_segundo_d& (0+255),b
  5718                           
  5719                           ; BSR set to: 0
  5720                           ;headers\unmc_rtcc_01.h: 80: segundo_u=segundo-segundo_d*10;
  5721  001220  0100               	movlb	0	; () banked
  5722  001222  51F7               	movf	_segundo_d& (0+255),w,b
  5723  001224  0D0A               	mullw	10
  5724  001226  50F3               	movf	prodl,w,c
  5725  001228  0800               	sublw	0
  5726  00122A  2411               	addwf	_segundo,w,c
  5727  00122C  0100               	movlb	0	; () banked
  5728  00122E  6FF8               	movwf	_segundo_u& (0+255),b
  5729                           
  5730                           ; BSR set to: 0
  5731                           ;headers\unmc_rtcc_01.h: 81: RtccTime.f.sec =segundo_d*16+segundo_u;
  5732  001230  0100               	movlb	0	; () banked
  5733  001232  51F7               	movf	_segundo_d& (0+255),w,b
  5734  001234  0D10               	mullw	16
  5735  001236  50F3               	movf	prodl,w,c
  5736  001238  0100               	movlb	0	; () banked
  5737  00123A  25F8               	addwf	_segundo_u& (0+255),w,b
  5738  00123C  6E2A               	movwf	_RtccTime+1,c
  5739                           
  5740                           ; BSR set to: 0
  5741                           ;headers\unmc_rtcc_01.h: 82: minuto_d=minuto/10;
  5742  00123E  C00D  F02D         	movff	_minuto,___awdiv@dividend
  5743  001242  C00E  F02E         	movff	_minuto+1,___awdiv@dividend+1
  5744  001246  0E00               	movlw	0
  5745  001248  6E30               	movwf	___awdiv@divisor+1,c
  5746  00124A  0E0A               	movlw	10
  5747  00124C  6E2F               	movwf	___awdiv@divisor,c
  5748  00124E  EC7A  F00D         	call	___awdiv	;wreg free
  5749  001252  502D               	movf	?___awdiv,w,c
  5750  001254  0100               	movlb	0	; () banked
  5751  001256  6FF5               	movwf	_minuto_d& (0+255),b
  5752                           
  5753                           ; BSR set to: 0
  5754                           ;headers\unmc_rtcc_01.h: 83: minuto_u=minuto-minuto_d*10;
  5755  001258  0100               	movlb	0	; () banked
  5756  00125A  51F5               	movf	_minuto_d& (0+255),w,b
  5757  00125C  0D0A               	mullw	10
  5758  00125E  50F3               	movf	prodl,w,c
  5759  001260  0800               	sublw	0
  5760  001262  240D               	addwf	_minuto,w,c
  5761  001264  0100               	movlb	0	; () banked
  5762  001266  6FF6               	movwf	_minuto_u& (0+255),b
  5763                           
  5764                           ; BSR set to: 0
  5765                           ;headers\unmc_rtcc_01.h: 84: RtccTime.f.min =minuto_d*16+minuto_u;
  5766  001268  0100               	movlb	0	; () banked
  5767  00126A  51F5               	movf	_minuto_d& (0+255),w,b
  5768  00126C  0D10               	mullw	16
  5769  00126E  50F3               	movf	prodl,w,c
  5770  001270  0100               	movlb	0	; () banked
  5771  001272  25F6               	addwf	_minuto_u& (0+255),w,b
  5772  001274  6E2B               	movwf	_RtccTime+2,c
  5773                           
  5774                           ; BSR set to: 0
  5775                           ;headers\unmc_rtcc_01.h: 85: hora_d=hora/10;
  5776  001276  C059  F02D         	movff	_hora,___awdiv@dividend
  5777  00127A  C05A  F02E         	movff	_hora+1,___awdiv@dividend+1
  5778  00127E  0E00               	movlw	0
  5779  001280  6E30               	movwf	___awdiv@divisor+1,c
  5780  001282  0E0A               	movlw	10
  5781  001284  6E2F               	movwf	___awdiv@divisor,c
  5782  001286  EC7A  F00D         	call	___awdiv	;wreg free
  5783  00128A  502D               	movf	?___awdiv,w,c
  5784  00128C  0100               	movlb	0	; () banked
  5785  00128E  6FF1               	movwf	_hora_d& (0+255),b
  5786                           
  5787                           ; BSR set to: 0
  5788                           ;headers\unmc_rtcc_01.h: 86: hora_u=hora-hora_d*10;
  5789  001290  0100               	movlb	0	; () banked
  5790  001292  51F1               	movf	_hora_d& (0+255),w,b
  5791  001294  0D0A               	mullw	10
  5792  001296  50F3               	movf	prodl,w,c
  5793  001298  0800               	sublw	0
  5794  00129A  2459               	addwf	_hora,w,c
  5795  00129C  0100               	movlb	0	; () banked
  5796  00129E  6FF2               	movwf	_hora_u& (0+255),b
  5797                           
  5798                           ; BSR set to: 0
  5799                           ;headers\unmc_rtcc_01.h: 87: RtccTime.f.hour=hora_d*16+hora_u;
  5800  0012A0  0100               	movlb	0	; () banked
  5801  0012A2  51F1               	movf	_hora_d& (0+255),w,b
  5802  0012A4  0D10               	mullw	16
  5803  0012A6  50F3               	movf	prodl,w,c
  5804  0012A8  0100               	movlb	0	; () banked
  5805  0012AA  25F2               	addwf	_hora_u& (0+255),w,b
  5806  0012AC  6E2C               	movwf	_RtccTime+3,c
  5807                           
  5808                           ; BSR set to: 0
  5809                           ;headers\unmc_rtcc_01.h: 88: anio_d=anio/10;
  5810  0012AE  C053  F02D         	movff	_anio,___awdiv@dividend
  5811  0012B2  C054  F02E         	movff	_anio+1,___awdiv@dividend+1
  5812  0012B6  0E00               	movlw	0
  5813  0012B8  6E30               	movwf	___awdiv@divisor+1,c
  5814  0012BA  0E0A               	movlw	10
  5815  0012BC  6E2F               	movwf	___awdiv@divisor,c
  5816  0012BE  EC7A  F00D         	call	___awdiv	;wreg free
  5817  0012C2  502D               	movf	?___awdiv,w,c
  5818  0012C4  0100               	movlb	0	; () banked
  5819  0012C6  6FEC               	movwf	_anio_d& (0+255),b
  5820                           
  5821                           ; BSR set to: 0
  5822                           ;headers\unmc_rtcc_01.h: 89: anio_u=anio-anio_d*10;
  5823  0012C8  0100               	movlb	0	; () banked
  5824  0012CA  51EC               	movf	_anio_d& (0+255),w,b
  5825  0012CC  0D0A               	mullw	10
  5826  0012CE  50F3               	movf	prodl,w,c
  5827  0012D0  0800               	sublw	0
  5828  0012D2  2453               	addwf	_anio,w,c
  5829  0012D4  0100               	movlb	0	; () banked
  5830  0012D6  6FED               	movwf	_anio_u& (0+255),b
  5831                           
  5832                           ; BSR set to: 0
  5833                           ;headers\unmc_rtcc_01.h: 90: RtccDate.f.year=anio_d*16+anio_u;
  5834  0012D8  0100               	movlb	0	; () banked
  5835  0012DA  51EC               	movf	_anio_d& (0+255),w,b
  5836  0012DC  0D10               	mullw	16
  5837  0012DE  50F3               	movf	prodl,w,c
  5838  0012E0  0100               	movlb	0	; () banked
  5839  0012E2  25ED               	addwf	_anio_u& (0+255),w,b
  5840  0012E4  6E28               	movwf	_RtccDate+3,c
  5841                           
  5842                           ; BSR set to: 0
  5843                           ;headers\unmc_rtcc_01.h: 91: mes_d=mes/10;
  5844  0012E6  C05B  F02D         	movff	_mes,___awdiv@dividend
  5845  0012EA  C05C  F02E         	movff	_mes+1,___awdiv@dividend+1
  5846  0012EE  0E00               	movlw	0
  5847  0012F0  6E30               	movwf	___awdiv@divisor+1,c
  5848  0012F2  0E0A               	movlw	10
  5849  0012F4  6E2F               	movwf	___awdiv@divisor,c
  5850  0012F6  EC7A  F00D         	call	___awdiv	;wreg free
  5851  0012FA  502D               	movf	?___awdiv,w,c
  5852  0012FC  0100               	movlb	0	; () banked
  5853  0012FE  6FF3               	movwf	_mes_d& (0+255),b
  5854                           
  5855                           ; BSR set to: 0
  5856                           ;headers\unmc_rtcc_01.h: 92: mes_u=mes-mes_d*10;
  5857  001300  0100               	movlb	0	; () banked
  5858  001302  51F3               	movf	_mes_d& (0+255),w,b
  5859  001304  0D0A               	mullw	10
  5860  001306  50F3               	movf	prodl,w,c
  5861  001308  0800               	sublw	0
  5862  00130A  245B               	addwf	_mes,w,c
  5863  00130C  0100               	movlb	0	; () banked
  5864  00130E  6FF4               	movwf	_mes_u& (0+255),b
  5865                           
  5866                           ; BSR set to: 0
  5867                           ;headers\unmc_rtcc_01.h: 93: RtccDate.f.mon=mes_d*16+mes_u;
  5868  001310  0100               	movlb	0	; () banked
  5869  001312  51F3               	movf	_mes_d& (0+255),w,b
  5870  001314  0D10               	mullw	16
  5871  001316  50F3               	movf	prodl,w,c
  5872  001318  0100               	movlb	0	; () banked
  5873  00131A  25F4               	addwf	_mes_u& (0+255),w,b
  5874  00131C  6E27               	movwf	_RtccDate+2,c
  5875                           
  5876                           ; BSR set to: 0
  5877                           ;headers\unmc_rtcc_01.h: 94: fecha_d=dia/10;
  5878  00131E  C055  F02D         	movff	_dia,___awdiv@dividend
  5879  001322  C056  F02E         	movff	_dia+1,___awdiv@dividend+1
  5880  001326  0E00               	movlw	0
  5881  001328  6E30               	movwf	___awdiv@divisor+1,c
  5882  00132A  0E0A               	movlw	10
  5883  00132C  6E2F               	movwf	___awdiv@divisor,c
  5884  00132E  EC7A  F00D         	call	___awdiv	;wreg free
  5885  001332  502D               	movf	?___awdiv,w,c
  5886  001334  0100               	movlb	0	; () banked
  5887  001336  6FEF               	movwf	_fecha_d& (0+255),b
  5888                           
  5889                           ; BSR set to: 0
  5890                           ;headers\unmc_rtcc_01.h: 95: fecha_u=dia-fecha_d*10;
  5891  001338  0100               	movlb	0	; () banked
  5892  00133A  51EF               	movf	_fecha_d& (0+255),w,b
  5893  00133C  0D0A               	mullw	10
  5894  00133E  50F3               	movf	prodl,w,c
  5895  001340  0800               	sublw	0
  5896  001342  2455               	addwf	_dia,w,c
  5897  001344  0100               	movlb	0	; () banked
  5898  001346  6FF0               	movwf	_fecha_u& (0+255),b
  5899                           
  5900                           ; BSR set to: 0
  5901                           ;headers\unmc_rtcc_01.h: 96: RtccDate.f.mday=fecha_d*16+fecha_u;
  5902  001348  0100               	movlb	0	; () banked
  5903  00134A  51EF               	movf	_fecha_d& (0+255),w,b
  5904  00134C  0D10               	mullw	16
  5905  00134E  50F3               	movf	prodl,w,c
  5906  001350  0100               	movlb	0	; () banked
  5907  001352  25F0               	addwf	_fecha_u& (0+255),w,b
  5908  001354  6E26               	movwf	_RtccDate+1,c
  5909                           
  5910                           ; BSR set to: 0
  5911                           ;headers\unmc_rtcc_01.h: 97: dia_semana=diasem;
  5912  001356  C057  F0EE         	movff	_diasem,_dia_semana
  5913                           
  5914                           ; BSR set to: 0
  5915                           ;headers\unmc_rtcc_01.h: 98: RtccDate.f.wday =diasem;
  5916  00135A  C057  F025         	movff	_diasem,_RtccDate
  5917                           
  5918                           ; BSR set to: 0
  5919                           ;headers\unmc_rtcc_01.h: 99: RtccWriteTime(&RtccTime,1);
  5920  00135E  0E29               	movlw	low _RtccTime
  5921  001360  6E2D               	movwf	RtccWriteTime@pTm,c
  5922  001362  0E00               	movlw	high _RtccTime
  5923  001364  6E2E               	movwf	RtccWriteTime@pTm+1,c
  5924  001366  0E01               	movlw	1
  5925  001368  6E2F               	movwf	RtccWriteTime@di,c
  5926  00136A  EC40  F00C         	call	_RtccWriteTime	;wreg free
  5927                           
  5928                           ;headers\unmc_rtcc_01.h: 100: RtccWriteDate(&RtccDate,1);
  5929  00136E  0E25               	movlw	low _RtccDate
  5930  001370  6E2D               	movwf	RtccWriteDate@pDt,c
  5931  001372  0E00               	movlw	high _RtccDate
  5932  001374  6E2E               	movwf	RtccWriteDate@pDt+1,c
  5933  001376  0E01               	movlw	1
  5934  001378  6E2F               	movwf	RtccWriteDate@di,c
  5935  00137A  EC71  F00A         	call	_RtccWriteDate	;wreg free
  5936                           
  5937                           ;headers\unmc_rtcc_01.h: 101: (RTCCFGbits.RTCEN=1);
  5938  00137E  010F               	movlb	15	; () banked
  5939  001380  8F3F               	bsf	63,7,b	;volatile
  5940                           
  5941                           ; BSR set to: 15
  5942  001382  0012               	return		;funcret
  5943  001384                     __end_of_Write_RTC:
  5944                           	opt stack 0
  5945                           tblptru	equ	0xFF8
  5946                           tblptrh	equ	0xFF7
  5947                           tblptrl	equ	0xFF6
  5948                           tablat	equ	0xFF5
  5949                           prodh	equ	0xFF4
  5950                           prodl	equ	0xFF3
  5951                           indf0	equ	0xFEF
  5952                           postinc0	equ	0xFEE
  5953                           fsr0h	equ	0xFEA
  5954                           fsr0l	equ	0xFE9
  5955                           wreg	equ	0xFE8
  5956                           postdec1	equ	0xFE5
  5957                           fsr1l	equ	0xFE1
  5958                           indf2	equ	0xFDF
  5959                           postinc2	equ	0xFDE
  5960                           postdec2	equ	0xFDD
  5961                           fsr2h	equ	0xFDA
  5962                           fsr2l	equ	0xFD9
  5963                           status	equ	0xFD8
  5964                           
  5965 ;; *************** function ___awdiv *****************
  5966 ;; Defined at:
  5967 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
  5968 ;; Parameters:    Size  Location     Type
  5969 ;;  dividend        2    0[COMRAM] int 
  5970 ;;  divisor         2    2[COMRAM] int 
  5971 ;; Auto vars:     Size  Location     Type
  5972 ;;  quotient        2    6[COMRAM] int 
  5973 ;;  sign            1    5[COMRAM] unsigned char 
  5974 ;;  counter         1    4[COMRAM] unsigned char 
  5975 ;; Return value:  Size  Location     Type
  5976 ;;                  2    0[COMRAM] int 
  5977 ;; Registers used:
  5978 ;;		wreg, status,2, status,0
  5979 ;; Tracked objects:
  5980 ;;		On entry : 0/0
  5981 ;;		On exit  : 0/0
  5982 ;;		Unchanged: 0/0
  5983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5984 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5985 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5987 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5988 ;;Total ram usage:        8 bytes
  5989 ;; Hardware stack levels used:    1
  5990 ;; This function calls:
  5991 ;;		Nothing
  5992 ;; This function is called by:
  5993 ;;		_Write_RTC
  5994 ;; This function uses a non-reentrant model
  5995 ;;
  5996                           
  5997                           	psect	text37
  5998  001AF4                     __ptext37:
  5999                           	opt stack 0
  6000  001AF4                     ___awdiv:
  6001                           	opt stack 28
  6002                           
  6003                           ; BSR set to: 15
  6004                           ;incstack = 0
  6005  001AF4  0E00               	movlw	0
  6006  001AF6  6E32               	movwf	___awdiv@sign,c
  6007  001AF8  AE30               	btfss	___awdiv@divisor+1,7,c
  6008  001AFA  D007               	goto	l2494
  6009  001AFC  6C2F               	negf	___awdiv@divisor,c
  6010  001AFE  1E30               	comf	___awdiv@divisor+1,f,c
  6011  001B00  B0D8               	btfsc	status,0,c
  6012  001B02  2A30               	incf	___awdiv@divisor+1,f,c
  6013  001B04  0E01               	movlw	1
  6014  001B06  6E32               	movwf	___awdiv@sign,c
  6015  001B08  D000               	goto	l2494
  6016  001B0A                     l2494:
  6017  001B0A  AE2E               	btfss	___awdiv@dividend+1,7,c
  6018  001B0C  D007               	goto	l2500
  6019  001B0E  6C2D               	negf	___awdiv@dividend,c
  6020  001B10  1E2E               	comf	___awdiv@dividend+1,f,c
  6021  001B12  B0D8               	btfsc	status,0,c
  6022  001B14  2A2E               	incf	___awdiv@dividend+1,f,c
  6023  001B16  0E01               	movlw	1
  6024  001B18  1A32               	xorwf	___awdiv@sign,f,c
  6025  001B1A  D000               	goto	l2500
  6026  001B1C                     l2500:
  6027  001B1C  0E00               	movlw	0
  6028  001B1E  6E34               	movwf	___awdiv@quotient+1,c
  6029  001B20  0E00               	movlw	0
  6030  001B22  6E33               	movwf	___awdiv@quotient,c
  6031  001B24  502F               	movf	___awdiv@divisor,w,c
  6032  001B26  1030               	iorwf	___awdiv@divisor+1,w,c
  6033  001B28  B4D8               	btfsc	status,2,c
  6034  001B2A  D021               	goto	l2522
  6035  001B2C  0E01               	movlw	1
  6036  001B2E  6E31               	movwf	___awdiv@counter,c
  6037  001B30  D005               	goto	l2508
  6038  001B32                     l2506:
  6039  001B32  90D8               	bcf	status,0,c
  6040  001B34  362F               	rlcf	___awdiv@divisor,f,c
  6041  001B36  3630               	rlcf	___awdiv@divisor+1,f,c
  6042  001B38  2A31               	incf	___awdiv@counter,f,c
  6043  001B3A  D000               	goto	l2508
  6044  001B3C                     l2508:
  6045  001B3C  BE30               	btfsc	___awdiv@divisor+1,7,c
  6046  001B3E  D002               	goto	l2510
  6047  001B40  D7F8               	goto	l2506
  6048  001B42  D000               	goto	l2510
  6049  001B44                     l2510:
  6050  001B44  90D8               	bcf	status,0,c
  6051  001B46  3633               	rlcf	___awdiv@quotient,f,c
  6052  001B48  3634               	rlcf	___awdiv@quotient+1,f,c
  6053  001B4A  502F               	movf	___awdiv@divisor,w,c
  6054  001B4C  5C2D               	subwf	___awdiv@dividend,w,c
  6055  001B4E  5030               	movf	___awdiv@divisor+1,w,c
  6056  001B50  582E               	subwfb	___awdiv@dividend+1,w,c
  6057  001B52  A0D8               	btfss	status,0,c
  6058  001B54  D006               	goto	l2518
  6059  001B56  502F               	movf	___awdiv@divisor,w,c
  6060  001B58  5E2D               	subwf	___awdiv@dividend,f,c
  6061  001B5A  5030               	movf	___awdiv@divisor+1,w,c
  6062  001B5C  5A2E               	subwfb	___awdiv@dividend+1,f,c
  6063  001B5E  8033               	bsf	___awdiv@quotient,0,c
  6064  001B60  D000               	goto	l2518
  6065  001B62                     l2518:
  6066  001B62  90D8               	bcf	status,0,c
  6067  001B64  3230               	rrcf	___awdiv@divisor+1,f,c
  6068  001B66  322F               	rrcf	___awdiv@divisor,f,c
  6069  001B68  2E31               	decfsz	___awdiv@counter,f,c
  6070  001B6A  D7EC               	goto	l2510
  6071  001B6C  D000               	goto	l2522
  6072  001B6E                     l2522:
  6073  001B6E  5032               	movf	___awdiv@sign,w,c
  6074  001B70  B4D8               	btfsc	status,2,c
  6075  001B72  D005               	goto	l2526
  6076  001B74  6C33               	negf	___awdiv@quotient,c
  6077  001B76  1E34               	comf	___awdiv@quotient+1,f,c
  6078  001B78  B0D8               	btfsc	status,0,c
  6079  001B7A  2A34               	incf	___awdiv@quotient+1,f,c
  6080  001B7C  D000               	goto	l2526
  6081  001B7E                     l2526:
  6082  001B7E  C033  F02D         	movff	___awdiv@quotient,?___awdiv
  6083  001B82  C034  F02E         	movff	___awdiv@quotient+1,?___awdiv+1
  6084  001B86  0012               	return	
  6085  001B88  0012               	return		;funcret
  6086  001B8A                     __end_of___awdiv:
  6087                           	opt stack 0
  6088                           tblptru	equ	0xFF8
  6089                           tblptrh	equ	0xFF7
  6090                           tblptrl	equ	0xFF6
  6091                           tablat	equ	0xFF5
  6092                           prodh	equ	0xFF4
  6093                           prodl	equ	0xFF3
  6094                           indf0	equ	0xFEF
  6095                           postinc0	equ	0xFEE
  6096                           fsr0h	equ	0xFEA
  6097                           fsr0l	equ	0xFE9
  6098                           wreg	equ	0xFE8
  6099                           postdec1	equ	0xFE5
  6100                           fsr1l	equ	0xFE1
  6101                           indf2	equ	0xFDF
  6102                           postinc2	equ	0xFDE
  6103                           postdec2	equ	0xFDD
  6104                           fsr2h	equ	0xFDA
  6105                           fsr2l	equ	0xFD9
  6106                           status	equ	0xFD8
  6107                           
  6108 ;; *************** function _RtccWriteTime *****************
  6109 ;; Defined at:
  6110 ;;		line 34 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccWriteTime.c"
  6111 ;; Parameters:    Size  Location     Type
  6112 ;;  pTm             2    0[COMRAM] PTR const struct .
  6113 ;;		 -> RtccTime(4), 
  6114 ;;  di              1    2[COMRAM] enum E7121
  6115 ;; Auto vars:     Size  Location     Type
  6116 ;;  tempHourWDay    2    9[COMRAM] struct .
  6117 ;;  tempMinSec      2    7[COMRAM] struct .
  6118 ;;  wasWrEn         1    6[COMRAM] enum E7121
  6119 ;;  wasAlrm         1    5[COMRAM] enum E7121
  6120 ;;  wasOn           1    4[COMRAM] enum E7121
  6121 ;; Return value:  Size  Location     Type
  6122 ;;                  1    wreg      enum E7337
  6123 ;; Registers used:
  6124 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6125 ;; Tracked objects:
  6126 ;;		On entry : 0/0
  6127 ;;		On exit  : 0/0
  6128 ;;		Unchanged: 0/0
  6129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6130 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6131 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6132 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6133 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6134 ;;Total ram usage:       11 bytes
  6135 ;; Hardware stack levels used:    1
  6136 ;; Hardware stack levels required when called:    1
  6137 ;; This function calls:
  6138 ;;		_RtccWrOn
  6139 ;; This function is called by:
  6140 ;;		_Write_RTC
  6141 ;; This function uses a non-reentrant model
  6142 ;;
  6143                           
  6144                           	psect	text38
  6145  001880                     __ptext38:
  6146                           	opt stack 0
  6147  001880                     _RtccWriteTime:
  6148                           	opt stack 27
  6149                           
  6150                           ;incstack = 0
  6151  001880  0E00               	movlw	0
  6152  001882  6E32               	movwf	RtccWriteTime@wasAlrm,c
  6153  001884  EE20 F002          	lfsr	2,2
  6154  001888  502D               	movf	RtccWriteTime@pTm,w,c
  6155  00188A  26D9               	addwf	fsr2l,f,c
  6156  00188C  502E               	movf	RtccWriteTime@pTm+1,w,c
  6157  00188E  22DA               	addwfc	fsr2h,f,c
  6158  001890  0E5A               	movlw	90
  6159  001892  60DF               	cpfslt	indf2,c
  6160  001894  0012               	return	
  6161  001896  EE20 F001          	lfsr	2,1
  6162  00189A  502D               	movf	RtccWriteTime@pTm,w,c
  6163  00189C  26D9               	addwf	fsr2l,f,c
  6164  00189E  502E               	movf	RtccWriteTime@pTm+1,w,c
  6165  0018A0  22DA               	addwfc	fsr2h,f,c
  6166  0018A2  0E5A               	movlw	90
  6167  0018A4  60DF               	cpfslt	indf2,c
  6168  0018A6  0012               	return	
  6169  0018A8  EE20 F003          	lfsr	2,3
  6170  0018AC  502D               	movf	RtccWriteTime@pTm,w,c
  6171  0018AE  26D9               	addwf	fsr2l,f,c
  6172  0018B0  502E               	movf	RtccWriteTime@pTm+1,w,c
  6173  0018B2  22DA               	addwfc	fsr2h,f,c
  6174  0018B4  0E24               	movlw	36
  6175  0018B6  64DF               	cpfsgt	indf2,c
  6176  0018B8  D002               	goto	l2286
  6177  0018BA  0012               	return	
  6178                           
  6179                           ;	Return value of _RtccWriteTime is never used
  6180  0018BC  0012               	return	
  6181  0018BE                     l2286:
  6182  0018BE  EE20 F002          	lfsr	2,2
  6183  0018C2  502D               	movf	RtccWriteTime@pTm,w,c
  6184  0018C4  26D9               	addwf	fsr2l,f,c
  6185  0018C6  502E               	movf	RtccWriteTime@pTm+1,w,c
  6186  0018C8  22DA               	addwfc	fsr2h,f,c
  6187  0018CA  50DF               	movf	indf2,w,c
  6188  0018CC  6E35               	movwf	RtccWriteTime@tempMinSec+1,c
  6189  0018CE  EE20 F001          	lfsr	2,1
  6190  0018D2  502D               	movf	RtccWriteTime@pTm,w,c
  6191  0018D4  26D9               	addwf	fsr2l,f,c
  6192  0018D6  502E               	movf	RtccWriteTime@pTm+1,w,c
  6193  0018D8  22DA               	addwfc	fsr2h,f,c
  6194  0018DA  50DF               	movf	indf2,w,c
  6195  0018DC  6E34               	movwf	RtccWriteTime@tempMinSec,c
  6196  0018DE  502F               	movf	RtccWriteTime@di,w,c
  6197  0018E0  B4D8               	btfsc	status,2,c
  6198  0018E2  D002               	goto	l2292
  6199  0018E4  9CF2               	bcf	intcon,6,c	;volatile
  6200  0018E6  D000               	goto	l2292
  6201  0018E8                     l2292:
  6202  0018E8  0E00               	movlw	0
  6203  0018EA  BB3F               	btfsc	63,5,b	;volatile
  6204  0018EC  0E01               	movlw	1
  6205  0018EE  6E33               	movwf	RtccWriteTime@wasWrEn,c
  6206  0018F0  5033               	movf	RtccWriteTime@wasWrEn,w,c
  6207  0018F2  A4D8               	btfss	status,2,c
  6208  0018F4  D003               	goto	l2296
  6209  0018F6  EC14  F012         	call	_RtccWrOn	;wreg free
  6210  0018FA  D000               	goto	l2296
  6211  0018FC                     l2296:
  6212  0018FC  0E00               	movlw	0
  6213  0018FE  BF3F               	btfsc	63,7,b	;volatile
  6214  001900  0E01               	movlw	1
  6215  001902  6E31               	movwf	RtccWriteTime@wasOn,c
  6216  001904  5031               	movf	RtccWriteTime@wasOn,w,c
  6217  001906  B4D8               	btfsc	status,2,c
  6218  001908  D007               	goto	l2302
  6219  00190A  0E00               	movlw	0
  6220  00190C  BE91               	btfsc	3985,7,c	;volatile
  6221  00190E  0E01               	movlw	1
  6222  001910  6E32               	movwf	RtccWriteTime@wasAlrm,c
  6223  001912  010F               	movlb	15	; () banked
  6224  001914  9F3F               	bcf	63,7,b	;volatile
  6225  001916  D000               	goto	l2302
  6226  001918                     l2302:
  6227  001918  0EFC               	movlw	252
  6228  00191A  010F               	movlb	15	; () banked
  6229  00191C  173F               	andwf	63,f,b	;volatile
  6230  00191E  010F               	movlb	15	; () banked
  6231  001920  813F               	bsf	63,0,b	;volatile
  6232                           
  6233                           ; BSR set to: 15
  6234  001922  CF98 F036          	movff	3992,RtccWriteTime@tempHourWDay	;volatile
  6235                           
  6236                           ; BSR set to: 15
  6237  001926  CF99 F037          	movff	3993,RtccWriteTime@tempHourWDay+1	;volatile
  6238                           
  6239                           ; BSR set to: 15
  6240  00192A  EE20 F003          	lfsr	2,3
  6241  00192E  502D               	movf	RtccWriteTime@pTm,w,c
  6242  001930  26D9               	addwf	fsr2l,f,c
  6243  001932  502E               	movf	RtccWriteTime@pTm+1,w,c
  6244  001934  22DA               	addwfc	fsr2h,f,c
  6245  001936  50DF               	movf	indf2,w,c
  6246  001938  6E36               	movwf	RtccWriteTime@tempHourWDay,c
  6247                           
  6248                           ; BSR set to: 15
  6249  00193A  0EFC               	movlw	252
  6250  00193C  010F               	movlb	15	; () banked
  6251  00193E  173F               	andwf	63,f,b	;volatile
  6252                           
  6253                           ; BSR set to: 15
  6254  001940  010F               	movlb	15	; () banked
  6255  001942  813F               	bsf	63,0,b	;volatile
  6256                           
  6257                           ; BSR set to: 15
  6258  001944  C036  FF98         	movff	RtccWriteTime@tempHourWDay,3992	;volatile
  6259                           
  6260                           ; BSR set to: 15
  6261  001948  C037  FF99         	movff	RtccWriteTime@tempHourWDay+1,3993	;volatile
  6262                           
  6263                           ; BSR set to: 15
  6264  00194C  C034  FF98         	movff	RtccWriteTime@tempMinSec,3992	;volatile
  6265                           
  6266                           ; BSR set to: 15
  6267  001950  C035  FF99         	movff	RtccWriteTime@tempMinSec+1,3993	;volatile
  6268                           
  6269                           ; BSR set to: 15
  6270  001954  5031               	movf	RtccWriteTime@wasOn,w,c
  6271  001956  B4D8               	btfsc	status,2,c
  6272  001958  D00D               	goto	l2334
  6273                           
  6274                           ; BSR set to: 15
  6275  00195A  010F               	movlb	15	; () banked
  6276  00195C  8F3F               	bsf	63,7,b	;volatile
  6277                           
  6278                           ; BSR set to: 15
  6279  00195E  5032               	movf	RtccWriteTime@wasAlrm,w,c
  6280  001960  B4D8               	btfsc	status,2,c
  6281  001962  D002               	goto	l2330
  6282                           
  6283                           ; BSR set to: 15
  6284  001964  8E91               	bsf	3985,7,c	;volatile
  6285  001966  D000               	goto	l2330
  6286  001968                     l2330:
  6287                           
  6288                           ; BSR set to: 15
  6289  001968  5033               	movf	RtccWriteTime@wasWrEn,w,c
  6290  00196A  B4D8               	btfsc	status,2,c
  6291  00196C  D009               	goto	l2338
  6292                           
  6293                           ; BSR set to: 15
  6294  00196E  EC14  F012         	call	_RtccWrOn	;wreg free
  6295  001972  D006               	goto	l2338
  6296  001974                     l2334:
  6297  001974  5033               	movf	RtccWriteTime@wasWrEn,w,c
  6298  001976  A4D8               	btfss	status,2,c
  6299  001978  D003               	goto	l2338
  6300  00197A  010F               	movlb	15	; () banked
  6301  00197C  9B3F               	bcf	63,5,b	;volatile
  6302                           
  6303                           ; BSR set to: 15
  6304  00197E  D000               	goto	l2338
  6305  001980                     l2338:
  6306  001980  502F               	movf	RtccWriteTime@di,w,c
  6307  001982  B4D8               	btfsc	status,2,c
  6308  001984  0012               	return	
  6309  001986  8CF2               	bsf	intcon,6,c	;volatile
  6310  001988  0012               	return	
  6311                           
  6312                           ;	Return value of _RtccWriteTime is never used
  6313  00198A  0012               	return		;funcret
  6314  00198C                     __end_of_RtccWriteTime:
  6315                           	opt stack 0
  6316                           tblptru	equ	0xFF8
  6317                           tblptrh	equ	0xFF7
  6318                           tblptrl	equ	0xFF6
  6319                           tablat	equ	0xFF5
  6320                           prodh	equ	0xFF4
  6321                           prodl	equ	0xFF3
  6322                           intcon	equ	0xFF2
  6323                           indf0	equ	0xFEF
  6324                           postinc0	equ	0xFEE
  6325                           fsr0h	equ	0xFEA
  6326                           fsr0l	equ	0xFE9
  6327                           wreg	equ	0xFE8
  6328                           postdec1	equ	0xFE5
  6329                           fsr1l	equ	0xFE1
  6330                           indf2	equ	0xFDF
  6331                           postinc2	equ	0xFDE
  6332                           postdec2	equ	0xFDD
  6333                           fsr2h	equ	0xFDA
  6334                           fsr2l	equ	0xFD9
  6335                           status	equ	0xFD8
  6336                           
  6337 ;; *************** function _RtccWriteDate *****************
  6338 ;; Defined at:
  6339 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccWriteDate.c"
  6340 ;; Parameters:    Size  Location     Type
  6341 ;;  pDt             2    0[COMRAM] PTR const struct .
  6342 ;;		 -> RtccDate(4), 
  6343 ;;  di              1    2[COMRAM] enum E7121
  6344 ;; Auto vars:     Size  Location     Type
  6345 ;;  tempHourWDay    2   11[COMRAM] struct .
  6346 ;;  tempDayMonth    2    9[COMRAM] struct .
  6347 ;;  tempYear        2    6[COMRAM] struct .
  6348 ;;  wasWrEn         1    8[COMRAM] enum E7121
  6349 ;;  wasAlrm         1    5[COMRAM] enum E7121
  6350 ;;  wasOn           1    4[COMRAM] enum E7121
  6351 ;; Return value:  Size  Location     Type
  6352 ;;                  1    wreg      enum E7337
  6353 ;; Registers used:
  6354 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6355 ;; Tracked objects:
  6356 ;;		On entry : 0/0
  6357 ;;		On exit  : 0/0
  6358 ;;		Unchanged: 0/0
  6359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6360 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6361 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6362 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6363 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6364 ;;Total ram usage:       13 bytes
  6365 ;; Hardware stack levels used:    1
  6366 ;; Hardware stack levels required when called:    1
  6367 ;; This function calls:
  6368 ;;		_RtccWrOn
  6369 ;; This function is called by:
  6370 ;;		_Write_RTC
  6371 ;; This function uses a non-reentrant model
  6372 ;;
  6373                           
  6374                           	psect	text39
  6375  0014E2                     __ptext39:
  6376                           	opt stack 0
  6377  0014E2                     _RtccWriteDate:
  6378                           	opt stack 27
  6379                           
  6380                           ;incstack = 0
  6381  0014E2  0E00               	movlw	0
  6382  0014E4  6E32               	movwf	RtccWriteDate@wasAlrm,c
  6383  0014E6  EE20 F002          	lfsr	2,2
  6384  0014EA  502D               	movf	RtccWriteDate@pDt,w,c
  6385  0014EC  26D9               	addwf	fsr2l,f,c
  6386  0014EE  502E               	movf	RtccWriteDate@pDt+1,w,c
  6387  0014F0  22DA               	addwfc	fsr2h,f,c
  6388  0014F2  0E13               	movlw	19
  6389  0014F4  60DF               	cpfslt	indf2,c
  6390  0014F6  0012               	return	
  6391  0014F8  EE20 F002          	lfsr	2,2
  6392  0014FC  502D               	movf	RtccWriteDate@pDt,w,c
  6393  0014FE  26D9               	addwf	fsr2l,f,c
  6394  001500  502E               	movf	RtccWriteDate@pDt+1,w,c
  6395  001502  22DA               	addwfc	fsr2h,f,c
  6396  001504  50DF               	movf	indf2,w,c
  6397  001506  B4D8               	btfsc	status,2,c
  6398  001508  0012               	return	
  6399  00150A  EE20 F001          	lfsr	2,1
  6400  00150E  502D               	movf	RtccWriteDate@pDt,w,c
  6401  001510  26D9               	addwf	fsr2l,f,c
  6402  001512  502E               	movf	RtccWriteDate@pDt+1,w,c
  6403  001514  22DA               	addwfc	fsr2h,f,c
  6404  001516  0E32               	movlw	50
  6405  001518  60DF               	cpfslt	indf2,c
  6406  00151A  0012               	return	
  6407  00151C  EE20 F001          	lfsr	2,1
  6408  001520  502D               	movf	RtccWriteDate@pDt,w,c
  6409  001522  26D9               	addwf	fsr2l,f,c
  6410  001524  502E               	movf	RtccWriteDate@pDt+1,w,c
  6411  001526  22DA               	addwfc	fsr2h,f,c
  6412  001528  50DF               	movf	indf2,w,c
  6413  00152A  B4D8               	btfsc	status,2,c
  6414  00152C  0012               	return	
  6415  00152E  EE20 F003          	lfsr	2,3
  6416  001532  502D               	movf	RtccWriteDate@pDt,w,c
  6417  001534  26D9               	addwf	fsr2l,f,c
  6418  001536  502E               	movf	RtccWriteDate@pDt+1,w,c
  6419  001538  22DA               	addwfc	fsr2h,f,c
  6420  00153A  0E99               	movlw	153
  6421  00153C  64DF               	cpfsgt	indf2,c
  6422  00153E  D002               	goto	l2354
  6423  001540  0012               	return	
  6424                           
  6425                           ;	Return value of _RtccWriteDate is never used
  6426  001542  0012               	return	
  6427  001544                     l2354:
  6428  001544  EE20 F003          	lfsr	2,3
  6429  001548  502D               	movf	RtccWriteDate@pDt,w,c
  6430  00154A  26D9               	addwf	fsr2l,f,c
  6431  00154C  502E               	movf	RtccWriteDate@pDt+1,w,c
  6432  00154E  22DA               	addwfc	fsr2h,f,c
  6433  001550  50DF               	movf	indf2,w,c
  6434  001552  6E33               	movwf	RtccWriteDate@tempYear,c
  6435  001554  EE20 F001          	lfsr	2,1
  6436  001558  502D               	movf	RtccWriteDate@pDt,w,c
  6437  00155A  26D9               	addwf	fsr2l,f,c
  6438  00155C  502E               	movf	RtccWriteDate@pDt+1,w,c
  6439  00155E  22DA               	addwfc	fsr2h,f,c
  6440  001560  50DF               	movf	indf2,w,c
  6441  001562  6E36               	movwf	RtccWriteDate@tempDayMonth,c
  6442  001564  EE20 F002          	lfsr	2,2
  6443  001568  502D               	movf	RtccWriteDate@pDt,w,c
  6444  00156A  26D9               	addwf	fsr2l,f,c
  6445  00156C  502E               	movf	RtccWriteDate@pDt+1,w,c
  6446  00156E  22DA               	addwfc	fsr2h,f,c
  6447  001570  50DF               	movf	indf2,w,c
  6448  001572  6E37               	movwf	RtccWriteDate@tempDayMonth+1,c
  6449  001574  502F               	movf	RtccWriteDate@di,w,c
  6450  001576  B4D8               	btfsc	status,2,c
  6451  001578  D002               	goto	l2360
  6452  00157A  9CF2               	bcf	intcon,6,c	;volatile
  6453  00157C  D000               	goto	l2360
  6454  00157E                     l2360:
  6455  00157E  0E00               	movlw	0
  6456  001580  BB3F               	btfsc	63,5,b	;volatile
  6457  001582  0E01               	movlw	1
  6458  001584  6E35               	movwf	RtccWriteDate@wasWrEn,c
  6459  001586  5035               	movf	RtccWriteDate@wasWrEn,w,c
  6460  001588  A4D8               	btfss	status,2,c
  6461  00158A  D003               	goto	l2364
  6462  00158C  EC14  F012         	call	_RtccWrOn	;wreg free
  6463  001590  D000               	goto	l2364
  6464  001592                     l2364:
  6465  001592  0E00               	movlw	0
  6466  001594  BF3F               	btfsc	63,7,b	;volatile
  6467  001596  0E01               	movlw	1
  6468  001598  6E31               	movwf	RtccWriteDate@wasOn,c
  6469  00159A  5031               	movf	RtccWriteDate@wasOn,w,c
  6470  00159C  B4D8               	btfsc	status,2,c
  6471  00159E  D007               	goto	l2370
  6472  0015A0  0E00               	movlw	0
  6473  0015A2  BE91               	btfsc	3985,7,c	;volatile
  6474  0015A4  0E01               	movlw	1
  6475  0015A6  6E32               	movwf	RtccWriteDate@wasAlrm,c
  6476  0015A8  010F               	movlb	15	; () banked
  6477  0015AA  9F3F               	bcf	63,7,b	;volatile
  6478  0015AC  D000               	goto	l2370
  6479  0015AE                     l2370:
  6480  0015AE  0EFC               	movlw	252
  6481  0015B0  010F               	movlb	15	; () banked
  6482  0015B2  173F               	andwf	63,f,b	;volatile
  6483  0015B4  010F               	movlb	15	; () banked
  6484  0015B6  813F               	bsf	63,0,b	;volatile
  6485                           
  6486                           ; BSR set to: 15
  6487  0015B8  CF98 F038          	movff	3992,RtccWriteDate@tempHourWDay	;volatile
  6488                           
  6489                           ; BSR set to: 15
  6490  0015BC  CF99 F039          	movff	3993,RtccWriteDate@tempHourWDay+1	;volatile
  6491                           
  6492                           ; BSR set to: 15
  6493  0015C0  C02D  FFD9         	movff	RtccWriteDate@pDt,fsr2l
  6494  0015C4  C02E  FFDA         	movff	RtccWriteDate@pDt+1,fsr2h
  6495  0015C8  50DF               	movf	indf2,w,c
  6496  0015CA  6E39               	movwf	RtccWriteDate@tempHourWDay+1,c
  6497                           
  6498                           ; BSR set to: 15
  6499  0015CC  0EFC               	movlw	252
  6500  0015CE  010F               	movlb	15	; () banked
  6501  0015D0  173F               	andwf	63,f,b	;volatile
  6502                           
  6503                           ; BSR set to: 15
  6504  0015D2  0E03               	movlw	3
  6505  0015D4  010F               	movlb	15	; () banked
  6506  0015D6  133F               	iorwf	63,f,b	;volatile
  6507                           
  6508                           ; BSR set to: 15
  6509  0015D8  C033  FF98         	movff	RtccWriteDate@tempYear,3992	;volatile
  6510                           
  6511                           ; BSR set to: 15
  6512  0015DC  C034  FF99         	movff	RtccWriteDate@tempYear+1,3993	;volatile
  6513                           
  6514                           ; BSR set to: 15
  6515  0015E0  C036  FF98         	movff	RtccWriteDate@tempDayMonth,3992	;volatile
  6516                           
  6517                           ; BSR set to: 15
  6518  0015E4  C037  FF99         	movff	RtccWriteDate@tempDayMonth+1,3993	;volatile
  6519                           
  6520                           ; BSR set to: 15
  6521  0015E8  C038  FF98         	movff	RtccWriteDate@tempHourWDay,3992	;volatile
  6522                           
  6523                           ; BSR set to: 15
  6524  0015EC  C039  FF99         	movff	RtccWriteDate@tempHourWDay+1,3993	;volatile
  6525                           
  6526                           ; BSR set to: 15
  6527  0015F0  5031               	movf	RtccWriteDate@wasOn,w,c
  6528  0015F2  B4D8               	btfsc	status,2,c
  6529  0015F4  D00D               	goto	l2406
  6530                           
  6531                           ; BSR set to: 15
  6532  0015F6  010F               	movlb	15	; () banked
  6533  0015F8  8F3F               	bsf	63,7,b	;volatile
  6534                           
  6535                           ; BSR set to: 15
  6536  0015FA  5032               	movf	RtccWriteDate@wasAlrm,w,c
  6537  0015FC  B4D8               	btfsc	status,2,c
  6538  0015FE  D002               	goto	l2402
  6539                           
  6540                           ; BSR set to: 15
  6541  001600  8E91               	bsf	3985,7,c	;volatile
  6542  001602  D000               	goto	l2402
  6543  001604                     l2402:
  6544                           
  6545                           ; BSR set to: 15
  6546  001604  5035               	movf	RtccWriteDate@wasWrEn,w,c
  6547  001606  B4D8               	btfsc	status,2,c
  6548  001608  D009               	goto	l2410
  6549                           
  6550                           ; BSR set to: 15
  6551  00160A  EC14  F012         	call	_RtccWrOn	;wreg free
  6552  00160E  D006               	goto	l2410
  6553  001610                     l2406:
  6554  001610  5035               	movf	RtccWriteDate@wasWrEn,w,c
  6555  001612  A4D8               	btfss	status,2,c
  6556  001614  D003               	goto	l2410
  6557  001616  010F               	movlb	15	; () banked
  6558  001618  9B3F               	bcf	63,5,b	;volatile
  6559                           
  6560                           ; BSR set to: 15
  6561  00161A  D000               	goto	l2410
  6562  00161C                     l2410:
  6563  00161C  502F               	movf	RtccWriteDate@di,w,c
  6564  00161E  B4D8               	btfsc	status,2,c
  6565  001620  0012               	return	
  6566  001622  9CF2               	bcf	intcon,6,c	;volatile
  6567  001624  0012               	return	
  6568                           
  6569                           ;	Return value of _RtccWriteDate is never used
  6570  001626  0012               	return		;funcret
  6571  001628                     __end_of_RtccWriteDate:
  6572                           	opt stack 0
  6573                           tblptru	equ	0xFF8
  6574                           tblptrh	equ	0xFF7
  6575                           tblptrl	equ	0xFF6
  6576                           tablat	equ	0xFF5
  6577                           prodh	equ	0xFF4
  6578                           prodl	equ	0xFF3
  6579                           intcon	equ	0xFF2
  6580                           indf0	equ	0xFEF
  6581                           postinc0	equ	0xFEE
  6582                           fsr0h	equ	0xFEA
  6583                           fsr0l	equ	0xFE9
  6584                           wreg	equ	0xFE8
  6585                           postdec1	equ	0xFE5
  6586                           fsr1l	equ	0xFE1
  6587                           indf2	equ	0xFDF
  6588                           postinc2	equ	0xFDE
  6589                           postdec2	equ	0xFDD
  6590                           fsr2h	equ	0xFDA
  6591                           fsr2l	equ	0xFD9
  6592                           status	equ	0xFD8
  6593                           
  6594 ;; *************** function _RtccWrOn *****************
  6595 ;; Defined at:
  6596 ;;		line 21 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccWrOn.c"
  6597 ;; Parameters:    Size  Location     Type
  6598 ;;		None
  6599 ;; Auto vars:     Size  Location     Type
  6600 ;;  data            2    0        unsigned int 
  6601 ;; Return value:  Size  Location     Type
  6602 ;;		None               void
  6603 ;; Registers used:
  6604 ;;		wreg, status,2
  6605 ;; Tracked objects:
  6606 ;;		On entry : 0/0
  6607 ;;		On exit  : 0/0
  6608 ;;		Unchanged: 0/0
  6609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6613 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6614 ;;Total ram usage:        0 bytes
  6615 ;; Hardware stack levels used:    1
  6616 ;; This function calls:
  6617 ;;		Nothing
  6618 ;; This function is called by:
  6619 ;;		_Write_RTC
  6620 ;;		_RtccWriteDate
  6621 ;;		_RtccWriteTime
  6622 ;; This function uses a non-reentrant model
  6623 ;;
  6624                           
  6625                           	psect	text40
  6626  002428                     __ptext40:
  6627                           	opt stack 0
  6628  002428                     _RtccWrOn:
  6629                           	opt stack 27
  6630                           
  6631                           ;incstack = 0
  6632  002428  9CF2               	bcf	intcon,6,c	;volatile
  6633  00242A  0E55               	movlw	85
  6634  00242C  6EA7               	movwf	4007,c	;volatile
  6635  00242E  0EAA               	movlw	170
  6636  002430  6EA7               	movwf	4007,c	;volatile
  6637  002432  010F               	movlb	15	; () banked
  6638  002434  8B3F               	bsf	63,5,b	;volatile
  6639                           
  6640                           ; BSR set to: 15
  6641  002436  8CF2               	bsf	intcon,6,c	;volatile
  6642                           
  6643                           ; BSR set to: 15
  6644  002438  0012               	return		;funcret
  6645  00243A                     __end_of_RtccWrOn:
  6646                           	opt stack 0
  6647                           tblptru	equ	0xFF8
  6648                           tblptrh	equ	0xFF7
  6649                           tblptrl	equ	0xFF6
  6650                           tablat	equ	0xFF5
  6651                           prodh	equ	0xFF4
  6652                           prodl	equ	0xFF3
  6653                           intcon	equ	0xFF2
  6654                           indf0	equ	0xFEF
  6655                           postinc0	equ	0xFEE
  6656                           fsr0h	equ	0xFEA
  6657                           fsr0l	equ	0xFE9
  6658                           wreg	equ	0xFE8
  6659                           postdec1	equ	0xFE5
  6660                           fsr1l	equ	0xFE1
  6661                           indf2	equ	0xFDF
  6662                           postinc2	equ	0xFDE
  6663                           postdec2	equ	0xFDD
  6664                           fsr2h	equ	0xFDA
  6665                           fsr2l	equ	0xFD9
  6666                           status	equ	0xFD8
  6667                           tblptru	equ	0xFF8
  6668                           tblptrh	equ	0xFF7
  6669                           tblptrl	equ	0xFF6
  6670                           tablat	equ	0xFF5
  6671                           prodh	equ	0xFF4
  6672                           prodl	equ	0xFF3
  6673                           intcon	equ	0xFF2
  6674                           indf0	equ	0xFEF
  6675                           postinc0	equ	0xFEE
  6676                           fsr0h	equ	0xFEA
  6677                           fsr0l	equ	0xFE9
  6678                           wreg	equ	0xFE8
  6679                           postdec1	equ	0xFE5
  6680                           fsr1l	equ	0xFE1
  6681                           indf2	equ	0xFDF
  6682                           postinc2	equ	0xFDE
  6683                           postdec2	equ	0xFDD
  6684                           fsr2h	equ	0xFDA
  6685                           fsr2l	equ	0xFD9
  6686                           status	equ	0xFD8
  6687                           
  6688                           	psect	rparam
  6689  0000                     tblptru	equ	0xFF8
  6690                           tblptrh	equ	0xFF7
  6691                           tblptrl	equ	0xFF6
  6692                           tablat	equ	0xFF5
  6693                           prodh	equ	0xFF4
  6694                           prodl	equ	0xFF3
  6695                           intcon	equ	0xFF2
  6696                           indf0	equ	0xFEF
  6697                           postinc0	equ	0xFEE
  6698                           fsr0h	equ	0xFEA
  6699                           fsr0l	equ	0xFE9
  6700                           wreg	equ	0xFE8
  6701                           postdec1	equ	0xFE5
  6702                           fsr1l	equ	0xFE1
  6703                           indf2	equ	0xFDF
  6704                           postinc2	equ	0xFDE
  6705                           postdec2	equ	0xFDD
  6706                           fsr2h	equ	0xFDA
  6707                           fsr2l	equ	0xFD9
  6708                           status	equ	0xFD8


Data Sizes:
    Strings     139
    Constant    14
    Data        16
    BSS         184
    Persistent  13
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     38      95
    BANK0           160      0     157
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          192      0       0

Pointer List with Targets:

    RtccWriteTime@pTm	PTR const struct . size(2) Largest target is 4
		 -> RtccTime(COMRAM[4]), 

    RtccWriteDate@pDt	PTR const struct . size(2) Largest target is 4
		 -> RtccDate(COMRAM[4]), 

    RtccReadTime@pTm	PTR struct . size(2) Largest target is 4
		 -> RtccTime(COMRAM[4]), 

    RtccReadDate@pDt	PTR struct . size(2) Largest target is 4
		 -> RtccDate(COMRAM[4]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_11(CODE[14]), STR_10(CODE[16]), STR_9(CODE[11]), STR_1(CODE[15]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 20
		 -> buffer2(BANK0[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    lcd_putrs@ptr	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_8(CODE[13]), STR_7(CODE[10]), STR_6(CODE[14]), STR_5(CODE[14]), 
		 -> STR_4(CODE[14]), STR_3(CODE[17]), STR_2(CODE[15]), buffer2(BANK0[20]), 


Critical Paths under _main in COMRAM

    _main->_almacenarTiempo
    _vueltasAlmacenadasAtras->_mostrarVuelta
    _vueltasAlmacenadasAdelante->_mostrarVuelta
    _mostrarVuelta->_sprintf
    _caratulaCronometro->_lcd_putrs
    _Read_RTC->_RtccReadDate
    _Read_RTC->_RtccReadTime
    _almacenarTiempoParcial->_CargoVueltas
    _clickIniciar->_lcd_putrs
    _almacenarTiempo->_mostrarMejorVuelta
    _mostrarReloj->_sprintf
    _mostrarMejorVuelta->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _lcd_putrs->_lcd_putc
    _lcd_putc->_lcd_gotoxy
    _lcd_gotoxy->_lcd_send_byte
    _lcd_init->_lcd_send_byte
    _lcd_comand->_lcd_send_byte
    _lcd_send_byte->_lcd_send_nibble
    _Write_RTC->_RtccWriteDate

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   94790
                              _Setup
                    _almacenarTiempo
                       _clickIniciar
             _continuarCronometrando
                      _cronometrando
               _deteniendoCronometro
              _inicializarCronometro
                    _mostrarCaratula
                      _tiempoParcial
         _vueltasAlmacenadasAdelante
            _vueltasAlmacenadasAtras
 ---------------------------------------------------------------------------------
 (1) _vueltasAlmacenadasAtras                              1     1      0   14826
                                             36 COMRAM     1     1      0
                      _mostrarVuelta
 ---------------------------------------------------------------------------------
 (1) _vueltasAlmacenadasAdelante                           1     1      0   14826
                                             36 COMRAM     1     1      0
                      _mostrarVuelta
 ---------------------------------------------------------------------------------
 (2) _mostrarVuelta                                        1     1      0   14826
                                             35 COMRAM     1     1      0
                         _lcd_comand
                         _lcd_gotoxy
                          _lcd_putrs
                       _mostrarReloj
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _tiempoParcial                                        0     0      0    7413
                       _mostrarReloj
 ---------------------------------------------------------------------------------
 (1) _mostrarCaratula                                      0     0      0    4985
                 _caratulaCronometro
 ---------------------------------------------------------------------------------
 (2) _caratulaCronometro                                   0     0      0    4985
                         _lcd_comand
                         _lcd_gotoxy
                          _lcd_putrs
 ---------------------------------------------------------------------------------
 (1) _inicializarCronometro                                1     1      0    7262
                                             13 COMRAM     1     1      0
                          _Write_RTC
                         _lcd_comand
                         _lcd_gotoxy
                          _lcd_putrs
 ---------------------------------------------------------------------------------
 (1) _deteniendoCronometro                                 1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _cronometrando                                        0     0      0    8381
                           _Read_RTC
                       _mostrarReloj
 ---------------------------------------------------------------------------------
 (2) _Read_RTC                                             0     0      0     968
                       _RtccReadDate
                       _RtccReadTime
 ---------------------------------------------------------------------------------
 (3) _RtccReadTime                                        18    16      2     437
                                              0 COMRAM    18    16      2
 ---------------------------------------------------------------------------------
 (3) _RtccReadDate                                        18    16      2     531
                                              0 COMRAM    18    16      2
 ---------------------------------------------------------------------------------
 (1) _continuarCronometrando                               1     1      0    7350
                                             13 COMRAM     1     1      0
                          _Write_RTC
             _almacenarTiempoParcial
                         _lcd_gotoxy
                          _lcd_putrs
 ---------------------------------------------------------------------------------
 (2) _almacenarTiempoParcial                               4     4      0     734
                                              8 COMRAM     4     4      0
                       _CargoVueltas
                 _verificarNroVuelta
 ---------------------------------------------------------------------------------
 (1) _clickIniciar                                         1     1      0    4985
                                             10 COMRAM     1     1      0
                         _lcd_comand
                         _lcd_gotoxy
                          _lcd_putrs
 ---------------------------------------------------------------------------------
 (1) _almacenarTiempo                                      1     1      0   20998
                                             37 COMRAM     1     1      0
                       _CargoVueltas
                             ___wmul
                         _lcd_comand
                         _lcd_gotoxy
                          _lcd_putrs
                 _mostrarMejorVuelta
                       _mostrarReloj
                 _verificarNroVuelta
 ---------------------------------------------------------------------------------
 (3) _verificarNroVuelta                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _mostrarReloj                                         0     0      0    7413
                         _lcd_comand
                         _lcd_gotoxy
                          _lcd_putrs
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _mostrarMejorVuelta                                   2     2      0    7413
                                             35 COMRAM     2     2      0
                         _lcd_comand
                         _lcd_gotoxy
                          _lcd_putrs
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             32    22     10    2428
                                             12 COMRAM    23    13     10
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     543
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     287
                                              7 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     290
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (4) _lcd_putrs                                            2     0      2    2878
                                              8 COMRAM     2     0      2
                           _lcd_putc
 ---------------------------------------------------------------------------------
 (5) _lcd_putc                                             1     1      0    2129
                                              7 COMRAM     1     1      0
                         _lcd_gotoxy
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (6) _lcd_gotoxy                                           3     2      1    1461
                                              4 COMRAM     3     2      1
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (3) _CargoVueltas                                         8     0      8     644
                                              0 COMRAM     8     0      8
 ---------------------------------------------------------------------------------
 (1) _Setup                                                0     0      0    3764
                          _Write_RTC
                         _lcd_comand
                           _lcd_init
 ---------------------------------------------------------------------------------
 (2) _lcd_init                                             1     1      0     841
                                              4 COMRAM     1     1      0
                        _Delay1KTCYx
                      _lcd_send_byte
                    _lcd_send_nibble
 ---------------------------------------------------------------------------------
 (3) _Delay1KTCYx                                          1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _lcd_comand                                           1     1      0     646
                                              4 COMRAM     1     1      0
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (6) _lcd_send_byte                                        2     1      1     624
                                              2 COMRAM     2     1      1
                       _Delay100TCYx
                    _lcd_send_nibble
 ---------------------------------------------------------------------------------
 (7) _lcd_send_nibble                                      2     2      0      88
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (7) _Delay100TCYx                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Write_RTC                                            0     0      0    2277
                           _RtccWrOn
                      _RtccWriteDate
                      _RtccWriteTime
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1068
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) _RtccWriteTime                                       11     8      3     537
                                              0 COMRAM    11     8      3
                           _RtccWrOn
 ---------------------------------------------------------------------------------
 (3) _RtccWriteDate                                       13    10      3     672
                                              0 COMRAM    13    10      3
                           _RtccWrOn
 ---------------------------------------------------------------------------------
 (4) _RtccWrOn                                             2     2      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Setup
     _Write_RTC
       _RtccWrOn
       _RtccWriteDate
         _RtccWrOn
       _RtccWriteTime
         _RtccWrOn
       ___awdiv
     _lcd_comand
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
     _lcd_init
       _Delay1KTCYx
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
       _lcd_send_nibble
   _almacenarTiempo
     _CargoVueltas
     ___wmul
     _lcd_comand
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
     _lcd_gotoxy
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
     _lcd_putrs
       _lcd_putc
         _lcd_gotoxy
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_send_byte
           _Delay100TCYx
           _lcd_send_nibble
     _mostrarMejorVuelta
       _lcd_comand
         _lcd_send_byte
           _Delay100TCYx
           _lcd_send_nibble
       _lcd_gotoxy
         _lcd_send_byte
           _Delay100TCYx
           _lcd_send_nibble
       _lcd_putrs
         _lcd_putc
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
     _mostrarReloj
       _lcd_comand
         _lcd_send_byte
           _Delay100TCYx
           _lcd_send_nibble
       _lcd_gotoxy
         _lcd_send_byte
           _Delay100TCYx
           _lcd_send_nibble
       _lcd_putrs
         _lcd_putc
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
     _verificarNroVuelta
   _clickIniciar
     _lcd_comand
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
     _lcd_gotoxy
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
     _lcd_putrs
       _lcd_putc
         _lcd_gotoxy
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_send_byte
           _Delay100TCYx
           _lcd_send_nibble
   _continuarCronometrando
     _Write_RTC
       _RtccWrOn
       _RtccWriteDate
         _RtccWrOn
       _RtccWriteTime
         _RtccWrOn
       ___awdiv
     _almacenarTiempoParcial
       _CargoVueltas
       _verificarNroVuelta
     _lcd_gotoxy
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
     _lcd_putrs
       _lcd_putc
         _lcd_gotoxy
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_send_byte
           _Delay100TCYx
           _lcd_send_nibble
   _cronometrando
     _Read_RTC
       _RtccReadDate
       _RtccReadTime
     _mostrarReloj
       _lcd_comand
         _lcd_send_byte
           _Delay100TCYx
           _lcd_send_nibble
       _lcd_gotoxy
         _lcd_send_byte
           _Delay100TCYx
           _lcd_send_nibble
       _lcd_putrs
         _lcd_putc
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
   _deteniendoCronometro
   _inicializarCronometro
     _Write_RTC
       _RtccWrOn
       _RtccWriteDate
         _RtccWrOn
       _RtccWriteTime
         _RtccWrOn
       ___awdiv
     _lcd_comand
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
     _lcd_gotoxy
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
     _lcd_putrs
       _lcd_putc
         _lcd_gotoxy
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_send_byte
           _Delay100TCYx
           _lcd_send_nibble
   _mostrarCaratula
     _caratulaCronometro
       _lcd_comand
         _lcd_send_byte
           _Delay100TCYx
           _lcd_send_nibble
       _lcd_gotoxy
         _lcd_send_byte
           _Delay100TCYx
           _lcd_send_nibble
       _lcd_putrs
         _lcd_putc
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
   _tiempoParcial
     _mostrarReloj
       _lcd_comand
         _lcd_send_byte
           _Delay100TCYx
           _lcd_send_nibble
       _lcd_gotoxy
         _lcd_send_byte
           _Delay100TCYx
           _lcd_send_nibble
       _lcd_putrs
         _lcd_putc
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
   _vueltasAlmacenadasAdelante
     _mostrarVuelta
       _lcd_comand
         _lcd_send_byte
           _Delay100TCYx
           _lcd_send_nibble
       _lcd_gotoxy
         _lcd_send_byte
           _Delay100TCYx
           _lcd_send_nibble
       _lcd_putrs
         _lcd_putc
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
       _mostrarReloj
         _lcd_comand
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_gotoxy
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_putrs
           _lcd_putc
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
         _sprintf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           ___wmul
           _isdigit
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
   _vueltasAlmacenadasAtras
     _mostrarVuelta
       _lcd_comand
         _lcd_send_byte
           _Delay100TCYx
           _lcd_send_nibble
       _lcd_gotoxy
         _lcd_send_byte
           _Delay100TCYx
           _lcd_send_nibble
       _lcd_putrs
         _lcd_putc
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
       _mostrarReloj
         _lcd_comand
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_gotoxy
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_putrs
           _lcd_putc
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
         _sprintf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           ___wmul
           _isdigit
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EBF      0       0      35        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK14           C0      0       0      33        0.0%
BANK14              C0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      9D       5       98.1%
BITCOMRAM           5F      0       1       0        1.1%
COMRAM              5F     26      5F       1      100.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      FC       6        0.0%
DATA                 0      0      FC       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Fri Nov 10 19:18:51 2017

                                  _a 00B8                                    _b 00BA  
                                  _c 00BC                                    _i 00C2  
                                  _j 00C4                                    _k 00C6  
                                 l18 235A                                   l19 235C  
                     ?_lcd_send_byte 002F                         ___awdiv@sign 0032  
                ___wmul@multiplicand 002F     __size_of_vueltasAlmacenadasAtras 004C  
                        lcd_comand@d 0031                         __CFG_CP0$OFF 000000  
        __size_of_verificarNroVuelta 0032                                  l313 2324  
                                l344 211E                                  l338 2024  
                                l294 2262                                  l399 116E  
                                _dia 0055                                  _mes 005B  
               CargoVueltas@p_minuto 002F                                  wreg 000FE8  
     __end_of_almacenarTiempoParcial 176C                      RtccReadDate@pDt 002D  
                    ??_mostrarVuelta 0050                          lcd_gotoxy@x 0032  
                        lcd_gotoxy@y 0031                                 l1043 1F98  
                               l1053 2184                                 l2102 2192  
                               l2104 219E                                 l2112 21C2  
                               l2106 21AA                                 l2122 23D4  
                               l2202 0FD8                                 l2108 21B6  
                               l2140 1F66                                 l2220 1076  
                               l2204 0FEE                                 l2302 1918  
                               l1342 2406                                 l2150 1F8C  
                               l2142 1F6E                                 l2222 1098  
                               l2160 215A                                 l2240 10E8  
                               l2232 10C0                                 l2216 1070  
                               l2208 100C                                 l2410 161C  
                               l2402 1604                                 l2330 1968  
                               l2138 1F5C                                 l2162 2162  
                               l2250 1122                                 l2500 1B1C  
                               l2068 2418                                 l2244 110C  
                               l2236 10E4                                 l2228 10B4  
                               l2406 1610                                 l2334 1974  
                               l2510 1B44                                 l2094 23A4  
                               l2174 2054                                 l2166 2178  
                               l2158 2150                                 l2270 11C8  
                               l2246 1116                                 l2190 0FA6  
                               l2414 1E14                                 l2360 157E  
                               l2096 23AA                                 l2264 1174  
                               l2256 1144                                 l2272 11D4  
                               l2440 1C18                                 l2370 15AE  
                               l2354 1544                                 l2338 1980  
                               l2506 1B32                                 l2522 1B6E  
                               l2178 207E                                 l2258 114C  
                               l2274 11F0                                 l2364 1592  
                               l2292 18E8                                 l2508 1B3C  
                               l2540 1CD4                                 l2196 0FC0  
                               l2700 1A18                                 l2286 18BE  
                               l2526 1B7E                                 l2518 1B62  
                               l2198 0FCE                                 l2296 18FC  
                               l2536 1CCC                                 l2554 1CF8  
                               l2546 1CE4                                 l2494 1B0A  
                               l2902 203E                                 l2672 16D0  
                               l2666 164E                                 l2668 1658  
                               l2676 1742                                 l2918 212C  
                               l2942 22AA                                 l2866 146E  
                               l2858 1418                                 l2876 1494  
                               l2886 14CE                                 STR_1 0F3F  
                               STR_2 0F30                                 STR_3 0F0F  
                               STR_4 0F5C                                 STR_5 0F4E  
                               STR_6 0F4E                                 STR_7 0F90  
                               STR_8 0F78                                 STR_9 0F85  
                               u1100 1DF8                                 u1040 1DAA  
                               u1060 1DC2                                 u1220 2074  
                               u1118 1DFA                                 u1230 209E  
                               u1080 1DDC                                 u1058 1DAC  
                               u1227 206A                                 u2107 1FB6  
                               u1237 2094                                 u2117 1FCE  
                               u1078 1DC4                                 u2207 241A  
                               u2127 1D3A                                 u2047 2100  
                               u2137 1D52                                 u2057 2006  
                               u1098 1DDE                                 u2147 1EFC  
                               u2067 1AAE                                 u2157 1F12  
                               u2077 1BA2                                 u2167 1F38  
                               u2087 1BB8                                 u2177 14AC  
                               u2097 1C02                                 u1650 231C  
                               u2187 1998                                 u2197 2408  
                               u1990 2034                     ?_lcd_send_nibble 002D  
           __size_of_almacenarTiempo 015E                                 _anio 0053  
                               _flag 02F8                                 _fila 00FB  
                               _main 22A4                                 _hora 0059  
                               fsr0h 000FEA                                 indf0 000FEF  
                               fsr0l 000FE9                                 fsr2h 000FDA  
                               fsr1l 000FE1                                 indf2 000FDF  
                               fsr2l 000FD9                        __CFG_T1DIG$ON 000000  
                               prodh 000FF4                                 prodl 000FF3  
                               start 0000                CargoVueltas@p_segundo 0031  
                      __CFG_IESO$OFF 000000                     RtccReadDate@rTD0 0037  
                   RtccReadDate@rTD1 002F               __size_of_cronometrando 0040  
                 _sumaMinutosVueltas 0019                         ___param_bank 000010  
                    RtccReadTime@pTm 002D                    ??_mostrarCaratula 0037  
                        _Delay1KTCYx 2404                        __CFG_PLLDIV$1 000000  
                              ?_main 002D                      __end_of___awdiv 1B8A  
                              STR_10 0F20                                STR_11 0F6A  
              __size_of_Delay100TCYx 0012                      ___awdiv@divisor 002F  
                    __end_of___lwdiv 1FA2                      __end_of___lwmod 218E  
                    ___awdiv@counter 0031                                _TRISA 000F92  
                              _TRISB 000F93                                _TRISC 000F94  
                     __CFG_FCMEN$OFF 000000                                _Setup 2264  
               __end_of_clickIniciar 1F46                      __end_of_dpowers 0F0B  
                              _mes_d 00F3                                _mes_u 00F4  
                    __end_of_isdigit 23DE               CargoVueltas@p_milesima 0033  
                     __pbitbssCOMRAM 02F8                                tablat 000FF5  
                       lcd_putrs@ptr 0035                                status 000FD8  
                    __end_of_sprintf 1200                _inicializarCronometro 1B8A  
        __size_of_caratulaCronometro 0034              __CFG_DSWDTOSC$INTOSCREF 000000  
        __size_of_mostrarMejorVuelta 00C8                      __initialization 1E82  
                       _Delay100TCYx 2416                __size_of_CargoVueltas 0050  
                       __end_of_main 22D8                      ??_lcd_send_byte 0030  
                   RtccReadTime@rTD0 0037                     RtccReadTime@rTD1 002F  
                   __end_of_Read_RTC 1880                               ??_main 0053  
                      __activetblptr 000002                     __end_of_RtccWrOn 243A  
                      _cronometrando 2224                               ?_Setup 002D  
                             _ADCON0 000FC2                               _ADCON1 000FC1  
                             _EECON2 000FA7                               _ANCON0 000F48  
                   ___awdiv@dividend 002D                       __CFG_WDTEN$OFF 000000  
                   RtccWriteDate@pDt 002D                               _RTCCFG 000F3F  
                     __CFG_WPCFG$OFF 000000                         _CargoVueltas 20A6  
                     __CFG_WPDIS$OFF 000000                       __CFG_XINST$OFF 000000  
                  ??_almacenarTiempo 0052                     __end_of_lcd_init 1D26  
                   __end_of_lcd_putc 21DA                               ___wmul 2370  
                          ??___awdiv 0031                       __CFG_STVREN$ON 000000  
                             _diasem 0057                               _anio_d 00EC  
                             _anio_u 00ED              ?_continuarCronometrando 002D  
                          ??___lwdiv 0031              _vueltasAlmacenadasAtras 20F6  
                          ??___lwmod 0038                               _hora_d 00F1  
                             _hora_u 00F2                               clear_0 1E88  
                             clear_1 1E96                     ___awdiv@quotient 0033  
                             _minuto 000D                __end_of_RtccWriteDate 1628  
              __end_of_RtccWriteTime 198C                     RtccWriteTime@pTm 002D  
                     ?_cronometrando 002D                         __pdataCOMRAM 0053  
                          ??_isdigit 002D                         __mediumconst 0000  
                             tblptrh 000FF7                               tblptrl 000FF6  
                             tblptru 000FF8         ??_vueltasAlmacenadasAdelante 0051  
                          ??_sprintf 0043               ?_inicializarCronometro 002D  
                         __accesstop 0060              __end_of__initialization 1EDC  
                 __size_of_Write_RTC 0184              CargoVueltas@p_nrovuelta 002D  
                      ___rparam_used 000001                       __pcstackCOMRAM 002D  
     __end_of_continuarCronometrando 1D9E                        __end_of_Setup 22A4  
                       __pidataBANK0 2454  __size_of_vueltasAlmacenadasAdelante 0056  
                    __CFG_DSWDTPS$G2 000000                __size_of_clickIniciar 0060  
                    __CFG_OSC$INTOSC 000000                     _milesimasDisplay 000B  
                            ??_Setup 003A                    lcd_gotoxy@address 0033  
                 __size_of_lcd_putrs 0054                         sprintf@width 004D  
      __size_of_deteniendoCronometro 005A                           __pbssBANK0 0060  
                          ?_Read_RTC 002D                           _dia_semana 00EE  
                    _mostrarCaratula 23DE            RtccWriteTime@tempHourWDay 0036  
          ??_vueltasAlmacenadasAtras 0051                    _segundosParciales 0013  
                          ?_RtccWrOn 002D                       lcd_send_byte@n 002F  
                       _clickIniciar 1EE6                __end_of_tiempoParcial 2404  
                            ?___wmul 002D                        ?_RtccReadDate 002D  
                  _cambioEstadoAbajo 00BE                        ?_RtccReadTime 002D  
         __end_of_verificarNroVuelta 233E                         ?_Delay1KTCYx 002D  
                    ??_cronometrando 0050                    __end_of_Write_RTC 1384  
                         _lcd_comand 243A                           _lcd_gotoxy 2398  
                            _RTCVALH 000F99                              _RTCVALL 000F98  
              __end_of_mostrarVuelta 1AF4                            ?_lcd_init 002D  
                          ?_lcd_putc 002D                           _vMilesimas 0060  
                         ??_Read_RTC 003F                              __Hparam 0000  
                            __Lparam 0000                   _unaMilesimaParcial 00D4  
           __size_of_lcd_send_nibble 0076                           ??_RtccWrOn 002D  
                     ??_RtccReadDate 002F                       ??_RtccReadTime 002F  
                            ___awdiv 1AF4                    __end_of_lcd_putrs 20A6  
                    __size_of___wmul 0028                              ___lwdiv 1F46  
                            ___lwmod 2142                         __psmallconst 0F00  
                        _RtccTimeVal 00B4                              __pcinit 1E82  
                            _fecha_d 00EF                              _fecha_u 00F0  
                            __ramtop 0F00                     _unSegundoParcial 00D2  
                            __ptext0 22A4                              __ptext1 20F6  
                            __ptext2 1FFC                              __ptext3 1A54  
                            __ptext4 23F2                              __ptext5 23DE  
                            __ptext6 22D8                              __ptext7 1B8A  
                            __ptext8 1FA2                              __ptext9 2224  
                            _buffer2 00D6                              _columna 00F9  
                          _T1CONbits 000FCD                              _dpowers 0F01  
            almacenarTiempoParcial@i 0037                              _isdigit 23BC  
 __end_of_vueltasAlmacenadasAdelante 2052           _vueltasAlmacenadasAdelante 1FFC  
    __end_of_vueltasAlmacenadasAtras 2142                              _segundo 0011  
            __end_of_mostrarCaratula 23F2                              _sprintf 0F9C  
                         ??_lcd_init 0031                           ??_lcd_putc 0034  
                    _almacenarTiempo 1384                 end_of_initialization 1EDC  
         __end_of_caratulaCronometro 230C                        ?_mostrarReloj 002D  
               lcd_send_byte@address 0030                        __Lmediumconst 0000  
         __end_of_mostrarMejorVuelta 1A54                              postdec1 000FE5  
                            postdec2 000FDD                              postinc0 000FEE  
                            postinc2 000FDE                __end_of_lcd_send_byte 2370  
           ??_almacenarTiempoParcial 0035                            _PORTAbits 000F80  
                   __CFG_DSBOREN$OFF 000000                          ?_lcd_comand 002D  
                   __CFG_CPUDIV$OSC1 000000                            _TRISBbits 000F93  
                        ?_lcd_gotoxy 0031              ??_inicializarCronometro 003A  
                    _LCD_INIT_STRING 0F0B                       ??_mostrarReloj 0050  
                   __CFG_IOL1WAY$OFF 000000            RtccWriteDate@tempDayMonth 0036  
                __CFG_MSSP7B_EN$MSK7 000000                     Delay100TCYx@unit 002D  
                     __end_of___wmul 2398                        __pidataCOMRAM 2448  
          RtccWriteDate@tempHourWDay 0038                    ??_lcd_send_nibble 002D  
               __size_of_Delay1KTCYx 0012                     __CFG_DSWDTEN$OFF 000000  
            __end_of_almacenarTiempo 14E2                  start_initialization 1E82  
                _sumaSegundosVueltas 001B                     ?_mostrarCaratula 002D  
               __end_of_RtccReadDate 1CA6                 __end_of_RtccReadTime 1E82  
                    _unMinutoParcial 001F                 RtccWriteTime@wasAlrm 0032  
               RtccWriteTime@wasWrEn 0033               __size_of_RtccWriteDate 0146  
                    RtccWriteDate@di 002F               __size_of_RtccWriteTime 010C  
                  __size_of_Read_RTC 0114                  __size_of_lcd_comand 000E  
                __size_of_lcd_gotoxy 0024         __end_of_deteniendoCronometro 1FFC  
                           ??___wmul 0031                          __pdataBANK0 00F9  
                  __size_of_RtccWrOn 0012                         _estadoCentro 0003  
                    RtccWriteTime@di 002F                     __CFG_LPT1OSC$OFF 000000  
    __size_of_almacenarTiempoParcial 0144                          _ALRMCFGbits 000F91  
            __end_of_LCD_INIT_STRING 0F0F                          __pbssCOMRAM 0001  
                          _Write_RTC 1200                   _verificarNroVuelta 230C  
                       _isdigit$1895 002E                      Delay1KTCYx@unit 002D  
                  __size_of_lcd_init 0080                          sprintf@flag 0049  
                  __size_of_lcd_putc 004C                  ?_verificarNroVuelta 002D  
                        sprintf@prec 004C                            __pnvBANK0 00EC  
                   ___lwdiv@dividend 002D                        ?_Delay100TCYx 002D  
                          _flajReloj 0005                             ?___awdiv 002D  
                       _cursorVuelta 0001                             ?___lwdiv 002D  
                           ?___lwmod 0034              RtccWriteTime@tempMinSec 0034  
               __end_of_mostrarReloj 2224                 ??_verificarNroVuelta 002D  
                          _lcd_putrs 2052                        _RtccWriteDate 14E2  
                        __smallconst 0F00                        _RtccWriteTime 1880  
              __end_of_cronometrando 2264                             ?_isdigit 002D  
                   ?_almacenarTiempo 002D                 __CFG_RTCOSC$T1OSCREF 000000  
        ?_vueltasAlmacenadasAdelante 002D                            _vSegundos 0088  
                     __size_of_Setup 0040                           ?_Write_RTC 002D  
                      _segundoVuelta 00CE                     ___lwdiv@quotient 0031  
                           ?_sprintf 0039               __size_of_tiempoParcial 0012  
                   _RtccAlrmTimeDate 009C               _almacenarTiempoParcial 1628  
                      ?_CargoVueltas 002D                       ___wmul@product 0031  
           ??_continuarCronometrando 003A                             _LATBbits 000F8A  
           ?_vueltasAlmacenadasAtras 002D                             _PIE3bits 000FA3  
                          _unSegundo 0021                            _segundo_d 00F7  
                     ??_Delay100TCYx 002D                            _segundo_u 00F8  
                          _nroVuelta 000F                     __CFG_WDTPS$32768 000000  
                 _caratulaCronometro 22D8                   RtccWriteDate@wasOn 0031  
             __size_of_mostrarVuelta 00A0                   _mostrarMejorVuelta 198C  
                 _Rtcc_read_TimeDate 00AC                      _ultimoRecorrido 005D  
                     ?_RtccWriteDate 002D                 _sumaMilesimasVueltas 0017  
                         ?_lcd_putrs 0035                    ___wmul@multiplier 002D  
                     ?_RtccWriteTime 002D                  ?_caratulaCronometro 002D  
                          lcd_init@i 0031                __size_of_RtccReadDate 008E  
                       ??_lcd_comand 0031                            lcd_putc@c 0034  
              __size_of_RtccReadTime 006E                  ?_mostrarMejorVuelta 002D  
                       ??_lcd_gotoxy 0032                            copy_data0 1EB0  
                          copy_data1 1ED0                 _deteniendoCronometro 1FA2  
     __size_of_inicializarCronometro 008E        __end_of_inicializarCronometro 1C18  
                     ??_CargoVueltas 0035                             _Read_RTC 176C  
               ??_caratulaCronometro 0037                         _minutoVuelta 00EA  
                    _lcd_send_nibble 1D9E                             __Hrparam 0000  
               ??_mostrarMejorVuelta 0050                             _RtccDate 0025  
                           __Lrparam 0000                             _RtccTime 0029  
                           _RtccWrOn 2428                   __end_of_lcd_comand 2448  
                      _tiempoParcial 23F2                   __end_of_lcd_gotoxy 23BC  
                       _RtccReadDate 1C18                     __size_of___awdiv 0096  
                       _RtccReadTime 1E14                     __size_of___lwdiv 005C  
                   __size_of___lwmod 004C                       _milesimaVuelta 0009  
               _estadoAnteriorCentro 00C0                          _mejorVuelta 00C8  
                       _RtccTimeDate 00A4                           sprintf@val 004A  
                    _segundosDisplay 00D0                     __size_of_isdigit 0022  
                    ___lwdiv@divisor 002F                          ??_Write_RTC 003A  
                    ___lwdiv@counter 0033                             __ptext10 176C  
                           __ptext11 1E14                             __ptext20 0F9C  
                           __ptext12 1C18                             __ptext21 23BC  
                           __ptext13 1D26                             __ptext30 1CA6  
                           __ptext22 2370                             __ptext14 1628  
                           __ptext31 2404                             __ptext23 2142  
                           __ptext15 1EE6                             __ptext40 2428  
                           __ptext32 243A                             __ptext24 1F46  
                           __ptext16 1384                             __ptext33 233E  
                           __ptext25 2052                             __ptext17 230C  
                           __ptext34 1D9E                             __ptext26 218E  
                           __ptext18 21DA                             __ptext35 2416  
                           __ptext27 2398                             __ptext19 198C  
                           __ptext36 1200                             __ptext28 20A6  
                           __ptext37 1AF4                             __ptext29 2264  
                           __ptext38 1880                             __ptext39 14E2  
              ?_deteniendoCronometro 002D                             _lcd_init 1CA6  
                           _lcd_putc 218E                        _mostrarVuelta 1A54  
                   __size_of_sprintf 0264                      _segundosTotales 0015  
                           _vMinutos 0074               __size_of_lcd_send_byte 0032  
                      __size_of_main 0034      __size_of_continuarCronometrando 0078  
                           _milesima 0007                             _minuto_d 00F5  
                           _minuto_u 00F6                             _unMinuto 001D  
                      ?_clickIniciar 002D                __size_of_mostrarReloj 004A  
                     ?_tiempoParcial 002D                        ??_Delay1KTCYx 002D  
                    ??_RtccWriteDate 0030                      ??_RtccWriteTime 0030  
                      _primeraVuelta 00CC                          ??_lcd_putrs 0037  
                        _OSCTUNEbits 000F9B                           _INTCONbits 000FF2  
                 RtccWriteTime@wasOn 0031                 __end_of_Delay100TCYx 2428  
                           isdigit@c 002F                       ?_mostrarVuelta 002D  
                          sprintf@ap 0047              __end_of_lcd_send_nibble 1E14  
                          sprintf@sp 0039                     ___lwmod@dividend 0034  
                       _mostrarReloj 21DA                          _unaMilesima 0023  
           __size_of_mostrarCaratula 0014                           _OSCCONbits 000FD3  
                     ??_clickIniciar 0037                RtccWriteDate@tempYear 0033  
                      _lcd_send_byte 233E                         _numeroVuelta 00CA  
               __end_of_CargoVueltas 20F6                           _RTCCFGbits 000F3F  
             _continuarCronometrando 1D26                             sprintf@c 004F  
                           sprintf@f 003B                      ___lwmod@divisor 0036  
                __end_of_Delay1KTCYx 2416                      ___lwmod@counter 0038  
               RtccWriteDate@wasAlrm 0032                 RtccWriteDate@wasWrEn 0035  
             ??_deteniendoCronometro 002D              ?_almacenarTiempoParcial 002D  
                    ??_tiempoParcial 0050                lcd_send_nibble@nibble 002E  
